using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace Proyecto_Compiladores_2020.Data
{
	class Parser
	{
		private static Parser _instance = null;
		public static Parser Instance
		{
			get
			{
				if (_instance == null) _instance = new Parser();
				return _instance;
			}
		}
		//programar cada estado de la tabla
		// obtener la pila 
		int pasos = 0;
		static Stack<int> StackDeConsumo = new Stack<int>();
		static Stack<KeyValuePair<string, string>> StackDeEntrada = new Stack<KeyValuePair<string, string>>();
		static Stack<string> StackDeLineasYColumnas = new Stack<string>();
		public static List<string> tokensNoEsperados = new List<string>();
		public static List<KeyValuePair<string, string>> tokensAceptados = new List<KeyValuePair<string, string>>();
		string Simbolos = "";
		Dictionary<int, string> Reducciones = new Dictionary<int, string>();
		static List<string> Pasos = new List<string>();
		static List<KeyValuePair<string, string>> Entrada;
		static List<KeyValuePair<string, string>> LineasYColumnas;
		static int ContadorErrores = 1;
		string reduccion = "";
		string reducido = "";
		int SimbolosQueSeQuedan = 0;
		string aux = "";
		int unStack = 0;
		Dictionary<int, Dictionary<string, string>> EstadoDeError = new Dictionary<int, Dictionary<string, string>>();

		public void Parser(List<KeyValuePair<string, string>> _Aceptados, List<string> LineCol)
		{
			StackDeConsumo.Push(0);
			Entrada = _Aceptados;
			StackDeEntrada.Push(new KeyValuePair<string, string>("$", "$"));
			StackDeLineasYColumnas.Push("$");
			for (int i = _Aceptados.Count - 1; i >= 0; i--)
			{
				//StackDeEntrada.Push(_Aceptados[i].Key);
				StackDeEntrada.Push(_Aceptados[i]);
			}
			for (int i = LineCol.Count - 1; i >= 0; i--)
			{
				StackDeLineasYColumnas.Push(LineCol[i]);
			}

			var actual = StackDeEntrada.Peek();
			CargarDiccionario();
			//while que se analize mientras la pila de entrada .peek != $
			CargarEstadosDeError();
			var CadenaDePrueba = "";
			for (int i = 0; i < StackDeEntrada.Count; i++)
			{
				CadenaDePrueba += $" {StackDeEntrada.ElementAt(i).Key}";
				CadenaDePrueba = CadenaDePrueba.Trim();
			}
			//orden de bloque interior de la gramatica
			// lista de tokens aceptados
			var resultado = true;

			while (StackDeEntrada.Count() != 0)
			{
				if (StackDeEntrada.Peek().Key == "$")
				{
					resultado = true;
					while (StackDeConsumo.Count() != 2)
					{
						IrA(StackDeConsumo.Peek(), StackDeEntrada.Peek().Key);

					}
					break;
				}
				else
				{

					IrA(StackDeConsumo.Peek(), StackDeEntrada.Peek().Key);
				}

			}


			if (resultado)
			{
				Console.BackgroundColor = ConsoleColor.White;
				Console.ForegroundColor = ConsoleColor.DarkGreen;
				Console.WriteLine("Cadena Aceptada!");
				Console.ForegroundColor = ConsoleColor.White;
				Console.BackgroundColor = ConsoleColor.Black;

			}
			else
			{
				Console.BackgroundColor = ConsoleColor.White;
				Console.ForegroundColor = ConsoleColor.DarkRed;
				Console.WriteLine("Cadena No Aceptada");
				Console.ForegroundColor = ConsoleColor.White;
				Console.BackgroundColor = ConsoleColor.Black;

			}
			var xdd = 0;
		}

		void CargarEstadosDeError()
		{
			EstadoDeError.Add(0, new Dictionary<string, string>());
			EstadoDeError[0].Add("ident", "9");
			EstadoDeError[0].Add("void", "4");
			EstadoDeError[0].Add("static", "5");
			EstadoDeError[0].Add("class", "6");
			EstadoDeError[0].Add("interface", "7");
			EstadoDeError[0].Add("int", "10");
			EstadoDeError[0].Add("double", "11");
			EstadoDeError[0].Add("boolean", "12");
			EstadoDeError[0].Add("string", "13");
			EstadoDeError.Add(1, new Dictionary<string, string>());
			EstadoDeError.Add(2, new Dictionary<string, string>());
			EstadoDeError[2].Add("ident", "9");
			EstadoDeError[2].Add("void", "4");
			EstadoDeError[2].Add("static", "5");
			EstadoDeError[2].Add("class", "6");
			EstadoDeError[2].Add("interface", "7");
			EstadoDeError[2].Add("int", "10");
			EstadoDeError[2].Add("double", "11");
			EstadoDeError[2].Add("boolean", "12");
			EstadoDeError[2].Add("string", "13");
			EstadoDeError[2].Add("$", "2");
			EstadoDeError.Add(3, new Dictionary<string, string>());
			EstadoDeError[3].Add("ident", "15");
			EstadoDeError[3].Add("[]", "16");
			EstadoDeError.Add(4, new Dictionary<string, string>());
			EstadoDeError[4].Add("ident", "17");
			EstadoDeError.Add(5, new Dictionary<string, string>());
			EstadoDeError[5].Add("int", "10");
			EstadoDeError[5].Add("double", "11");
			EstadoDeError[5].Add("boolean", "12");
			EstadoDeError[5].Add("string", "13");
			EstadoDeError.Add(6, new Dictionary<string, string>());
			EstadoDeError[6].Add("ident", "19");
			EstadoDeError.Add(7, new Dictionary<string, string>());
			EstadoDeError[7].Add("ident", "20");
			EstadoDeError.Add(8, new Dictionary<string, string>());
			EstadoDeError[8].Add("ident", "9");
			EstadoDeError[8].Add("[]", "9");
			EstadoDeError.Add(9, new Dictionary<string, string>());
			EstadoDeError[9].Add("ident", "10");
			EstadoDeError[9].Add("[]", "10");
			EstadoDeError.Add(10, new Dictionary<string, string>());
			EstadoDeError[10].Add("ident", "21");
			EstadoDeError[10].Add("[]", "21");
			EstadoDeError.Add(11, new Dictionary<string, string>());
			EstadoDeError[11].Add("ident", "22");
			EstadoDeError[11].Add("[]", "22");
			EstadoDeError.Add(12, new Dictionary<string, string>());
			EstadoDeError[12].Add("ident", "23");
			EstadoDeError[12].Add("[]", "23");
			EstadoDeError.Add(13, new Dictionary<string, string>());
			EstadoDeError[13].Add("ident", "24");
			EstadoDeError[13].Add("[]", "24");
			EstadoDeError.Add(14, new Dictionary<string, string>());
			EstadoDeError[14].Add("$", "1");
			EstadoDeError.Add(15, new Dictionary<string, string>());
			EstadoDeError[15].Add(";", "21");
			EstadoDeError[15].Add("(", "22");
			EstadoDeError.Add(16, new Dictionary<string, string>());
			EstadoDeError[16].Add("ident", "11");
			EstadoDeError[16].Add("[]", "11");
			EstadoDeError.Add(17, new Dictionary<string, string>());
			EstadoDeError[17].Add("(", "23");
			EstadoDeError.Add(18, new Dictionary<string, string>());
			EstadoDeError[18].Add("ident", "24");
			EstadoDeError.Add(19, new Dictionary<string, string>());
			EstadoDeError[19].Add("ident", "26");
			EstadoDeError[19].Add("void", "26");
			EstadoDeError[19].Add("static", "26");
			EstadoDeError[19].Add("class", "26");
			EstadoDeError[19].Add("{", "26");
			EstadoDeError[19].Add("interface", "26");
			EstadoDeError[19].Add("int", "26");
			EstadoDeError[19].Add("double", "26");
			EstadoDeError[19].Add("boolean", "26");
			EstadoDeError[19].Add("string", "26");
			EstadoDeError[19].Add("extends", "26");
			EstadoDeError[19].Add("implements", "26");
			EstadoDeError[19].Add("$", "26");
			EstadoDeError.Add(20, new Dictionary<string, string>());
			EstadoDeError[20].Add("{", "27");
			EstadoDeError.Add(21, new Dictionary<string, string>());
			EstadoDeError[21].Add("ident", "3");
			EstadoDeError[21].Add("void", "3");
			EstadoDeError[21].Add("static", "3");
			EstadoDeError[21].Add("class", "3");
			EstadoDeError[21].Add("interface", "3");
			EstadoDeError[21].Add("int", "3");
			EstadoDeError[21].Add("double", "3");
			EstadoDeError[21].Add("boolean", "3");
			EstadoDeError[21].Add("string", "3");
			EstadoDeError[21].Add("$", "3");
			EstadoDeError.Add(22, new Dictionary<string, string>());
			EstadoDeError[22].Add("ident", "9");
			EstadoDeError[22].Add("int", "10");
			EstadoDeError[22].Add("double", "11");
			EstadoDeError[22].Add("boolean", "12");
			EstadoDeError[22].Add("string", "13");
			EstadoDeError.Add(23, new Dictionary<string, string>());
			EstadoDeError[23].Add("ident", "9");
			EstadoDeError[23].Add("int", "10");
			EstadoDeError[23].Add("double", "11");
			EstadoDeError[23].Add("boolean", "12");
			EstadoDeError[23].Add("string", "13");
			EstadoDeError.Add(24, new Dictionary<string, string>());
			EstadoDeError[24].Add(";", "31");
			EstadoDeError.Add(25, new Dictionary<string, string>());
			EstadoDeError[25].Add("{", "28");
			EstadoDeError[25].Add("implements", "33");
			EstadoDeError.Add(26, new Dictionary<string, string>());
			EstadoDeError[26].Add("ident", "34");
			EstadoDeError.Add(27, new Dictionary<string, string>());
			EstadoDeError[27].Add("ident", "9");
			EstadoDeError[27].Add("void", "38");
			EstadoDeError[27].Add("}", "38");
			EstadoDeError[27].Add("int", "10");
			EstadoDeError[27].Add("double", "11");
			EstadoDeError[27].Add("boolean", "12");
			EstadoDeError[27].Add("string", "13");
			EstadoDeError.Add(28, new Dictionary<string, string>());
			EstadoDeError[28].Add(")", "39");
			EstadoDeError.Add(29, new Dictionary<string, string>());
			EstadoDeError[29].Add("ident", "40");
			EstadoDeError[29].Add("[]", "16");
			EstadoDeError.Add(30, new Dictionary<string, string>());
			EstadoDeError[30].Add(")", "41");
			EstadoDeError.Add(31, new Dictionary<string, string>());
			EstadoDeError[31].Add("ident", "6");
			EstadoDeError[31].Add("void", "6");
			EstadoDeError[31].Add("static", "6");
			EstadoDeError[31].Add("class", "6");
			EstadoDeError[31].Add("interface", "6");
			EstadoDeError[31].Add("int", "6");
			EstadoDeError[31].Add("double", "6");
			EstadoDeError[31].Add("boolean", "6");
			EstadoDeError[31].Add("string", "6");
			EstadoDeError[31].Add("$", "6");
			EstadoDeError.Add(32, new Dictionary<string, string>());
			EstadoDeError[32].Add("{", "42");
			EstadoDeError.Add(33, new Dictionary<string, string>());
			EstadoDeError[33].Add("ident", "43");
			EstadoDeError.Add(34, new Dictionary<string, string>());
			EstadoDeError[34].Add("ident", "25");
			EstadoDeError[34].Add("void", "25");
			EstadoDeError[34].Add("static", "25");
			EstadoDeError[34].Add("class", "25");
			EstadoDeError[34].Add("{", "25");
			EstadoDeError[34].Add("interface", "25");
			EstadoDeError[34].Add("int", "25");
			EstadoDeError[34].Add("double", "25");
			EstadoDeError[34].Add("boolean", "25");
			EstadoDeError[34].Add("string", "25");
			EstadoDeError[34].Add("implements", "25");
			EstadoDeError[34].Add("$", "25");
			EstadoDeError.Add(35, new Dictionary<string, string>());
			EstadoDeError[35].Add("}", "44");
			EstadoDeError.Add(36, new Dictionary<string, string>());
			EstadoDeError[36].Add("ident", "9");
			EstadoDeError[36].Add("void", "38");
			EstadoDeError[36].Add("}", "38");
			EstadoDeError[36].Add("int", "10");
			EstadoDeError[36].Add("double", "11");
			EstadoDeError[36].Add("boolean", "12");
			EstadoDeError[36].Add("string", "13");
			EstadoDeError.Add(37, new Dictionary<string, string>());
			EstadoDeError[37].Add("ident", "46");
			EstadoDeError[37].Add("[]", "16");
			EstadoDeError.Add(38, new Dictionary<string, string>());
			EstadoDeError[38].Add("ident", "47");
			EstadoDeError.Add(39, new Dictionary<string, string>());
			EstadoDeError[39].Add("{", "49");
			EstadoDeError.Add(40, new Dictionary<string, string>());
			EstadoDeError[40].Add(")", "13");
			EstadoDeError[40].Add(",", "50");
			EstadoDeError.Add(41, new Dictionary<string, string>());
			EstadoDeError[41].Add("{", "49");
			EstadoDeError.Add(42, new Dictionary<string, string>());
			EstadoDeError[42].Add("ident", "9");
			EstadoDeError[42].Add("void", "55");
			EstadoDeError[42].Add("static", "56");
			EstadoDeError[42].Add("}", "32");
			EstadoDeError[42].Add("int", "10");
			EstadoDeError[42].Add("double", "11");
			EstadoDeError[42].Add("boolean", "12");
			EstadoDeError[42].Add("string", "13");
			EstadoDeError.Add(43, new Dictionary<string, string>());
			EstadoDeError[43].Add("{", "30");
			EstadoDeError[43].Add(",", "58");
			EstadoDeError.Add(44, new Dictionary<string, string>());
			EstadoDeError[44].Add("ident", "8");
			EstadoDeError[44].Add("void", "8");
			EstadoDeError[44].Add("static", "8");
			EstadoDeError[44].Add("class", "8");
			EstadoDeError[44].Add("interface", "8");
			EstadoDeError[44].Add("int", "8");
			EstadoDeError[44].Add("double", "8");
			EstadoDeError[44].Add("boolean", "8");
			EstadoDeError[44].Add("string", "8");
			EstadoDeError[44].Add("$", "8");
			EstadoDeError.Add(45, new Dictionary<string, string>());
			EstadoDeError[45].Add("}", "37");
			EstadoDeError.Add(46, new Dictionary<string, string>());
			EstadoDeError[46].Add("(", "59");
			EstadoDeError.Add(47, new Dictionary<string, string>());
			EstadoDeError[47].Add("(", "60");
			EstadoDeError.Add(48, new Dictionary<string, string>());
			EstadoDeError[48].Add("ident", "4");
			EstadoDeError[48].Add("void", "4");
			EstadoDeError[48].Add("static", "4");
			EstadoDeError[48].Add("class", "4");
			EstadoDeError[48].Add("interface", "4");
			EstadoDeError[48].Add("int", "4");
			EstadoDeError[48].Add("double", "4");
			EstadoDeError[48].Add("boolean", "4");
			EstadoDeError[48].Add("string", "4");
			EstadoDeError[48].Add("$", "4");
			EstadoDeError.Add(49, new Dictionary<string, string>());
			EstadoDeError[49].Add("ident", "65");
			EstadoDeError[49].Add(";", "67");
			EstadoDeError[49].Add("(", "80");
			EstadoDeError[49].Add("static", "63");
			EstadoDeError[49].Add("{", "49");
			EstadoDeError[49].Add("}", "16");
			EstadoDeError[49].Add("int", "10");
			EstadoDeError[49].Add("double", "11");
			EstadoDeError[49].Add("boolean", "12");
			EstadoDeError[49].Add("string", "13");
			EstadoDeError[49].Add("if", "68");
			EstadoDeError[49].Add("while", "69");
			EstadoDeError[49].Add("for", "70");
			EstadoDeError[49].Add("break", "71");
			EstadoDeError[49].Add("return", "72");
			EstadoDeError[49].Add("System", "73");
			EstadoDeError[49].Add("-", "75");
			EstadoDeError[49].Add("!", "76");
			EstadoDeError[49].Add("New", "77");
			EstadoDeError[49].Add("this", "79");
			EstadoDeError[49].Add("intConstant", "81");
			EstadoDeError[49].Add("stringConstant", "82");
			EstadoDeError[49].Add("boolConstant", "83");
			EstadoDeError[49].Add("doubleConstant", "84");
			EstadoDeError[49].Add("null", "85");
			EstadoDeError.Add(50, new Dictionary<string, string>());
			EstadoDeError[50].Add("ident", "9");
			EstadoDeError[50].Add("int", "10");
			EstadoDeError[50].Add("double", "11");
			EstadoDeError[50].Add("boolean", "12");
			EstadoDeError[50].Add("string", "13");
			EstadoDeError.Add(51, new Dictionary<string, string>());
			EstadoDeError[51].Add("ident", "5");
			EstadoDeError[51].Add("void", "5");
			EstadoDeError[51].Add("static", "5");
			EstadoDeError[51].Add("class", "5");
			EstadoDeError[51].Add("interface", "5");
			EstadoDeError[51].Add("int", "5");
			EstadoDeError[51].Add("double", "5");
			EstadoDeError[51].Add("boolean", "5");
			EstadoDeError[51].Add("string", "5");
			EstadoDeError[51].Add("$", "5");
			EstadoDeError.Add(52, new Dictionary<string, string>());
			EstadoDeError[52].Add("}", "87");
			EstadoDeError.Add(53, new Dictionary<string, string>());
			EstadoDeError[53].Add("ident", "9");
			EstadoDeError[53].Add("void", "55");
			EstadoDeError[53].Add("static", "56");
			EstadoDeError[53].Add("}", "32");
			EstadoDeError[53].Add("int", "10");
			EstadoDeError[53].Add("double", "11");
			EstadoDeError[53].Add("boolean", "12");
			EstadoDeError[53].Add("string", "13");
			EstadoDeError.Add(54, new Dictionary<string, string>());
			EstadoDeError[54].Add("ident", "89");
			EstadoDeError[54].Add("[]", "16");
			EstadoDeError.Add(55, new Dictionary<string, string>());
			EstadoDeError[55].Add("ident", "90");
			EstadoDeError.Add(56, new Dictionary<string, string>());
			EstadoDeError[56].Add("int", "10");
			EstadoDeError[56].Add("double", "11");
			EstadoDeError[56].Add("boolean", "12");
			EstadoDeError[56].Add("string", "13");
			EstadoDeError.Add(57, new Dictionary<string, string>());
			EstadoDeError[57].Add("{", "27");
			EstadoDeError.Add(58, new Dictionary<string, string>());
			EstadoDeError[58].Add("ident", "92");
			EstadoDeError.Add(59, new Dictionary<string, string>());
			EstadoDeError[59].Add("ident", "9");
			EstadoDeError[59].Add("int", "10");
			EstadoDeError[59].Add("double", "11");
			EstadoDeError[59].Add("boolean", "12");
			EstadoDeError[59].Add("string", "13");
			EstadoDeError.Add(60, new Dictionary<string, string>());
			EstadoDeError[60].Add("ident", "9");
			EstadoDeError[60].Add("int", "10");
			EstadoDeError[60].Add("double", "11");
			EstadoDeError[60].Add("boolean", "12");
			EstadoDeError[60].Add("string", "13");
			EstadoDeError.Add(61, new Dictionary<string, string>());
			EstadoDeError[61].Add("}", "95");
			EstadoDeError.Add(62, new Dictionary<string, string>());
			EstadoDeError[62].Add("ident", "96");
			EstadoDeError[62].Add("[]", "16");
			EstadoDeError.Add(63, new Dictionary<string, string>());
			EstadoDeError[63].Add("int", "10");
			EstadoDeError[63].Add("double", "11");
			EstadoDeError[63].Add("boolean", "12");
			EstadoDeError[63].Add("string", "13");
			EstadoDeError.Add(64, new Dictionary<string, string>());
			EstadoDeError[64].Add("ident", "65");
			EstadoDeError[64].Add(";", "67");
			EstadoDeError[64].Add("(", "80");
			EstadoDeError[64].Add("static", "63");
			EstadoDeError[64].Add("{", "49");
			EstadoDeError[64].Add("}", "16");
			EstadoDeError[64].Add("int", "10");
			EstadoDeError[64].Add("double", "11");
			EstadoDeError[64].Add("boolean", "12");
			EstadoDeError[64].Add("string", "13");
			EstadoDeError[64].Add("if", "68");
			EstadoDeError[64].Add("while", "69");
			EstadoDeError[64].Add("for", "70");
			EstadoDeError[64].Add("break", "71");
			EstadoDeError[64].Add("return", "72");
			EstadoDeError[64].Add("System", "73");
			EstadoDeError[64].Add("-", "75");
			EstadoDeError[64].Add("!", "76");
			EstadoDeError[64].Add("New", "77");
			EstadoDeError[64].Add("this", "79");
			EstadoDeError[64].Add("intConstant", "81");
			EstadoDeError[64].Add("stringConstant", "82");
			EstadoDeError[64].Add("boolConstant", "83");
			EstadoDeError[64].Add("doubleConstant", "84");
			EstadoDeError[64].Add("null", "85");
			EstadoDeError.Add(65, new Dictionary<string, string>());
			EstadoDeError[65].Add("ident", "10");
			EstadoDeError[65].Add(";", "67");
			EstadoDeError[65].Add("(", "99");
			EstadoDeError[65].Add("[]", "10");
			EstadoDeError[65].Add(".", "67");
			EstadoDeError[65].Add("-", "67");
			EstadoDeError[65].Add("/", "67");
			EstadoDeError[65].Add("%", "67");
			EstadoDeError[65].Add(">", "67");
			EstadoDeError[65].Add(">=", "67");
			EstadoDeError[65].Add("!=", "67");
			EstadoDeError[65].Add("||", "67");
			EstadoDeError[65].Add("=", "100");
			EstadoDeError.Add(66, new Dictionary<string, string>());
			EstadoDeError[66].Add(";", "101");
			EstadoDeError[66].Add(".", "109");
			EstadoDeError[66].Add("-", "102");
			EstadoDeError[66].Add("/", "103");
			EstadoDeError[66].Add("%", "104");
			EstadoDeError[66].Add(">", "105");
			EstadoDeError[66].Add(">=", "106");
			EstadoDeError[66].Add("!=", "107");
			EstadoDeError[66].Add("||", "108");
			EstadoDeError.Add(67, new Dictionary<string, string>());
			EstadoDeError[67].Add("ident", "42");
			EstadoDeError[67].Add(";", "42");
			EstadoDeError[67].Add("(", "42");
			EstadoDeError[67].Add("static", "42");
			EstadoDeError[67].Add("{", "42");
			EstadoDeError[67].Add("}", "42");
			EstadoDeError[67].Add("int", "42");
			EstadoDeError[67].Add("double", "42");
			EstadoDeError[67].Add("boolean", "42");
			EstadoDeError[67].Add("string", "42");
			EstadoDeError[67].Add("if", "42");
			EstadoDeError[67].Add("while", "42");
			EstadoDeError[67].Add("for", "42");
			EstadoDeError[67].Add("break", "42");
			EstadoDeError[67].Add("return", "42");
			EstadoDeError[67].Add("System", "42");
			EstadoDeError[67].Add("else", "42");
			EstadoDeError[67].Add("-", "42");
			EstadoDeError[67].Add("!", "42");
			EstadoDeError[67].Add("New", "42");
			EstadoDeError[67].Add("this", "42");
			EstadoDeError[67].Add("intConstant", "42");
			EstadoDeError[67].Add("stringConstant", "42");
			EstadoDeError[67].Add("boolConstant", "42");
			EstadoDeError[67].Add("doubleConstant", "42");
			EstadoDeError[67].Add("null", "42");
			EstadoDeError.Add(68, new Dictionary<string, string>());
			EstadoDeError[68].Add("(", "110");
			EstadoDeError.Add(69, new Dictionary<string, string>());
			EstadoDeError[69].Add("(", "111");
			EstadoDeError.Add(70, new Dictionary<string, string>());
			EstadoDeError[70].Add("(", "112");
			EstadoDeError.Add(71, new Dictionary<string, string>());
			EstadoDeError[71].Add(";", "113");
			EstadoDeError.Add(72, new Dictionary<string, string>());
			EstadoDeError[72].Add("ident", "115");
			EstadoDeError[72].Add("(", "80");
			EstadoDeError[72].Add("-", "75");
			EstadoDeError[72].Add("!", "76");
			EstadoDeError[72].Add("New", "77");
			EstadoDeError[72].Add("this", "79");
			EstadoDeError[72].Add("intConstant", "81");
			EstadoDeError[72].Add("stringConstant", "82");
			EstadoDeError[72].Add("boolConstant", "83");
			EstadoDeError[72].Add("doubleConstant", "84");
			EstadoDeError[72].Add("null", "85");
			EstadoDeError.Add(73, new Dictionary<string, string>());
			EstadoDeError[73].Add(".", "116");
			EstadoDeError.Add(74, new Dictionary<string, string>());
			EstadoDeError[74].Add("ident", "49");
			EstadoDeError[74].Add(";", "49");
			EstadoDeError[74].Add("(", "49");
			EstadoDeError[74].Add("static", "49");
			EstadoDeError[74].Add("{", "49");
			EstadoDeError[74].Add("}", "49");
			EstadoDeError[74].Add("int", "49");
			EstadoDeError[74].Add("double", "49");
			EstadoDeError[74].Add("boolean", "49");
			EstadoDeError[74].Add("string", "49");
			EstadoDeError[74].Add("if", "49");
			EstadoDeError[74].Add("while", "49");
			EstadoDeError[74].Add("for", "49");
			EstadoDeError[74].Add("break", "49");
			EstadoDeError[74].Add("return", "49");
			EstadoDeError[74].Add("System", "49");
			EstadoDeError[74].Add("else", "49");
			EstadoDeError[74].Add("-", "49");
			EstadoDeError[74].Add("!", "49");
			EstadoDeError[74].Add("New", "49");
			EstadoDeError[74].Add("this", "49");
			EstadoDeError[74].Add("intConstant", "49");
			EstadoDeError[74].Add("stringConstant", "49");
			EstadoDeError[74].Add("boolConstant", "49");
			EstadoDeError[74].Add("doubleConstant", "49");
			EstadoDeError[74].Add("null", "49");
			EstadoDeError.Add(75, new Dictionary<string, string>());
			EstadoDeError[75].Add("ident", "115");
			EstadoDeError[75].Add("(", "80");
			EstadoDeError[75].Add("-", "75");
			EstadoDeError[75].Add("!", "76");
			EstadoDeError[75].Add("New", "77");
			EstadoDeError[75].Add("this", "79");
			EstadoDeError[75].Add("intConstant", "81");
			EstadoDeError[75].Add("stringConstant", "82");
			EstadoDeError[75].Add("boolConstant", "83");
			EstadoDeError[75].Add("doubleConstant", "84");
			EstadoDeError[75].Add("null", "85");
			EstadoDeError.Add(76, new Dictionary<string, string>());
			EstadoDeError[76].Add("ident", "115");
			EstadoDeError[76].Add("(", "80");
			EstadoDeError[76].Add("-", "75");
			EstadoDeError[76].Add("!", "76");
			EstadoDeError[76].Add("New", "77");
			EstadoDeError[76].Add("this", "79");
			EstadoDeError[76].Add("intConstant", "81");
			EstadoDeError[76].Add("stringConstant", "82");
			EstadoDeError[76].Add("boolConstant", "83");
			EstadoDeError[76].Add("doubleConstant", "84");
			EstadoDeError[76].Add("null", "85");
			EstadoDeError.Add(77, new Dictionary<string, string>());
			EstadoDeError[77].Add("(", "119");
			EstadoDeError.Add(78, new Dictionary<string, string>());
			EstadoDeError[78].Add("ident", "70");
			EstadoDeError[78].Add(";", "70");
			EstadoDeError[78].Add("(", "70");
			EstadoDeError[78].Add(")", "70");
			EstadoDeError[78].Add("static", "70");
			EstadoDeError[78].Add("{", "70");
			EstadoDeError[78].Add("}", "70");
			EstadoDeError[78].Add(",", "70");
			EstadoDeError[78].Add("int", "70");
			EstadoDeError[78].Add("double", "70");
			EstadoDeError[78].Add("boolean", "70");
			EstadoDeError[78].Add("string", "70");
			EstadoDeError[78].Add("if", "70");
			EstadoDeError[78].Add("while", "70");
			EstadoDeError[78].Add("for", "70");
			EstadoDeError[78].Add("break", "70");
			EstadoDeError[78].Add("return", "70");
			EstadoDeError[78].Add("System", "70");
			EstadoDeError[78].Add(".", "70");
			EstadoDeError[78].Add("else", "70");
			EstadoDeError[78].Add("-", "70");
			EstadoDeError[78].Add("/", "70");
			EstadoDeError[78].Add("%", "70");
			EstadoDeError[78].Add(">", "70");
			EstadoDeError[78].Add(">=", "70");
			EstadoDeError[78].Add("!=", "70");
			EstadoDeError[78].Add("||", "70");
			EstadoDeError[78].Add("!", "70");
			EstadoDeError[78].Add("New", "70");
			EstadoDeError[78].Add("this", "70");
			EstadoDeError[78].Add("intConstant", "70");
			EstadoDeError[78].Add("stringConstant", "70");
			EstadoDeError[78].Add("boolConstant", "70");
			EstadoDeError[78].Add("doubleConstant", "70");
			EstadoDeError[78].Add("null", "70");
			EstadoDeError.Add(79, new Dictionary<string, string>());
			EstadoDeError[79].Add("ident", "71");
			EstadoDeError[79].Add(";", "71");
			EstadoDeError[79].Add("(", "71");
			EstadoDeError[79].Add(")", "71");
			EstadoDeError[79].Add("static", "71");
			EstadoDeError[79].Add("{", "71");
			EstadoDeError[79].Add("}", "71");
			EstadoDeError[79].Add(",", "71");
			EstadoDeError[79].Add("int", "71");
			EstadoDeError[79].Add("double", "71");
			EstadoDeError[79].Add("boolean", "71");
			EstadoDeError[79].Add("string", "71");
			EstadoDeError[79].Add("if", "71");
			EstadoDeError[79].Add("while", "71");
			EstadoDeError[79].Add("for", "71");
			EstadoDeError[79].Add("break", "71");
			EstadoDeError[79].Add("return", "71");
			EstadoDeError[79].Add("System", "71");
			EstadoDeError[79].Add(".", "71");
			EstadoDeError[79].Add("else", "71");
			EstadoDeError[79].Add("-", "71");
			EstadoDeError[79].Add("/", "71");
			EstadoDeError[79].Add("%", "71");
			EstadoDeError[79].Add(">", "71");
			EstadoDeError[79].Add(">=", "71");
			EstadoDeError[79].Add("!=", "71");
			EstadoDeError[79].Add("||", "71");
			EstadoDeError[79].Add("!", "71");
			EstadoDeError[79].Add("New", "71");
			EstadoDeError[79].Add("this", "71");
			EstadoDeError[79].Add("intConstant", "71");
			EstadoDeError[79].Add("stringConstant", "71");
			EstadoDeError[79].Add("boolConstant", "71");
			EstadoDeError[79].Add("doubleConstant", "71");
			EstadoDeError[79].Add("null", "71");
			EstadoDeError.Add(80, new Dictionary<string, string>());
			EstadoDeError[80].Add("ident", "115");
			EstadoDeError[80].Add("(", "80");
			EstadoDeError[80].Add("-", "75");
			EstadoDeError[80].Add("!", "76");
			EstadoDeError[80].Add("New", "77");
			EstadoDeError[80].Add("this", "79");
			EstadoDeError[80].Add("intConstant", "81");
			EstadoDeError[80].Add("stringConstant", "82");
			EstadoDeError[80].Add("boolConstant", "83");
			EstadoDeError[80].Add("doubleConstant", "84");
			EstadoDeError[80].Add("null", "85");
			EstadoDeError.Add(81, new Dictionary<string, string>());
			EstadoDeError[81].Add("ident", "75");
			EstadoDeError[81].Add(";", "75");
			EstadoDeError[81].Add("(", "75");
			EstadoDeError[81].Add(")", "75");
			EstadoDeError[81].Add("static", "75");
			EstadoDeError[81].Add("{", "75");
			EstadoDeError[81].Add("}", "75");
			EstadoDeError[81].Add(",", "75");
			EstadoDeError[81].Add("int", "75");
			EstadoDeError[81].Add("double", "75");
			EstadoDeError[81].Add("boolean", "75");
			EstadoDeError[81].Add("string", "75");
			EstadoDeError[81].Add("if", "75");
			EstadoDeError[81].Add("while", "75");
			EstadoDeError[81].Add("for", "75");
			EstadoDeError[81].Add("break", "75");
			EstadoDeError[81].Add("return", "75");
			EstadoDeError[81].Add("System", "75");
			EstadoDeError[81].Add(".", "75");
			EstadoDeError[81].Add("else", "75");
			EstadoDeError[81].Add("-", "75");
			EstadoDeError[81].Add("/", "75");
			EstadoDeError[81].Add("%", "75");
			EstadoDeError[81].Add(">", "75");
			EstadoDeError[81].Add(">=", "75");
			EstadoDeError[81].Add("!=", "75");
			EstadoDeError[81].Add("||", "75");
			EstadoDeError[81].Add("!", "75");
			EstadoDeError[81].Add("New", "75");
			EstadoDeError[81].Add("this", "75");
			EstadoDeError[81].Add("intConstant", "75");
			EstadoDeError[81].Add("stringConstant", "75");
			EstadoDeError[81].Add("boolConstant", "75");
			EstadoDeError[81].Add("doubleConstant", "75");
			EstadoDeError[81].Add("null", "75");
			EstadoDeError.Add(82, new Dictionary<string, string>());
			EstadoDeError[82].Add("ident", "76");
			EstadoDeError[82].Add(";", "76");
			EstadoDeError[82].Add("(", "76");
			EstadoDeError[82].Add(")", "76");
			EstadoDeError[82].Add("static", "76");
			EstadoDeError[82].Add("{", "76");
			EstadoDeError[82].Add("}", "76");
			EstadoDeError[82].Add(",", "76");
			EstadoDeError[82].Add("int", "76");
			EstadoDeError[82].Add("double", "76");
			EstadoDeError[82].Add("boolean", "76");
			EstadoDeError[82].Add("string", "76");
			EstadoDeError[82].Add("if", "76");
			EstadoDeError[82].Add("while", "76");
			EstadoDeError[82].Add("for", "76");
			EstadoDeError[82].Add("break", "76");
			EstadoDeError[82].Add("return", "76");
			EstadoDeError[82].Add("System", "76");
			EstadoDeError[82].Add(".", "76");
			EstadoDeError[82].Add("else", "76");
			EstadoDeError[82].Add("-", "76");
			EstadoDeError[82].Add("/", "76");
			EstadoDeError[82].Add("%", "76");
			EstadoDeError[82].Add(">", "76");
			EstadoDeError[82].Add(">=", "76");
			EstadoDeError[82].Add("!=", "76");
			EstadoDeError[82].Add("||", "76");
			EstadoDeError[82].Add("!", "76");
			EstadoDeError[82].Add("New", "76");
			EstadoDeError[82].Add("this", "76");
			EstadoDeError[82].Add("intConstant", "76");
			EstadoDeError[82].Add("stringConstant", "76");
			EstadoDeError[82].Add("boolConstant", "76");
			EstadoDeError[82].Add("doubleConstant", "76");
			EstadoDeError[82].Add("null", "76");
			EstadoDeError.Add(83, new Dictionary<string, string>());
			EstadoDeError[83].Add("ident", "77");
			EstadoDeError[83].Add(";", "77");
			EstadoDeError[83].Add("(", "77");
			EstadoDeError[83].Add(")", "77");
			EstadoDeError[83].Add("static", "77");
			EstadoDeError[83].Add("{", "77");
			EstadoDeError[83].Add("}", "77");
			EstadoDeError[83].Add(",", "77");
			EstadoDeError[83].Add("int", "77");
			EstadoDeError[83].Add("double", "77");
			EstadoDeError[83].Add("boolean", "77");
			EstadoDeError[83].Add("string", "77");
			EstadoDeError[83].Add("if", "77");
			EstadoDeError[83].Add("while", "77");
			EstadoDeError[83].Add("for", "77");
			EstadoDeError[83].Add("break", "77");
			EstadoDeError[83].Add("return", "77");
			EstadoDeError[83].Add("System", "77");
			EstadoDeError[83].Add(".", "77");
			EstadoDeError[83].Add("else", "77");
			EstadoDeError[83].Add("-", "77");
			EstadoDeError[83].Add("/", "77");
			EstadoDeError[83].Add("%", "77");
			EstadoDeError[83].Add(">", "77");
			EstadoDeError[83].Add(">=", "77");
			EstadoDeError[83].Add("!=", "77");
			EstadoDeError[83].Add("||", "77");
			EstadoDeError[83].Add("!", "77");
			EstadoDeError[83].Add("New", "77");
			EstadoDeError[83].Add("this", "77");
			EstadoDeError[83].Add("intConstant", "77");
			EstadoDeError[83].Add("stringConstant", "77");
			EstadoDeError[83].Add("boolConstant", "77");
			EstadoDeError[83].Add("doubleConstant", "77");
			EstadoDeError[83].Add("null", "77");
			EstadoDeError.Add(84, new Dictionary<string, string>());
			EstadoDeError[84].Add("ident", "78");
			EstadoDeError[84].Add(";", "78");
			EstadoDeError[84].Add("(", "78");
			EstadoDeError[84].Add(")", "78");
			EstadoDeError[84].Add("static", "78");
			EstadoDeError[84].Add("{", "78");
			EstadoDeError[84].Add("}", "78");
			EstadoDeError[84].Add(",", "78");
			EstadoDeError[84].Add("int", "78");
			EstadoDeError[84].Add("double", "78");
			EstadoDeError[84].Add("boolean", "78");
			EstadoDeError[84].Add("string", "78");
			EstadoDeError[84].Add("if", "78");
			EstadoDeError[84].Add("while", "78");
			EstadoDeError[84].Add("for", "78");
			EstadoDeError[84].Add("break", "78");
			EstadoDeError[84].Add("return", "78");
			EstadoDeError[84].Add("System", "78");
			EstadoDeError[84].Add(".", "78");
			EstadoDeError[84].Add("else", "78");
			EstadoDeError[84].Add("-", "78");
			EstadoDeError[84].Add("/", "78");
			EstadoDeError[84].Add("%", "78");
			EstadoDeError[84].Add(">", "78");
			EstadoDeError[84].Add(">=", "78");
			EstadoDeError[84].Add("!=", "78");
			EstadoDeError[84].Add("||", "78");
			EstadoDeError[84].Add("!", "78");
			EstadoDeError[84].Add("New", "78");
			EstadoDeError[84].Add("this", "78");
			EstadoDeError[84].Add("intConstant", "78");
			EstadoDeError[84].Add("stringConstant", "78");
			EstadoDeError[84].Add("boolConstant", "78");
			EstadoDeError[84].Add("doubleConstant", "78");
			EstadoDeError[84].Add("null", "78");
			EstadoDeError.Add(85, new Dictionary<string, string>());
			EstadoDeError[85].Add("ident", "79");
			EstadoDeError[85].Add(";", "79");
			EstadoDeError[85].Add("(", "79");
			EstadoDeError[85].Add(")", "79");
			EstadoDeError[85].Add("static", "79");
			EstadoDeError[85].Add("{", "79");
			EstadoDeError[85].Add("}", "79");
			EstadoDeError[85].Add(",", "79");
			EstadoDeError[85].Add("int", "79");
			EstadoDeError[85].Add("double", "79");
			EstadoDeError[85].Add("boolean", "79");
			EstadoDeError[85].Add("string", "79");
			EstadoDeError[85].Add("if", "79");
			EstadoDeError[85].Add("while", "79");
			EstadoDeError[85].Add("for", "79");
			EstadoDeError[85].Add("break", "79");
			EstadoDeError[85].Add("return", "79");
			EstadoDeError[85].Add("System", "79");
			EstadoDeError[85].Add(".", "79");
			EstadoDeError[85].Add("else", "79");
			EstadoDeError[85].Add("-", "79");
			EstadoDeError[85].Add("/", "79");
			EstadoDeError[85].Add("%", "79");
			EstadoDeError[85].Add(">", "79");
			EstadoDeError[85].Add(">=", "79");
			EstadoDeError[85].Add("!=", "79");
			EstadoDeError[85].Add("||", "79");
			EstadoDeError[85].Add("!", "79");
			EstadoDeError[85].Add("New", "79");
			EstadoDeError[85].Add("this", "79");
			EstadoDeError[85].Add("intConstant", "79");
			EstadoDeError[85].Add("stringConstant", "79");
			EstadoDeError[85].Add("boolConstant", "79");
			EstadoDeError[85].Add("doubleConstant", "79");
			EstadoDeError[85].Add("null", "79");
			EstadoDeError.Add(86, new Dictionary<string, string>());
			EstadoDeError[86].Add(")", "12");
			EstadoDeError.Add(87, new Dictionary<string, string>());
			EstadoDeError[87].Add("ident", "7");
			EstadoDeError[87].Add("void", "7");
			EstadoDeError[87].Add("static", "7");
			EstadoDeError[87].Add("class", "7");
			EstadoDeError[87].Add("interface", "7");
			EstadoDeError[87].Add("int", "7");
			EstadoDeError[87].Add("double", "7");
			EstadoDeError[87].Add("boolean", "7");
			EstadoDeError[87].Add("string", "7");
			EstadoDeError[87].Add("$", "7");
			EstadoDeError.Add(88, new Dictionary<string, string>());
			EstadoDeError[88].Add("}", "31");
			EstadoDeError.Add(89, new Dictionary<string, string>());
			EstadoDeError[89].Add(";", "121");
			EstadoDeError[89].Add("(", "122");
			EstadoDeError.Add(90, new Dictionary<string, string>());
			EstadoDeError[90].Add("(", "123");
			EstadoDeError.Add(91, new Dictionary<string, string>());
			EstadoDeError[91].Add("ident", "124");
			EstadoDeError.Add(92, new Dictionary<string, string>());
			EstadoDeError[92].Add("{", "30");
			EstadoDeError[92].Add(",", "58");
			EstadoDeError.Add(93, new Dictionary<string, string>());
			EstadoDeError[93].Add(")", "126");
			EstadoDeError.Add(94, new Dictionary<string, string>());
			EstadoDeError[94].Add(")", "127");
			EstadoDeError.Add(95, new Dictionary<string, string>());
			EstadoDeError[95].Add("ident", "14");
			EstadoDeError[95].Add(";", "14");
			EstadoDeError[95].Add("(", "14");
			EstadoDeError[95].Add("void", "14");
			EstadoDeError[95].Add("static", "14");
			EstadoDeError[95].Add("class", "14");
			EstadoDeError[95].Add("{", "14");
			EstadoDeError[95].Add("}", "14");
			EstadoDeError[95].Add("interface", "14");
			EstadoDeError[95].Add("int", "14");
			EstadoDeError[95].Add("double", "14");
			EstadoDeError[95].Add("boolean", "14");
			EstadoDeError[95].Add("string", "14");
			EstadoDeError[95].Add("if", "14");
			EstadoDeError[95].Add("while", "14");
			EstadoDeError[95].Add("for", "14");
			EstadoDeError[95].Add("break", "14");
			EstadoDeError[95].Add("return", "14");
			EstadoDeError[95].Add("System", "14");
			EstadoDeError[95].Add("else", "14");
			EstadoDeError[95].Add("-", "14");
			EstadoDeError[95].Add("!", "14");
			EstadoDeError[95].Add("New", "14");
			EstadoDeError[95].Add("this", "14");
			EstadoDeError[95].Add("intConstant", "14");
			EstadoDeError[95].Add("stringConstant", "14");
			EstadoDeError[95].Add("boolConstant", "14");
			EstadoDeError[95].Add("doubleConstant", "14");
			EstadoDeError[95].Add("null", "14");
			EstadoDeError[95].Add("$", "14");
			EstadoDeError.Add(96, new Dictionary<string, string>());
			EstadoDeError[96].Add(";", "128");
			EstadoDeError.Add(97, new Dictionary<string, string>());
			EstadoDeError[97].Add("ident", "129");
			EstadoDeError.Add(98, new Dictionary<string, string>());
			EstadoDeError[98].Add("}", "19");
			EstadoDeError.Add(99, new Dictionary<string, string>());
			EstadoDeError[99].Add("ident", "115");
			EstadoDeError[99].Add("(", "80");
			EstadoDeError[99].Add("-", "75");
			EstadoDeError[99].Add("!", "76");
			EstadoDeError[99].Add("New", "77");
			EstadoDeError[99].Add("this", "79");
			EstadoDeError[99].Add("intConstant", "81");
			EstadoDeError[99].Add("stringConstant", "82");
			EstadoDeError[99].Add("boolConstant", "83");
			EstadoDeError[99].Add("doubleConstant", "84");
			EstadoDeError[99].Add("null", "85");
			EstadoDeError.Add(100, new Dictionary<string, string>());
			EstadoDeError[100].Add("ident", "115");
			EstadoDeError[100].Add("(", "80");
			EstadoDeError[100].Add("-", "75");
			EstadoDeError[100].Add("!", "76");
			EstadoDeError[100].Add("New", "77");
			EstadoDeError[100].Add("this", "79");
			EstadoDeError[100].Add("intConstant", "81");
			EstadoDeError[100].Add("stringConstant", "82");
			EstadoDeError[100].Add("boolConstant", "83");
			EstadoDeError[100].Add("doubleConstant", "84");
			EstadoDeError[100].Add("null", "85");
			EstadoDeError.Add(101, new Dictionary<string, string>());
			EstadoDeError[101].Add("ident", "41");
			EstadoDeError[101].Add(";", "41");
			EstadoDeError[101].Add("(", "41");
			EstadoDeError[101].Add("static", "41");
			EstadoDeError[101].Add("{", "41");
			EstadoDeError[101].Add("}", "41");
			EstadoDeError[101].Add("int", "41");
			EstadoDeError[101].Add("double", "41");
			EstadoDeError[101].Add("boolean", "41");
			EstadoDeError[101].Add("string", "41");
			EstadoDeError[101].Add("if", "41");
			EstadoDeError[101].Add("while", "41");
			EstadoDeError[101].Add("for", "41");
			EstadoDeError[101].Add("break", "41");
			EstadoDeError[101].Add("return", "41");
			EstadoDeError[101].Add("System", "41");
			EstadoDeError[101].Add("else", "41");
			EstadoDeError[101].Add("-", "41");
			EstadoDeError[101].Add("!", "41");
			EstadoDeError[101].Add("New", "41");
			EstadoDeError[101].Add("this", "41");
			EstadoDeError[101].Add("intConstant", "41");
			EstadoDeError[101].Add("stringConstant", "41");
			EstadoDeError[101].Add("boolConstant", "41");
			EstadoDeError[101].Add("doubleConstant", "41");
			EstadoDeError[101].Add("null", "41");
			EstadoDeError.Add(102, new Dictionary<string, string>());
			EstadoDeError[102].Add("ident", "115");
			EstadoDeError[102].Add("(", "80");
			EstadoDeError[102].Add("-", "75");
			EstadoDeError[102].Add("!", "76");
			EstadoDeError[102].Add("New", "77");
			EstadoDeError[102].Add("this", "79");
			EstadoDeError[102].Add("intConstant", "81");
			EstadoDeError[102].Add("stringConstant", "82");
			EstadoDeError[102].Add("boolConstant", "83");
			EstadoDeError[102].Add("doubleConstant", "84");
			EstadoDeError[102].Add("null", "85");
			EstadoDeError.Add(103, new Dictionary<string, string>());
			EstadoDeError[103].Add("ident", "115");
			EstadoDeError[103].Add("(", "80");
			EstadoDeError[103].Add("-", "75");
			EstadoDeError[103].Add("!", "76");
			EstadoDeError[103].Add("New", "77");
			EstadoDeError[103].Add("this", "79");
			EstadoDeError[103].Add("intConstant", "81");
			EstadoDeError[103].Add("stringConstant", "82");
			EstadoDeError[103].Add("boolConstant", "83");
			EstadoDeError[103].Add("doubleConstant", "84");
			EstadoDeError[103].Add("null", "85");
			EstadoDeError.Add(104, new Dictionary<string, string>());
			EstadoDeError[104].Add("ident", "115");
			EstadoDeError[104].Add("(", "80");
			EstadoDeError[104].Add("-", "75");
			EstadoDeError[104].Add("!", "76");
			EstadoDeError[104].Add("New", "77");
			EstadoDeError[104].Add("this", "79");
			EstadoDeError[104].Add("intConstant", "81");
			EstadoDeError[104].Add("stringConstant", "82");
			EstadoDeError[104].Add("boolConstant", "83");
			EstadoDeError[104].Add("doubleConstant", "84");
			EstadoDeError[104].Add("null", "85");
			EstadoDeError.Add(105, new Dictionary<string, string>());
			EstadoDeError[105].Add("ident", "115");
			EstadoDeError[105].Add("(", "80");
			EstadoDeError[105].Add("-", "75");
			EstadoDeError[105].Add("!", "76");
			EstadoDeError[105].Add("New", "77");
			EstadoDeError[105].Add("this", "79");
			EstadoDeError[105].Add("intConstant", "81");
			EstadoDeError[105].Add("stringConstant", "82");
			EstadoDeError[105].Add("boolConstant", "83");
			EstadoDeError[105].Add("doubleConstant", "84");
			EstadoDeError[105].Add("null", "85");
			EstadoDeError.Add(106, new Dictionary<string, string>());
			EstadoDeError[106].Add("ident", "115");
			EstadoDeError[106].Add("(", "80");
			EstadoDeError[106].Add("-", "75");
			EstadoDeError[106].Add("!", "76");
			EstadoDeError[106].Add("New", "77");
			EstadoDeError[106].Add("this", "79");
			EstadoDeError[106].Add("intConstant", "81");
			EstadoDeError[106].Add("stringConstant", "82");
			EstadoDeError[106].Add("boolConstant", "83");
			EstadoDeError[106].Add("doubleConstant", "84");
			EstadoDeError[106].Add("null", "85");
			EstadoDeError.Add(107, new Dictionary<string, string>());
			EstadoDeError[107].Add("ident", "115");
			EstadoDeError[107].Add("(", "80");
			EstadoDeError[107].Add("-", "75");
			EstadoDeError[107].Add("!", "76");
			EstadoDeError[107].Add("New", "77");
			EstadoDeError[107].Add("this", "79");
			EstadoDeError[107].Add("intConstant", "81");
			EstadoDeError[107].Add("stringConstant", "82");
			EstadoDeError[107].Add("boolConstant", "83");
			EstadoDeError[107].Add("doubleConstant", "84");
			EstadoDeError[107].Add("null", "85");
			EstadoDeError.Add(108, new Dictionary<string, string>());
			EstadoDeError[108].Add("ident", "115");
			EstadoDeError[108].Add("(", "80");
			EstadoDeError[108].Add("-", "75");
			EstadoDeError[108].Add("!", "76");
			EstadoDeError[108].Add("New", "77");
			EstadoDeError[108].Add("this", "79");
			EstadoDeError[108].Add("intConstant", "81");
			EstadoDeError[108].Add("stringConstant", "82");
			EstadoDeError[108].Add("boolConstant", "83");
			EstadoDeError[108].Add("doubleConstant", "84");
			EstadoDeError[108].Add("null", "85");
			EstadoDeError.Add(109, new Dictionary<string, string>());
			EstadoDeError[109].Add("ident", "140");
			EstadoDeError.Add(110, new Dictionary<string, string>());
			EstadoDeError[110].Add("ident", "115");
			EstadoDeError[110].Add("(", "80");
			EstadoDeError[110].Add("-", "75");
			EstadoDeError[110].Add("!", "76");
			EstadoDeError[110].Add("New", "77");
			EstadoDeError[110].Add("this", "79");
			EstadoDeError[110].Add("intConstant", "81");
			EstadoDeError[110].Add("stringConstant", "82");
			EstadoDeError[110].Add("boolConstant", "83");
			EstadoDeError[110].Add("doubleConstant", "84");
			EstadoDeError[110].Add("null", "85");
			EstadoDeError.Add(111, new Dictionary<string, string>());
			EstadoDeError[111].Add("ident", "115");
			EstadoDeError[111].Add("(", "80");
			EstadoDeError[111].Add("-", "75");
			EstadoDeError[111].Add("!", "76");
			EstadoDeError[111].Add("New", "77");
			EstadoDeError[111].Add("this", "79");
			EstadoDeError[111].Add("intConstant", "81");
			EstadoDeError[111].Add("stringConstant", "82");
			EstadoDeError[111].Add("boolConstant", "83");
			EstadoDeError[111].Add("doubleConstant", "84");
			EstadoDeError[111].Add("null", "85");
			EstadoDeError.Add(112, new Dictionary<string, string>());
			EstadoDeError[112].Add("ident", "115");
			EstadoDeError[112].Add("(", "80");
			EstadoDeError[112].Add("-", "75");
			EstadoDeError[112].Add("!", "76");
			EstadoDeError[112].Add("New", "77");
			EstadoDeError[112].Add("this", "79");
			EstadoDeError[112].Add("intConstant", "81");
			EstadoDeError[112].Add("stringConstant", "82");
			EstadoDeError[112].Add("boolConstant", "83");
			EstadoDeError[112].Add("doubleConstant", "84");
			EstadoDeError[112].Add("null", "85");
			EstadoDeError.Add(113, new Dictionary<string, string>());
			EstadoDeError[113].Add("ident", "46");
			EstadoDeError[113].Add(";", "46");
			EstadoDeError[113].Add("(", "46");
			EstadoDeError[113].Add("static", "46");
			EstadoDeError[113].Add("{", "46");
			EstadoDeError[113].Add("}", "46");
			EstadoDeError[113].Add("int", "46");
			EstadoDeError[113].Add("double", "46");
			EstadoDeError[113].Add("boolean", "46");
			EstadoDeError[113].Add("string", "46");
			EstadoDeError[113].Add("if", "46");
			EstadoDeError[113].Add("while", "46");
			EstadoDeError[113].Add("for", "46");
			EstadoDeError[113].Add("break", "46");
			EstadoDeError[113].Add("return", "46");
			EstadoDeError[113].Add("System", "46");
			EstadoDeError[113].Add("else", "46");
			EstadoDeError[113].Add("-", "46");
			EstadoDeError[113].Add("!", "46");
			EstadoDeError[113].Add("New", "46");
			EstadoDeError[113].Add("this", "46");
			EstadoDeError[113].Add("intConstant", "46");
			EstadoDeError[113].Add("stringConstant", "46");
			EstadoDeError[113].Add("boolConstant", "46");
			EstadoDeError[113].Add("doubleConstant", "46");
			EstadoDeError[113].Add("null", "46");
			EstadoDeError.Add(114, new Dictionary<string, string>());
			EstadoDeError[114].Add(";", "144");
			EstadoDeError[114].Add(".", "109");
			EstadoDeError[114].Add("-", "102");
			EstadoDeError[114].Add("/", "103");
			EstadoDeError[114].Add("%", "104");
			EstadoDeError[114].Add(">", "105");
			EstadoDeError[114].Add(">=", "106");
			EstadoDeError[114].Add("!=", "107");
			EstadoDeError[114].Add("||", "108");
			EstadoDeError.Add(115, new Dictionary<string, string>());
			EstadoDeError[115].Add("ident", "67");
			EstadoDeError[115].Add(";", "67");
			EstadoDeError[115].Add("(", "99");
			EstadoDeError[115].Add(")", "67");
			EstadoDeError[115].Add("static", "67");
			EstadoDeError[115].Add("{", "67");
			EstadoDeError[115].Add("}", "67");
			EstadoDeError[115].Add(",", "67");
			EstadoDeError[115].Add("int", "67");
			EstadoDeError[115].Add("double", "67");
			EstadoDeError[115].Add("boolean", "67");
			EstadoDeError[115].Add("string", "67");
			EstadoDeError[115].Add("if", "67");
			EstadoDeError[115].Add("while", "67");
			EstadoDeError[115].Add("for", "67");
			EstadoDeError[115].Add("break", "67");
			EstadoDeError[115].Add("return", "67");
			EstadoDeError[115].Add("System", "67");
			EstadoDeError[115].Add(".", "67");
			EstadoDeError[115].Add("else", "67");
			EstadoDeError[115].Add("-", "67");
			EstadoDeError[115].Add("/", "67");
			EstadoDeError[115].Add("%", "67");
			EstadoDeError[115].Add(">", "67");
			EstadoDeError[115].Add(">=", "67");
			EstadoDeError[115].Add("!=", "67");
			EstadoDeError[115].Add("||", "67");
			EstadoDeError[115].Add("!", "67");
			EstadoDeError[115].Add("New", "67");
			EstadoDeError[115].Add("=", "100");
			EstadoDeError[115].Add("this", "67");
			EstadoDeError[115].Add("intConstant", "67");
			EstadoDeError[115].Add("stringConstant", "67");
			EstadoDeError[115].Add("boolConstant", "67");
			EstadoDeError[115].Add("doubleConstant", "67");
			EstadoDeError[115].Add("null", "67");
			EstadoDeError.Add(116, new Dictionary<string, string>());
			EstadoDeError[116].Add("out", "145");
			EstadoDeError.Add(117, new Dictionary<string, string>());
			EstadoDeError[117].Add("ident", "57");
			EstadoDeError[117].Add(";", "57");
			EstadoDeError[117].Add("(", "57");
			EstadoDeError[117].Add(")", "57");
			EstadoDeError[117].Add("static", "57");
			EstadoDeError[117].Add("{", "57");
			EstadoDeError[117].Add("}", "57");
			EstadoDeError[117].Add(",", "57");
			EstadoDeError[117].Add("int", "57");
			EstadoDeError[117].Add("double", "57");
			EstadoDeError[117].Add("boolean", "57");
			EstadoDeError[117].Add("string", "57");
			EstadoDeError[117].Add("if", "57");
			EstadoDeError[117].Add("while", "57");
			EstadoDeError[117].Add("for", "57");
			EstadoDeError[117].Add("break", "57");
			EstadoDeError[117].Add("return", "57");
			EstadoDeError[117].Add("System", "57");
			EstadoDeError[117].Add(".", "109");
			EstadoDeError[117].Add("else", "57");
			EstadoDeError[117].Add("-", "102");
			EstadoDeError[117].Add("/", "103");
			EstadoDeError[117].Add("%", "104");
			EstadoDeError[117].Add(">", "105");
			EstadoDeError[117].Add(">=", "106");
			EstadoDeError[117].Add("!=", "107");
			EstadoDeError[117].Add("||", "108");
			EstadoDeError[117].Add("!", "57");
			EstadoDeError[117].Add("New", "57");
			EstadoDeError[117].Add("this", "57");
			EstadoDeError[117].Add("intConstant", "57");
			EstadoDeError[117].Add("stringConstant", "57");
			EstadoDeError[117].Add("boolConstant", "57");
			EstadoDeError[117].Add("doubleConstant", "57");
			EstadoDeError[117].Add("null", "57");
			EstadoDeError.Add(118, new Dictionary<string, string>());
			EstadoDeError[118].Add("ident", "62");
			EstadoDeError[118].Add(";", "62");
			EstadoDeError[118].Add("(", "62");
			EstadoDeError[118].Add(")", "62");
			EstadoDeError[118].Add("static", "62");
			EstadoDeError[118].Add("{", "62");
			EstadoDeError[118].Add("}", "62");
			EstadoDeError[118].Add(",", "62");
			EstadoDeError[118].Add("int", "62");
			EstadoDeError[118].Add("double", "62");
			EstadoDeError[118].Add("boolean", "62");
			EstadoDeError[118].Add("string", "62");
			EstadoDeError[118].Add("if", "62");
			EstadoDeError[118].Add("while", "62");
			EstadoDeError[118].Add("for", "62");
			EstadoDeError[118].Add("break", "62");
			EstadoDeError[118].Add("return", "62");
			EstadoDeError[118].Add("System", "62");
			EstadoDeError[118].Add(".", "109");
			EstadoDeError[118].Add("else", "62");
			EstadoDeError[118].Add("-", "102");
			EstadoDeError[118].Add("/", "103");
			EstadoDeError[118].Add("%", "104");
			EstadoDeError[118].Add(">", "105");
			EstadoDeError[118].Add(">=", "106");
			EstadoDeError[118].Add("!=", "107");
			EstadoDeError[118].Add("||", "108");
			EstadoDeError[118].Add("!", "62");
			EstadoDeError[118].Add("New", "62");
			EstadoDeError[118].Add("this", "62");
			EstadoDeError[118].Add("intConstant", "62");
			EstadoDeError[118].Add("stringConstant", "62");
			EstadoDeError[118].Add("boolConstant", "62");
			EstadoDeError[118].Add("doubleConstant", "62");
			EstadoDeError[118].Add("null", "62");
			EstadoDeError.Add(119, new Dictionary<string, string>());
			EstadoDeError[119].Add("ident", "146");
			EstadoDeError.Add(120, new Dictionary<string, string>());
			EstadoDeError[120].Add(")", "147");
			EstadoDeError[120].Add(".", "109");
			EstadoDeError[120].Add("-", "102");
			EstadoDeError[120].Add("/", "103");
			EstadoDeError[120].Add("%", "104");
			EstadoDeError[120].Add(">", "105");
			EstadoDeError[120].Add(">=", "106");
			EstadoDeError[120].Add("!=", "107");
			EstadoDeError[120].Add("||", "108");
			EstadoDeError.Add(121, new Dictionary<string, string>());
			EstadoDeError[121].Add("ident", "33");
			EstadoDeError[121].Add("void", "33");
			EstadoDeError[121].Add("static", "33");
			EstadoDeError[121].Add("}", "33");
			EstadoDeError[121].Add("int", "33");
			EstadoDeError[121].Add("double", "33");
			EstadoDeError[121].Add("boolean", "33");
			EstadoDeError[121].Add("string", "33");
			EstadoDeError.Add(122, new Dictionary<string, string>());
			EstadoDeError[122].Add("ident", "9");
			EstadoDeError[122].Add("int", "10");
			EstadoDeError[122].Add("double", "11");
			EstadoDeError[122].Add("boolean", "12");
			EstadoDeError[122].Add("string", "13");
			EstadoDeError.Add(123, new Dictionary<string, string>());
			EstadoDeError[123].Add("ident", "9");
			EstadoDeError[123].Add("int", "10");
			EstadoDeError[123].Add("double", "11");
			EstadoDeError[123].Add("boolean", "12");
			EstadoDeError[123].Add("string", "13");
			EstadoDeError.Add(124, new Dictionary<string, string>());
			EstadoDeError[124].Add(";", "150");
			EstadoDeError.Add(125, new Dictionary<string, string>());
			EstadoDeError[125].Add("{", "29");
			EstadoDeError.Add(126, new Dictionary<string, string>());
			EstadoDeError[126].Add(";", "151");
			EstadoDeError.Add(127, new Dictionary<string, string>());
			EstadoDeError[127].Add(";", "152");
			EstadoDeError.Add(128, new Dictionary<string, string>());
			EstadoDeError[128].Add("ident", "65");
			EstadoDeError[128].Add(";", "67");
			EstadoDeError[128].Add("(", "80");
			EstadoDeError[128].Add("static", "63");
			EstadoDeError[128].Add("{", "49");
			EstadoDeError[128].Add("}", "16");
			EstadoDeError[128].Add("int", "10");
			EstadoDeError[128].Add("double", "11");
			EstadoDeError[128].Add("boolean", "12");
			EstadoDeError[128].Add("string", "13");
			EstadoDeError[128].Add("if", "68");
			EstadoDeError[128].Add("while", "69");
			EstadoDeError[128].Add("for", "70");
			EstadoDeError[128].Add("break", "71");
			EstadoDeError[128].Add("return", "72");
			EstadoDeError[128].Add("System", "73");
			EstadoDeError[128].Add("-", "75");
			EstadoDeError[128].Add("!", "76");
			EstadoDeError[128].Add("New", "77");
			EstadoDeError[128].Add("this", "79");
			EstadoDeError[128].Add("intConstant", "81");
			EstadoDeError[128].Add("stringConstant", "82");
			EstadoDeError[128].Add("boolConstant", "83");
			EstadoDeError[128].Add("doubleConstant", "84");
			EstadoDeError[128].Add("null", "85");
			EstadoDeError.Add(129, new Dictionary<string, string>());
			EstadoDeError[129].Add(";", "154");
			EstadoDeError.Add(130, new Dictionary<string, string>());
			EstadoDeError[130].Add(")", "155");
			EstadoDeError.Add(131, new Dictionary<string, string>());
			EstadoDeError[131].Add(")", "74");
			EstadoDeError[131].Add(",", "156");
			EstadoDeError[131].Add(".", "109");
			EstadoDeError[131].Add("-", "102");
			EstadoDeError[131].Add("/", "103");
			EstadoDeError[131].Add("%", "104");
			EstadoDeError[131].Add(">", "105");
			EstadoDeError[131].Add(">=", "106");
			EstadoDeError[131].Add("!=", "107");
			EstadoDeError[131].Add("||", "108");
			EstadoDeError.Add(132, new Dictionary<string, string>());
			EstadoDeError[132].Add("ident", "69");
			EstadoDeError[132].Add(";", "69");
			EstadoDeError[132].Add("(", "69");
			EstadoDeError[132].Add(")", "69");
			EstadoDeError[132].Add("static", "69");
			EstadoDeError[132].Add("{", "69");
			EstadoDeError[132].Add("}", "69");
			EstadoDeError[132].Add(",", "69");
			EstadoDeError[132].Add("int", "69");
			EstadoDeError[132].Add("double", "69");
			EstadoDeError[132].Add("boolean", "69");
			EstadoDeError[132].Add("string", "69");
			EstadoDeError[132].Add("if", "69");
			EstadoDeError[132].Add("while", "69");
			EstadoDeError[132].Add("for", "69");
			EstadoDeError[132].Add("break", "69");
			EstadoDeError[132].Add("return", "69");
			EstadoDeError[132].Add("System", "69");
			EstadoDeError[132].Add(".", "109");
			EstadoDeError[132].Add("else", "69");
			EstadoDeError[132].Add("-", "102");
			EstadoDeError[132].Add("/", "103");
			EstadoDeError[132].Add("%", "104");
			EstadoDeError[132].Add(">", "105");
			EstadoDeError[132].Add(">=", "106");
			EstadoDeError[132].Add("!=", "107");
			EstadoDeError[132].Add("||", "108");
			EstadoDeError[132].Add("!", "69");
			EstadoDeError[132].Add("New", "69");
			EstadoDeError[132].Add("this", "69");
			EstadoDeError[132].Add("intConstant", "69");
			EstadoDeError[132].Add("stringConstant", "69");
			EstadoDeError[132].Add("boolConstant", "69");
			EstadoDeError[132].Add("doubleConstant", "69");
			EstadoDeError[132].Add("null", "69");
			EstadoDeError.Add(133, new Dictionary<string, string>());
			EstadoDeError[133].Add("ident", "54");
			EstadoDeError[133].Add(";", "54");
			EstadoDeError[133].Add("(", "54");
			EstadoDeError[133].Add(")", "54");
			EstadoDeError[133].Add("static", "54");
			EstadoDeError[133].Add("{", "54");
			EstadoDeError[133].Add("}", "54");
			EstadoDeError[133].Add(",", "54");
			EstadoDeError[133].Add("int", "54");
			EstadoDeError[133].Add("double", "54");
			EstadoDeError[133].Add("boolean", "54");
			EstadoDeError[133].Add("string", "54");
			EstadoDeError[133].Add("if", "54");
			EstadoDeError[133].Add("while", "54");
			EstadoDeError[133].Add("for", "54");
			EstadoDeError[133].Add("break", "54");
			EstadoDeError[133].Add("return", "54");
			EstadoDeError[133].Add("System", "54");
			EstadoDeError[133].Add(".", "109");
			EstadoDeError[133].Add("else", "54");
			EstadoDeError[133].Add("-", "102");
			EstadoDeError[133].Add("/", "103");
			EstadoDeError[133].Add("%", "104");
			EstadoDeError[133].Add(">", "105");
			EstadoDeError[133].Add(">=", "106");
			EstadoDeError[133].Add("!=", "107");
			EstadoDeError[133].Add("||", "108");
			EstadoDeError[133].Add("!", "54");
			EstadoDeError[133].Add("New", "54");
			EstadoDeError[133].Add("this", "54");
			EstadoDeError[133].Add("intConstant", "54");
			EstadoDeError[133].Add("stringConstant", "54");
			EstadoDeError[133].Add("boolConstant", "54");
			EstadoDeError[133].Add("doubleConstant", "54");
			EstadoDeError[133].Add("null", "54");
			EstadoDeError.Add(134, new Dictionary<string, string>());
			EstadoDeError[134].Add("ident", "55");
			EstadoDeError[134].Add(";", "55");
			EstadoDeError[134].Add("(", "55");
			EstadoDeError[134].Add(")", "55");
			EstadoDeError[134].Add("static", "55");
			EstadoDeError[134].Add("{", "55");
			EstadoDeError[134].Add("}", "55");
			EstadoDeError[134].Add(",", "55");
			EstadoDeError[134].Add("int", "55");
			EstadoDeError[134].Add("double", "55");
			EstadoDeError[134].Add("boolean", "55");
			EstadoDeError[134].Add("string", "55");
			EstadoDeError[134].Add("if", "55");
			EstadoDeError[134].Add("while", "55");
			EstadoDeError[134].Add("for", "55");
			EstadoDeError[134].Add("break", "55");
			EstadoDeError[134].Add("return", "55");
			EstadoDeError[134].Add("System", "55");
			EstadoDeError[134].Add(".", "109");
			EstadoDeError[134].Add("else", "55");
			EstadoDeError[134].Add("-", "102");
			EstadoDeError[134].Add("/", "103");
			EstadoDeError[134].Add("%", "104");
			EstadoDeError[134].Add(">", "105");
			EstadoDeError[134].Add(">=", "106");
			EstadoDeError[134].Add("!=", "107");
			EstadoDeError[134].Add("||", "108");
			EstadoDeError[134].Add("!", "55");
			EstadoDeError[134].Add("New", "55");
			EstadoDeError[134].Add("this", "55");
			EstadoDeError[134].Add("intConstant", "55");
			EstadoDeError[134].Add("stringConstant", "55");
			EstadoDeError[134].Add("boolConstant", "55");
			EstadoDeError[134].Add("doubleConstant", "55");
			EstadoDeError[134].Add("null", "55");
			EstadoDeError.Add(135, new Dictionary<string, string>());
			EstadoDeError[135].Add("ident", "56");
			EstadoDeError[135].Add(";", "56");
			EstadoDeError[135].Add("(", "56");
			EstadoDeError[135].Add(")", "56");
			EstadoDeError[135].Add("static", "56");
			EstadoDeError[135].Add("{", "56");
			EstadoDeError[135].Add("}", "56");
			EstadoDeError[135].Add(",", "56");
			EstadoDeError[135].Add("int", "56");
			EstadoDeError[135].Add("double", "56");
			EstadoDeError[135].Add("boolean", "56");
			EstadoDeError[135].Add("string", "56");
			EstadoDeError[135].Add("if", "56");
			EstadoDeError[135].Add("while", "56");
			EstadoDeError[135].Add("for", "56");
			EstadoDeError[135].Add("break", "56");
			EstadoDeError[135].Add("return", "56");
			EstadoDeError[135].Add("System", "56");
			EstadoDeError[135].Add(".", "109");
			EstadoDeError[135].Add("else", "56");
			EstadoDeError[135].Add("-", "102");
			EstadoDeError[135].Add("/", "103");
			EstadoDeError[135].Add("%", "104");
			EstadoDeError[135].Add(">", "105");
			EstadoDeError[135].Add(">=", "106");
			EstadoDeError[135].Add("!=", "107");
			EstadoDeError[135].Add("||", "108");
			EstadoDeError[135].Add("!", "56");
			EstadoDeError[135].Add("New", "56");
			EstadoDeError[135].Add("this", "56");
			EstadoDeError[135].Add("intConstant", "56");
			EstadoDeError[135].Add("stringConstant", "56");
			EstadoDeError[135].Add("boolConstant", "56");
			EstadoDeError[135].Add("doubleConstant", "56");
			EstadoDeError[135].Add("null", "56");
			EstadoDeError.Add(136, new Dictionary<string, string>());
			EstadoDeError[136].Add("ident", "58");
			EstadoDeError[136].Add(";", "58");
			EstadoDeError[136].Add("(", "58");
			EstadoDeError[136].Add(")", "58");
			EstadoDeError[136].Add("static", "58");
			EstadoDeError[136].Add("{", "58");
			EstadoDeError[136].Add("}", "58");
			EstadoDeError[136].Add(",", "58");
			EstadoDeError[136].Add("int", "58");
			EstadoDeError[136].Add("double", "58");
			EstadoDeError[136].Add("boolean", "58");
			EstadoDeError[136].Add("string", "58");
			EstadoDeError[136].Add("if", "58");
			EstadoDeError[136].Add("while", "58");
			EstadoDeError[136].Add("for", "58");
			EstadoDeError[136].Add("break", "58");
			EstadoDeError[136].Add("return", "58");
			EstadoDeError[136].Add("System", "58");
			EstadoDeError[136].Add(".", "109");
			EstadoDeError[136].Add("else", "58");
			EstadoDeError[136].Add("-", "102");
			EstadoDeError[136].Add("/", "103");
			EstadoDeError[136].Add("%", "104");
			EstadoDeError[136].Add(">", "105");
			EstadoDeError[136].Add(">=", "106");
			EstadoDeError[136].Add("!=", "107");
			EstadoDeError[136].Add("||", "108");
			EstadoDeError[136].Add("!", "58");
			EstadoDeError[136].Add("New", "58");
			EstadoDeError[136].Add("this", "58");
			EstadoDeError[136].Add("intConstant", "58");
			EstadoDeError[136].Add("stringConstant", "58");
			EstadoDeError[136].Add("boolConstant", "58");
			EstadoDeError[136].Add("doubleConstant", "58");
			EstadoDeError[136].Add("null", "58");
			EstadoDeError.Add(137, new Dictionary<string, string>());
			EstadoDeError[137].Add("ident", "59");
			EstadoDeError[137].Add(";", "59");
			EstadoDeError[137].Add("(", "59");
			EstadoDeError[137].Add(")", "59");
			EstadoDeError[137].Add("static", "59");
			EstadoDeError[137].Add("{", "59");
			EstadoDeError[137].Add("}", "59");
			EstadoDeError[137].Add(",", "59");
			EstadoDeError[137].Add("int", "59");
			EstadoDeError[137].Add("double", "59");
			EstadoDeError[137].Add("boolean", "59");
			EstadoDeError[137].Add("string", "59");
			EstadoDeError[137].Add("if", "59");
			EstadoDeError[137].Add("while", "59");
			EstadoDeError[137].Add("for", "59");
			EstadoDeError[137].Add("break", "59");
			EstadoDeError[137].Add("return", "59");
			EstadoDeError[137].Add("System", "59");
			EstadoDeError[137].Add(".", "109");
			EstadoDeError[137].Add("else", "59");
			EstadoDeError[137].Add("-", "102");
			EstadoDeError[137].Add("/", "103");
			EstadoDeError[137].Add("%", "104");
			EstadoDeError[137].Add(">", "105");
			EstadoDeError[137].Add(">=", "106");
			EstadoDeError[137].Add("!=", "107");
			EstadoDeError[137].Add("||", "108");
			EstadoDeError[137].Add("!", "59");
			EstadoDeError[137].Add("New", "59");
			EstadoDeError[137].Add("this", "59");
			EstadoDeError[137].Add("intConstant", "59");
			EstadoDeError[137].Add("stringConstant", "59");
			EstadoDeError[137].Add("boolConstant", "59");
			EstadoDeError[137].Add("doubleConstant", "59");
			EstadoDeError[137].Add("null", "59");
			EstadoDeError.Add(138, new Dictionary<string, string>());
			EstadoDeError[138].Add("ident", "60");
			EstadoDeError[138].Add(";", "60");
			EstadoDeError[138].Add("(", "60");
			EstadoDeError[138].Add(")", "60");
			EstadoDeError[138].Add("static", "60");
			EstadoDeError[138].Add("{", "60");
			EstadoDeError[138].Add("}", "60");
			EstadoDeError[138].Add(",", "60");
			EstadoDeError[138].Add("int", "60");
			EstadoDeError[138].Add("double", "60");
			EstadoDeError[138].Add("boolean", "60");
			EstadoDeError[138].Add("string", "60");
			EstadoDeError[138].Add("if", "60");
			EstadoDeError[138].Add("while", "60");
			EstadoDeError[138].Add("for", "60");
			EstadoDeError[138].Add("break", "60");
			EstadoDeError[138].Add("return", "60");
			EstadoDeError[138].Add("System", "60");
			EstadoDeError[138].Add(".", "109");
			EstadoDeError[138].Add("else", "60");
			EstadoDeError[138].Add("-", "102");
			EstadoDeError[138].Add("/", "103");
			EstadoDeError[138].Add("%", "104");
			EstadoDeError[138].Add(">", "105");
			EstadoDeError[138].Add(">=", "106");
			EstadoDeError[138].Add("!=", "107");
			EstadoDeError[138].Add("||", "108");
			EstadoDeError[138].Add("!", "60");
			EstadoDeError[138].Add("New", "60");
			EstadoDeError[138].Add("this", "60");
			EstadoDeError[138].Add("intConstant", "60");
			EstadoDeError[138].Add("stringConstant", "60");
			EstadoDeError[138].Add("boolConstant", "60");
			EstadoDeError[138].Add("doubleConstant", "60");
			EstadoDeError[138].Add("null", "60");
			EstadoDeError.Add(139, new Dictionary<string, string>());
			EstadoDeError[139].Add("ident", "61");
			EstadoDeError[139].Add(";", "61");
			EstadoDeError[139].Add("(", "61");
			EstadoDeError[139].Add(")", "61");
			EstadoDeError[139].Add("static", "61");
			EstadoDeError[139].Add("{", "61");
			EstadoDeError[139].Add("}", "61");
			EstadoDeError[139].Add(",", "61");
			EstadoDeError[139].Add("int", "61");
			EstadoDeError[139].Add("double", "61");
			EstadoDeError[139].Add("boolean", "61");
			EstadoDeError[139].Add("string", "61");
			EstadoDeError[139].Add("if", "61");
			EstadoDeError[139].Add("while", "61");
			EstadoDeError[139].Add("for", "61");
			EstadoDeError[139].Add("break", "61");
			EstadoDeError[139].Add("return", "61");
			EstadoDeError[139].Add("System", "61");
			EstadoDeError[139].Add(".", "109");
			EstadoDeError[139].Add("else", "61");
			EstadoDeError[139].Add("-", "102");
			EstadoDeError[139].Add("/", "103");
			EstadoDeError[139].Add("%", "104");
			EstadoDeError[139].Add(">", "105");
			EstadoDeError[139].Add(">=", "106");
			EstadoDeError[139].Add("!=", "107");
			EstadoDeError[139].Add("||", "108");
			EstadoDeError[139].Add("!", "61");
			EstadoDeError[139].Add("New", "61");
			EstadoDeError[139].Add("this", "61");
			EstadoDeError[139].Add("intConstant", "61");
			EstadoDeError[139].Add("stringConstant", "61");
			EstadoDeError[139].Add("boolConstant", "61");
			EstadoDeError[139].Add("doubleConstant", "61");
			EstadoDeError[139].Add("null", "61");
			EstadoDeError.Add(140, new Dictionary<string, string>());
			EstadoDeError[140].Add("ident", "66");
			EstadoDeError[140].Add(";", "66");
			EstadoDeError[140].Add("(", "157");
			EstadoDeError[140].Add(")", "66");
			EstadoDeError[140].Add("static", "66");
			EstadoDeError[140].Add("{", "66");
			EstadoDeError[140].Add("}", "66");
			EstadoDeError[140].Add(",", "66");
			EstadoDeError[140].Add("int", "66");
			EstadoDeError[140].Add("double", "66");
			EstadoDeError[140].Add("boolean", "66");
			EstadoDeError[140].Add("string", "66");
			EstadoDeError[140].Add("if", "66");
			EstadoDeError[140].Add("while", "66");
			EstadoDeError[140].Add("for", "66");
			EstadoDeError[140].Add("break", "66");
			EstadoDeError[140].Add("return", "66");
			EstadoDeError[140].Add("System", "66");
			EstadoDeError[140].Add(".", "66");
			EstadoDeError[140].Add("else", "66");
			EstadoDeError[140].Add("-", "66");
			EstadoDeError[140].Add("/", "66");
			EstadoDeError[140].Add("%", "66");
			EstadoDeError[140].Add(">", "66");
			EstadoDeError[140].Add(">=", "66");
			EstadoDeError[140].Add("!=", "66");
			EstadoDeError[140].Add("||", "66");
			EstadoDeError[140].Add("!", "66");
			EstadoDeError[140].Add("New", "66");
			EstadoDeError[140].Add("=", "158");
			EstadoDeError[140].Add("this", "66");
			EstadoDeError[140].Add("intConstant", "66");
			EstadoDeError[140].Add("stringConstant", "66");
			EstadoDeError[140].Add("boolConstant", "66");
			EstadoDeError[140].Add("doubleConstant", "66");
			EstadoDeError[140].Add("null", "66");
			EstadoDeError.Add(141, new Dictionary<string, string>());
			EstadoDeError[141].Add(")", "159");
			EstadoDeError[141].Add(".", "109");
			EstadoDeError[141].Add("-", "102");
			EstadoDeError[141].Add("/", "103");
			EstadoDeError[141].Add("%", "104");
			EstadoDeError[141].Add(">", "105");
			EstadoDeError[141].Add(">=", "106");
			EstadoDeError[141].Add("!=", "107");
			EstadoDeError[141].Add("||", "108");
			EstadoDeError.Add(142, new Dictionary<string, string>());
			EstadoDeError[142].Add(")", "160");
			EstadoDeError[142].Add(".", "109");
			EstadoDeError[142].Add("-", "102");
			EstadoDeError[142].Add("/", "103");
			EstadoDeError[142].Add("%", "104");
			EstadoDeError[142].Add(">", "105");
			EstadoDeError[142].Add(">=", "106");
			EstadoDeError[142].Add("!=", "107");
			EstadoDeError[142].Add("||", "108");
			EstadoDeError.Add(143, new Dictionary<string, string>());
			EstadoDeError[143].Add(";", "161");
			EstadoDeError[143].Add(".", "109");
			EstadoDeError[143].Add("-", "102");
			EstadoDeError[143].Add("/", "103");
			EstadoDeError[143].Add("%", "104");
			EstadoDeError[143].Add(">", "105");
			EstadoDeError[143].Add(">=", "106");
			EstadoDeError[143].Add("!=", "107");
			EstadoDeError[143].Add("||", "108");
			EstadoDeError.Add(144, new Dictionary<string, string>());
			EstadoDeError[144].Add("ident", "47");
			EstadoDeError[144].Add(";", "47");
			EstadoDeError[144].Add("(", "47");
			EstadoDeError[144].Add("static", "47");
			EstadoDeError[144].Add("{", "47");
			EstadoDeError[144].Add("}", "47");
			EstadoDeError[144].Add("int", "47");
			EstadoDeError[144].Add("double", "47");
			EstadoDeError[144].Add("boolean", "47");
			EstadoDeError[144].Add("string", "47");
			EstadoDeError[144].Add("if", "47");
			EstadoDeError[144].Add("while", "47");
			EstadoDeError[144].Add("for", "47");
			EstadoDeError[144].Add("break", "47");
			EstadoDeError[144].Add("return", "47");
			EstadoDeError[144].Add("System", "47");
			EstadoDeError[144].Add("else", "47");
			EstadoDeError[144].Add("-", "47");
			EstadoDeError[144].Add("!", "47");
			EstadoDeError[144].Add("New", "47");
			EstadoDeError[144].Add("this", "47");
			EstadoDeError[144].Add("intConstant", "47");
			EstadoDeError[144].Add("stringConstant", "47");
			EstadoDeError[144].Add("boolConstant", "47");
			EstadoDeError[144].Add("doubleConstant", "47");
			EstadoDeError[144].Add("null", "47");
			EstadoDeError.Add(145, new Dictionary<string, string>());
			EstadoDeError[145].Add(".", "162");
			EstadoDeError.Add(146, new Dictionary<string, string>());
			EstadoDeError[146].Add(")", "163");
			EstadoDeError.Add(147, new Dictionary<string, string>());
			EstadoDeError[147].Add("ident", "72");
			EstadoDeError[147].Add(";", "72");
			EstadoDeError[147].Add("(", "72");
			EstadoDeError[147].Add(")", "72");
			EstadoDeError[147].Add("static", "72");
			EstadoDeError[147].Add("{", "72");
			EstadoDeError[147].Add("}", "72");
			EstadoDeError[147].Add(",", "72");
			EstadoDeError[147].Add("int", "72");
			EstadoDeError[147].Add("double", "72");
			EstadoDeError[147].Add("boolean", "72");
			EstadoDeError[147].Add("string", "72");
			EstadoDeError[147].Add("if", "72");
			EstadoDeError[147].Add("while", "72");
			EstadoDeError[147].Add("for", "72");
			EstadoDeError[147].Add("break", "72");
			EstadoDeError[147].Add("return", "72");
			EstadoDeError[147].Add("System", "72");
			EstadoDeError[147].Add(".", "72");
			EstadoDeError[147].Add("else", "72");
			EstadoDeError[147].Add("-", "72");
			EstadoDeError[147].Add("/", "72");
			EstadoDeError[147].Add("%", "72");
			EstadoDeError[147].Add(">", "72");
			EstadoDeError[147].Add(">=", "72");
			EstadoDeError[147].Add("!=", "72");
			EstadoDeError[147].Add("||", "72");
			EstadoDeError[147].Add("!", "72");
			EstadoDeError[147].Add("New", "72");
			EstadoDeError[147].Add("this", "72");
			EstadoDeError[147].Add("intConstant", "72");
			EstadoDeError[147].Add("stringConstant", "72");
			EstadoDeError[147].Add("boolConstant", "72");
			EstadoDeError[147].Add("doubleConstant", "72");
			EstadoDeError[147].Add("null", "72");
			EstadoDeError.Add(148, new Dictionary<string, string>());
			EstadoDeError[148].Add(")", "164");
			EstadoDeError.Add(149, new Dictionary<string, string>());
			EstadoDeError[149].Add(")", "165");
			EstadoDeError.Add(150, new Dictionary<string, string>());
			EstadoDeError[150].Add("ident", "36");
			EstadoDeError[150].Add("void", "36");
			EstadoDeError[150].Add("static", "36");
			EstadoDeError[150].Add("}", "36");
			EstadoDeError[150].Add("int", "36");
			EstadoDeError[150].Add("double", "36");
			EstadoDeError[150].Add("boolean", "36");
			EstadoDeError[150].Add("string", "36");
			EstadoDeError.Add(151, new Dictionary<string, string>());
			EstadoDeError[151].Add("ident", "39");
			EstadoDeError[151].Add("void", "39");
			EstadoDeError[151].Add("}", "39");
			EstadoDeError[151].Add("int", "39");
			EstadoDeError[151].Add("double", "39");
			EstadoDeError[151].Add("boolean", "39");
			EstadoDeError[151].Add("string", "39");
			EstadoDeError.Add(152, new Dictionary<string, string>());
			EstadoDeError[152].Add("ident", "40");
			EstadoDeError[152].Add("void", "40");
			EstadoDeError[152].Add("}", "40");
			EstadoDeError[152].Add("int", "40");
			EstadoDeError[152].Add("double", "40");
			EstadoDeError[152].Add("boolean", "40");
			EstadoDeError[152].Add("string", "40");
			EstadoDeError.Add(153, new Dictionary<string, string>());
			EstadoDeError[153].Add("}", "15");
			EstadoDeError.Add(154, new Dictionary<string, string>());
			EstadoDeError[154].Add("ident", "65");
			EstadoDeError[154].Add(";", "67");
			EstadoDeError[154].Add("(", "80");
			EstadoDeError[154].Add("static", "63");
			EstadoDeError[154].Add("{", "49");
			EstadoDeError[154].Add("}", "16");
			EstadoDeError[154].Add("int", "10");
			EstadoDeError[154].Add("double", "11");
			EstadoDeError[154].Add("boolean", "12");
			EstadoDeError[154].Add("string", "13");
			EstadoDeError[154].Add("if", "68");
			EstadoDeError[154].Add("while", "69");
			EstadoDeError[154].Add("for", "70");
			EstadoDeError[154].Add("break", "71");
			EstadoDeError[154].Add("return", "72");
			EstadoDeError[154].Add("System", "73");
			EstadoDeError[154].Add("-", "75");
			EstadoDeError[154].Add("!", "76");
			EstadoDeError[154].Add("New", "77");
			EstadoDeError[154].Add("this", "79");
			EstadoDeError[154].Add("intConstant", "81");
			EstadoDeError[154].Add("stringConstant", "82");
			EstadoDeError[154].Add("boolConstant", "83");
			EstadoDeError[154].Add("doubleConstant", "84");
			EstadoDeError[154].Add("null", "85");
			EstadoDeError.Add(155, new Dictionary<string, string>());
			EstadoDeError[155].Add("ident", "64");
			EstadoDeError[155].Add(";", "64");
			EstadoDeError[155].Add("(", "64");
			EstadoDeError[155].Add(")", "64");
			EstadoDeError[155].Add("static", "64");
			EstadoDeError[155].Add("{", "64");
			EstadoDeError[155].Add("}", "64");
			EstadoDeError[155].Add(",", "64");
			EstadoDeError[155].Add("int", "64");
			EstadoDeError[155].Add("double", "64");
			EstadoDeError[155].Add("boolean", "64");
			EstadoDeError[155].Add("string", "64");
			EstadoDeError[155].Add("if", "64");
			EstadoDeError[155].Add("while", "64");
			EstadoDeError[155].Add("for", "64");
			EstadoDeError[155].Add("break", "64");
			EstadoDeError[155].Add("return", "64");
			EstadoDeError[155].Add("System", "64");
			EstadoDeError[155].Add(".", "64");
			EstadoDeError[155].Add("else", "64");
			EstadoDeError[155].Add("-", "64");
			EstadoDeError[155].Add("/", "64");
			EstadoDeError[155].Add("%", "64");
			EstadoDeError[155].Add(">", "64");
			EstadoDeError[155].Add(">=", "64");
			EstadoDeError[155].Add("!=", "64");
			EstadoDeError[155].Add("||", "64");
			EstadoDeError[155].Add("!", "64");
			EstadoDeError[155].Add("New", "64");
			EstadoDeError[155].Add("this", "64");
			EstadoDeError[155].Add("intConstant", "64");
			EstadoDeError[155].Add("stringConstant", "64");
			EstadoDeError[155].Add("boolConstant", "64");
			EstadoDeError[155].Add("doubleConstant", "64");
			EstadoDeError[155].Add("null", "64");
			EstadoDeError.Add(156, new Dictionary<string, string>());
			EstadoDeError[156].Add("ident", "115");
			EstadoDeError[156].Add("(", "80");
			EstadoDeError[156].Add("-", "75");
			EstadoDeError[156].Add("!", "76");
			EstadoDeError[156].Add("New", "77");
			EstadoDeError[156].Add("this", "79");
			EstadoDeError[156].Add("intConstant", "81");
			EstadoDeError[156].Add("stringConstant", "82");
			EstadoDeError[156].Add("boolConstant", "83");
			EstadoDeError[156].Add("doubleConstant", "84");
			EstadoDeError[156].Add("null", "85");
			EstadoDeError.Add(157, new Dictionary<string, string>());
			EstadoDeError[157].Add("ident", "115");
			EstadoDeError[157].Add("(", "80");
			EstadoDeError[157].Add("-", "75");
			EstadoDeError[157].Add("!", "76");
			EstadoDeError[157].Add("New", "77");
			EstadoDeError[157].Add("this", "79");
			EstadoDeError[157].Add("intConstant", "81");
			EstadoDeError[157].Add("stringConstant", "82");
			EstadoDeError[157].Add("boolConstant", "83");
			EstadoDeError[157].Add("doubleConstant", "84");
			EstadoDeError[157].Add("null", "85");
			EstadoDeError.Add(158, new Dictionary<string, string>());
			EstadoDeError[158].Add("ident", "115");
			EstadoDeError[158].Add("(", "80");
			EstadoDeError[158].Add("-", "75");
			EstadoDeError[158].Add("!", "76");
			EstadoDeError[158].Add("New", "77");
			EstadoDeError[158].Add("this", "79");
			EstadoDeError[158].Add("intConstant", "81");
			EstadoDeError[158].Add("stringConstant", "82");
			EstadoDeError[158].Add("boolConstant", "83");
			EstadoDeError[158].Add("doubleConstant", "84");
			EstadoDeError[158].Add("null", "85");
			EstadoDeError.Add(159, new Dictionary<string, string>());
			EstadoDeError[159].Add("ident", "115");
			EstadoDeError[159].Add(";", "67");
			EstadoDeError[159].Add("(", "80");
			EstadoDeError[159].Add("{", "49");
			EstadoDeError[159].Add("if", "68");
			EstadoDeError[159].Add("while", "69");
			EstadoDeError[159].Add("for", "70");
			EstadoDeError[159].Add("break", "71");
			EstadoDeError[159].Add("return", "72");
			EstadoDeError[159].Add("System", "73");
			EstadoDeError[159].Add("-", "75");
			EstadoDeError[159].Add("!", "76");
			EstadoDeError[159].Add("New", "77");
			EstadoDeError[159].Add("this", "79");
			EstadoDeError[159].Add("intConstant", "81");
			EstadoDeError[159].Add("stringConstant", "82");
			EstadoDeError[159].Add("boolConstant", "83");
			EstadoDeError[159].Add("doubleConstant", "84");
			EstadoDeError[159].Add("null", "85");
			EstadoDeError.Add(160, new Dictionary<string, string>());
			EstadoDeError[160].Add("ident", "115");
			EstadoDeError[160].Add(";", "67");
			EstadoDeError[160].Add("(", "80");
			EstadoDeError[160].Add("{", "49");
			EstadoDeError[160].Add("if", "68");
			EstadoDeError[160].Add("while", "69");
			EstadoDeError[160].Add("for", "70");
			EstadoDeError[160].Add("break", "71");
			EstadoDeError[160].Add("return", "72");
			EstadoDeError[160].Add("System", "73");
			EstadoDeError[160].Add("-", "75");
			EstadoDeError[160].Add("!", "76");
			EstadoDeError[160].Add("New", "77");
			EstadoDeError[160].Add("this", "79");
			EstadoDeError[160].Add("intConstant", "81");
			EstadoDeError[160].Add("stringConstant", "82");
			EstadoDeError[160].Add("boolConstant", "83");
			EstadoDeError[160].Add("doubleConstant", "84");
			EstadoDeError[160].Add("null", "85");
			EstadoDeError.Add(161, new Dictionary<string, string>());
			EstadoDeError[161].Add("ident", "115");
			EstadoDeError[161].Add("(", "80");
			EstadoDeError[161].Add("-", "75");
			EstadoDeError[161].Add("!", "76");
			EstadoDeError[161].Add("New", "77");
			EstadoDeError[161].Add("this", "79");
			EstadoDeError[161].Add("intConstant", "81");
			EstadoDeError[161].Add("stringConstant", "82");
			EstadoDeError[161].Add("boolConstant", "83");
			EstadoDeError[161].Add("doubleConstant", "84");
			EstadoDeError[161].Add("null", "85");
			EstadoDeError.Add(162, new Dictionary<string, string>());
			EstadoDeError[162].Add("println", "173");
			EstadoDeError.Add(163, new Dictionary<string, string>());
			EstadoDeError[163].Add("ident", "63");
			EstadoDeError[163].Add(";", "63");
			EstadoDeError[163].Add("(", "63");
			EstadoDeError[163].Add(")", "63");
			EstadoDeError[163].Add("static", "63");
			EstadoDeError[163].Add("{", "63");
			EstadoDeError[163].Add("}", "63");
			EstadoDeError[163].Add(",", "63");
			EstadoDeError[163].Add("int", "63");
			EstadoDeError[163].Add("double", "63");
			EstadoDeError[163].Add("boolean", "63");
			EstadoDeError[163].Add("string", "63");
			EstadoDeError[163].Add("if", "63");
			EstadoDeError[163].Add("while", "63");
			EstadoDeError[163].Add("for", "63");
			EstadoDeError[163].Add("break", "63");
			EstadoDeError[163].Add("return", "63");
			EstadoDeError[163].Add("System", "63");
			EstadoDeError[163].Add(".", "63");
			EstadoDeError[163].Add("else", "63");
			EstadoDeError[163].Add("-", "63");
			EstadoDeError[163].Add("/", "63");
			EstadoDeError[163].Add("%", "63");
			EstadoDeError[163].Add(">", "63");
			EstadoDeError[163].Add(">=", "63");
			EstadoDeError[163].Add("!=", "63");
			EstadoDeError[163].Add("||", "63");
			EstadoDeError[163].Add("!", "63");
			EstadoDeError[163].Add("New", "63");
			EstadoDeError[163].Add("this", "63");
			EstadoDeError[163].Add("intConstant", "63");
			EstadoDeError[163].Add("stringConstant", "63");
			EstadoDeError[163].Add("boolConstant", "63");
			EstadoDeError[163].Add("doubleConstant", "63");
			EstadoDeError[163].Add("null", "63");
			EstadoDeError.Add(164, new Dictionary<string, string>());
			EstadoDeError[164].Add("{", "49");
			EstadoDeError.Add(165, new Dictionary<string, string>());
			EstadoDeError[165].Add("{", "49");
			EstadoDeError.Add(166, new Dictionary<string, string>());
			EstadoDeError[166].Add("}", "17");
			EstadoDeError.Add(167, new Dictionary<string, string>());
			EstadoDeError[167].Add(")", "73");
			EstadoDeError.Add(168, new Dictionary<string, string>());
			EstadoDeError[168].Add(")", "176");
			EstadoDeError.Add(169, new Dictionary<string, string>());
			EstadoDeError[169].Add("ident", "68");
			EstadoDeError[169].Add(";", "68");
			EstadoDeError[169].Add("(", "68");
			EstadoDeError[169].Add(")", "68");
			EstadoDeError[169].Add("static", "68");
			EstadoDeError[169].Add("{", "68");
			EstadoDeError[169].Add("}", "68");
			EstadoDeError[169].Add(",", "68");
			EstadoDeError[169].Add("int", "68");
			EstadoDeError[169].Add("double", "68");
			EstadoDeError[169].Add("boolean", "68");
			EstadoDeError[169].Add("string", "68");
			EstadoDeError[169].Add("if", "68");
			EstadoDeError[169].Add("while", "68");
			EstadoDeError[169].Add("for", "68");
			EstadoDeError[169].Add("break", "68");
			EstadoDeError[169].Add("return", "68");
			EstadoDeError[169].Add("System", "68");
			EstadoDeError[169].Add(".", "109");
			EstadoDeError[169].Add("else", "68");
			EstadoDeError[169].Add("-", "102");
			EstadoDeError[169].Add("/", "103");
			EstadoDeError[169].Add("%", "104");
			EstadoDeError[169].Add(">", "105");
			EstadoDeError[169].Add(">=", "106");
			EstadoDeError[169].Add("!=", "107");
			EstadoDeError[169].Add("||", "108");
			EstadoDeError[169].Add("!", "68");
			EstadoDeError[169].Add("New", "68");
			EstadoDeError[169].Add("this", "68");
			EstadoDeError[169].Add("intConstant", "68");
			EstadoDeError[169].Add("stringConstant", "68");
			EstadoDeError[169].Add("boolConstant", "68");
			EstadoDeError[169].Add("doubleConstant", "68");
			EstadoDeError[169].Add("null", "68");
			EstadoDeError.Add(170, new Dictionary<string, string>());
			EstadoDeError[170].Add("ident", "51");
			EstadoDeError[170].Add(";", "51");
			EstadoDeError[170].Add("(", "51");
			EstadoDeError[170].Add("static", "51");
			EstadoDeError[170].Add("{", "51");
			EstadoDeError[170].Add("}", "51");
			EstadoDeError[170].Add("int", "51");
			EstadoDeError[170].Add("double", "51");
			EstadoDeError[170].Add("boolean", "51");
			EstadoDeError[170].Add("string", "51");
			EstadoDeError[170].Add("if", "51");
			EstadoDeError[170].Add("while", "51");
			EstadoDeError[170].Add("for", "51");
			EstadoDeError[170].Add("break", "51");
			EstadoDeError[170].Add("return", "51");
			EstadoDeError[170].Add("System", "51");
			EstadoDeError[170].Add("else", "178");
			EstadoDeError[170].Add("-", "51");
			EstadoDeError[170].Add("!", "51");
			EstadoDeError[170].Add("New", "51");
			EstadoDeError[170].Add("this", "51");
			EstadoDeError[170].Add("intConstant", "51");
			EstadoDeError[170].Add("stringConstant", "51");
			EstadoDeError[170].Add("boolConstant", "51");
			EstadoDeError[170].Add("doubleConstant", "51");
			EstadoDeError[170].Add("null", "51");
			EstadoDeError.Add(171, new Dictionary<string, string>());
			EstadoDeError[171].Add("ident", "44");
			EstadoDeError[171].Add(";", "44");
			EstadoDeError[171].Add("(", "44");
			EstadoDeError[171].Add("static", "44");
			EstadoDeError[171].Add("{", "44");
			EstadoDeError[171].Add("}", "44");
			EstadoDeError[171].Add("int", "44");
			EstadoDeError[171].Add("double", "44");
			EstadoDeError[171].Add("boolean", "44");
			EstadoDeError[171].Add("string", "44");
			EstadoDeError[171].Add("if", "44");
			EstadoDeError[171].Add("while", "44");
			EstadoDeError[171].Add("for", "44");
			EstadoDeError[171].Add("break", "44");
			EstadoDeError[171].Add("return", "44");
			EstadoDeError[171].Add("System", "44");
			EstadoDeError[171].Add("else", "44");
			EstadoDeError[171].Add("-", "44");
			EstadoDeError[171].Add("!", "44");
			EstadoDeError[171].Add("New", "44");
			EstadoDeError[171].Add("this", "44");
			EstadoDeError[171].Add("intConstant", "44");
			EstadoDeError[171].Add("stringConstant", "44");
			EstadoDeError[171].Add("boolConstant", "44");
			EstadoDeError[171].Add("doubleConstant", "44");
			EstadoDeError[171].Add("null", "44");
			EstadoDeError.Add(172, new Dictionary<string, string>());
			EstadoDeError[172].Add(";", "179");
			EstadoDeError[172].Add(".", "109");
			EstadoDeError[172].Add("-", "102");
			EstadoDeError[172].Add("/", "103");
			EstadoDeError[172].Add("%", "104");
			EstadoDeError[172].Add(">", "105");
			EstadoDeError[172].Add(">=", "106");
			EstadoDeError[172].Add("!=", "107");
			EstadoDeError[172].Add("||", "108");
			EstadoDeError.Add(173, new Dictionary<string, string>());
			EstadoDeError[173].Add("(", "180");
			EstadoDeError.Add(174, new Dictionary<string, string>());
			EstadoDeError[174].Add("ident", "34");
			EstadoDeError[174].Add("void", "34");
			EstadoDeError[174].Add("static", "34");
			EstadoDeError[174].Add("}", "34");
			EstadoDeError[174].Add("int", "34");
			EstadoDeError[174].Add("double", "34");
			EstadoDeError[174].Add("boolean", "34");
			EstadoDeError[174].Add("string", "34");
			EstadoDeError.Add(175, new Dictionary<string, string>());
			EstadoDeError[175].Add("ident", "35");
			EstadoDeError[175].Add("void", "35");
			EstadoDeError[175].Add("static", "35");
			EstadoDeError[175].Add("}", "35");
			EstadoDeError[175].Add("int", "35");
			EstadoDeError[175].Add("double", "35");
			EstadoDeError[175].Add("boolean", "35");
			EstadoDeError[175].Add("string", "35");
			EstadoDeError.Add(176, new Dictionary<string, string>());
			EstadoDeError[176].Add("ident", "65");
			EstadoDeError[176].Add(";", "65");
			EstadoDeError[176].Add("(", "65");
			EstadoDeError[176].Add(")", "65");
			EstadoDeError[176].Add("static", "65");
			EstadoDeError[176].Add("{", "65");
			EstadoDeError[176].Add("}", "65");
			EstadoDeError[176].Add(",", "65");
			EstadoDeError[176].Add("int", "65");
			EstadoDeError[176].Add("double", "65");
			EstadoDeError[176].Add("boolean", "65");
			EstadoDeError[176].Add("string", "65");
			EstadoDeError[176].Add("if", "65");
			EstadoDeError[176].Add("while", "65");
			EstadoDeError[176].Add("for", "65");
			EstadoDeError[176].Add("break", "65");
			EstadoDeError[176].Add("return", "65");
			EstadoDeError[176].Add("System", "65");
			EstadoDeError[176].Add(".", "65");
			EstadoDeError[176].Add("else", "65");
			EstadoDeError[176].Add("-", "65");
			EstadoDeError[176].Add("/", "65");
			EstadoDeError[176].Add("%", "65");
			EstadoDeError[176].Add(">", "65");
			EstadoDeError[176].Add(">=", "65");
			EstadoDeError[176].Add("!=", "65");
			EstadoDeError[176].Add("||", "65");
			EstadoDeError[176].Add("!", "65");
			EstadoDeError[176].Add("New", "65");
			EstadoDeError[176].Add("this", "65");
			EstadoDeError[176].Add("intConstant", "65");
			EstadoDeError[176].Add("stringConstant", "65");
			EstadoDeError[176].Add("boolConstant", "65");
			EstadoDeError[176].Add("doubleConstant", "65");
			EstadoDeError[176].Add("null", "65");
			EstadoDeError.Add(177, new Dictionary<string, string>());
			EstadoDeError[177].Add("ident", "43");
			EstadoDeError[177].Add(";", "43");
			EstadoDeError[177].Add("(", "43");
			EstadoDeError[177].Add("static", "43");
			EstadoDeError[177].Add("{", "43");
			EstadoDeError[177].Add("}", "43");
			EstadoDeError[177].Add("int", "43");
			EstadoDeError[177].Add("double", "43");
			EstadoDeError[177].Add("boolean", "43");
			EstadoDeError[177].Add("string", "43");
			EstadoDeError[177].Add("if", "43");
			EstadoDeError[177].Add("while", "43");
			EstadoDeError[177].Add("for", "43");
			EstadoDeError[177].Add("break", "43");
			EstadoDeError[177].Add("return", "43");
			EstadoDeError[177].Add("System", "43");
			EstadoDeError[177].Add("else", "43");
			EstadoDeError[177].Add("-", "43");
			EstadoDeError[177].Add("!", "43");
			EstadoDeError[177].Add("New", "43");
			EstadoDeError[177].Add("this", "43");
			EstadoDeError[177].Add("intConstant", "43");
			EstadoDeError[177].Add("stringConstant", "43");
			EstadoDeError[177].Add("boolConstant", "43");
			EstadoDeError[177].Add("doubleConstant", "43");
			EstadoDeError[177].Add("null", "43");
			EstadoDeError.Add(178, new Dictionary<string, string>());
			EstadoDeError[178].Add("ident", "115");
			EstadoDeError[178].Add(";", "67");
			EstadoDeError[178].Add("(", "80");
			EstadoDeError[178].Add("{", "49");
			EstadoDeError[178].Add("if", "68");
			EstadoDeError[178].Add("while", "69");
			EstadoDeError[178].Add("for", "70");
			EstadoDeError[178].Add("break", "71");
			EstadoDeError[178].Add("return", "72");
			EstadoDeError[178].Add("System", "73");
			EstadoDeError[178].Add("-", "75");
			EstadoDeError[178].Add("!", "76");
			EstadoDeError[178].Add("New", "77");
			EstadoDeError[178].Add("this", "79");
			EstadoDeError[178].Add("intConstant", "81");
			EstadoDeError[178].Add("stringConstant", "82");
			EstadoDeError[178].Add("boolConstant", "83");
			EstadoDeError[178].Add("doubleConstant", "84");
			EstadoDeError[178].Add("null", "85");
			EstadoDeError.Add(179, new Dictionary<string, string>());
			EstadoDeError[179].Add("ident", "115");
			EstadoDeError[179].Add("(", "80");
			EstadoDeError[179].Add("-", "75");
			EstadoDeError[179].Add("!", "76");
			EstadoDeError[179].Add("New", "77");
			EstadoDeError[179].Add("this", "79");
			EstadoDeError[179].Add("intConstant", "81");
			EstadoDeError[179].Add("stringConstant", "82");
			EstadoDeError[179].Add("boolConstant", "83");
			EstadoDeError[179].Add("doubleConstant", "84");
			EstadoDeError[179].Add("null", "85");
			EstadoDeError.Add(180, new Dictionary<string, string>());
			EstadoDeError[180].Add("ident", "115");
			EstadoDeError[180].Add("(", "80");
			EstadoDeError[180].Add("-", "75");
			EstadoDeError[180].Add("!", "76");
			EstadoDeError[180].Add("New", "77");
			EstadoDeError[180].Add("this", "79");
			EstadoDeError[180].Add("intConstant", "81");
			EstadoDeError[180].Add("stringConstant", "82");
			EstadoDeError[180].Add("boolConstant", "83");
			EstadoDeError[180].Add("doubleConstant", "84");
			EstadoDeError[180].Add("null", "85");
			EstadoDeError.Add(181, new Dictionary<string, string>());
			EstadoDeError[181].Add("ident", "50");
			EstadoDeError[181].Add(";", "50");
			EstadoDeError[181].Add("(", "50");
			EstadoDeError[181].Add("static", "50");
			EstadoDeError[181].Add("{", "50");
			EstadoDeError[181].Add("}", "50");
			EstadoDeError[181].Add("int", "50");
			EstadoDeError[181].Add("double", "50");
			EstadoDeError[181].Add("boolean", "50");
			EstadoDeError[181].Add("string", "50");
			EstadoDeError[181].Add("if", "50");
			EstadoDeError[181].Add("while", "50");
			EstadoDeError[181].Add("for", "50");
			EstadoDeError[181].Add("break", "50");
			EstadoDeError[181].Add("return", "50");
			EstadoDeError[181].Add("System", "50");
			EstadoDeError[181].Add("else", "50");
			EstadoDeError[181].Add("-", "50");
			EstadoDeError[181].Add("!", "50");
			EstadoDeError[181].Add("New", "50");
			EstadoDeError[181].Add("this", "50");
			EstadoDeError[181].Add("intConstant", "50");
			EstadoDeError[181].Add("stringConstant", "50");
			EstadoDeError[181].Add("boolConstant", "50");
			EstadoDeError[181].Add("doubleConstant", "50");
			EstadoDeError[181].Add("null", "50");
			EstadoDeError.Add(182, new Dictionary<string, string>());
			EstadoDeError[182].Add(")", "184");
			EstadoDeError[182].Add(".", "109");
			EstadoDeError[182].Add("-", "102");
			EstadoDeError[182].Add("/", "103");
			EstadoDeError[182].Add("%", "104");
			EstadoDeError[182].Add(">", "105");
			EstadoDeError[182].Add(">=", "106");
			EstadoDeError[182].Add("!=", "107");
			EstadoDeError[182].Add("||", "108");
			EstadoDeError.Add(183, new Dictionary<string, string>());
			EstadoDeError[183].Add(")", "53");
			EstadoDeError[183].Add(",", "186");
			EstadoDeError[183].Add(".", "109");
			EstadoDeError[183].Add("-", "102");
			EstadoDeError[183].Add("/", "103");
			EstadoDeError[183].Add("%", "104");
			EstadoDeError[183].Add(">", "105");
			EstadoDeError[183].Add(">=", "106");
			EstadoDeError[183].Add("!=", "107");
			EstadoDeError[183].Add("||", "108");
			EstadoDeError.Add(184, new Dictionary<string, string>());
			EstadoDeError[184].Add("ident", "115");
			EstadoDeError[184].Add(";", "67");
			EstadoDeError[184].Add("(", "80");
			EstadoDeError[184].Add("{", "49");
			EstadoDeError[184].Add("if", "68");
			EstadoDeError[184].Add("while", "69");
			EstadoDeError[184].Add("for", "70");
			EstadoDeError[184].Add("break", "71");
			EstadoDeError[184].Add("return", "72");
			EstadoDeError[184].Add("System", "73");
			EstadoDeError[184].Add("-", "75");
			EstadoDeError[184].Add("!", "76");
			EstadoDeError[184].Add("New", "77");
			EstadoDeError[184].Add("this", "79");
			EstadoDeError[184].Add("intConstant", "81");
			EstadoDeError[184].Add("stringConstant", "82");
			EstadoDeError[184].Add("boolConstant", "83");
			EstadoDeError[184].Add("doubleConstant", "84");
			EstadoDeError[184].Add("null", "85");
			EstadoDeError.Add(185, new Dictionary<string, string>());
			EstadoDeError[185].Add(")", "188");
			EstadoDeError.Add(186, new Dictionary<string, string>());
			EstadoDeError[186].Add("ident", "115");
			EstadoDeError[186].Add("(", "80");
			EstadoDeError[186].Add("-", "75");
			EstadoDeError[186].Add("!", "76");
			EstadoDeError[186].Add("New", "77");
			EstadoDeError[186].Add("this", "79");
			EstadoDeError[186].Add("intConstant", "81");
			EstadoDeError[186].Add("stringConstant", "82");
			EstadoDeError[186].Add("boolConstant", "83");
			EstadoDeError[186].Add("doubleConstant", "84");
			EstadoDeError[186].Add("null", "85");
			EstadoDeError.Add(187, new Dictionary<string, string>());
			EstadoDeError[187].Add("ident", "45");
			EstadoDeError[187].Add(";", "45");
			EstadoDeError[187].Add("(", "45");
			EstadoDeError[187].Add("static", "45");
			EstadoDeError[187].Add("{", "45");
			EstadoDeError[187].Add("}", "45");
			EstadoDeError[187].Add("int", "45");
			EstadoDeError[187].Add("double", "45");
			EstadoDeError[187].Add("boolean", "45");
			EstadoDeError[187].Add("string", "45");
			EstadoDeError[187].Add("if", "45");
			EstadoDeError[187].Add("while", "45");
			EstadoDeError[187].Add("for", "45");
			EstadoDeError[187].Add("break", "45");
			EstadoDeError[187].Add("return", "45");
			EstadoDeError[187].Add("System", "45");
			EstadoDeError[187].Add("else", "45");
			EstadoDeError[187].Add("-", "45");
			EstadoDeError[187].Add("!", "45");
			EstadoDeError[187].Add("New", "45");
			EstadoDeError[187].Add("this", "45");
			EstadoDeError[187].Add("intConstant", "45");
			EstadoDeError[187].Add("stringConstant", "45");
			EstadoDeError[187].Add("boolConstant", "45");
			EstadoDeError[187].Add("doubleConstant", "45");
			EstadoDeError[187].Add("null", "45");
			EstadoDeError.Add(188, new Dictionary<string, string>());
			EstadoDeError[188].Add(";", "190");
			EstadoDeError.Add(189, new Dictionary<string, string>());
			EstadoDeError[189].Add(")", "53");
			EstadoDeError[189].Add(",", "186");
			EstadoDeError[189].Add(".", "109");
			EstadoDeError[189].Add("-", "102");
			EstadoDeError[189].Add("/", "103");
			EstadoDeError[189].Add("%", "104");
			EstadoDeError[189].Add(">", "105");
			EstadoDeError[189].Add(">=", "106");
			EstadoDeError[189].Add("!=", "107");
			EstadoDeError[189].Add("||", "108");
			EstadoDeError.Add(190, new Dictionary<string, string>());
			EstadoDeError[190].Add("ident", "48");
			EstadoDeError[190].Add(";", "48");
			EstadoDeError[190].Add("(", "48");
			EstadoDeError[190].Add("static", "48");
			EstadoDeError[190].Add("{", "48");
			EstadoDeError[190].Add("}", "48");
			EstadoDeError[190].Add("int", "48");
			EstadoDeError[190].Add("double", "48");
			EstadoDeError[190].Add("boolean", "48");
			EstadoDeError[190].Add("string", "48");
			EstadoDeError[190].Add("if", "48");
			EstadoDeError[190].Add("while", "48");
			EstadoDeError[190].Add("for", "48");
			EstadoDeError[190].Add("break", "48");
			EstadoDeError[190].Add("return", "48");
			EstadoDeError[190].Add("System", "48");
			EstadoDeError[190].Add("else", "48");
			EstadoDeError[190].Add("-", "48");
			EstadoDeError[190].Add("!", "48");
			EstadoDeError[190].Add("New", "48");
			EstadoDeError[190].Add("this", "48");
			EstadoDeError[190].Add("intConstant", "48");
			EstadoDeError[190].Add("stringConstant", "48");
			EstadoDeError[190].Add("boolConstant", "48");
			EstadoDeError[190].Add("doubleConstant", "48");
			EstadoDeError[190].Add("null", "48");
			EstadoDeError.Add(191, new Dictionary<string, string>());
			EstadoDeError[191].Add(")", "52");

		}
		public void Err()
		{
			bool encontrado = true;
			while (encontrado)
			{
				if (StackDeEntrada.Count != 0)
				{
					var lookahead = StackDeEntrada.Peek().Key;
					var estadoactual = EstadoDeError[StackDeConsumo.Peek()];
					if (estadoactual.ContainsKey(StackDeEntrada.Peek().Key))
					{
						// lo cointiene, ir a
						IrA(StackDeConsumo.Peek(), StackDeEntrada.Peek().Key);
					}
					else
					{
						if (StackDeEntrada.Peek().Key == "$")
						{
							IrA(StackDeConsumo.Peek(), StackDeEntrada.Peek().Key);
							return;
						}
						else
						{
							Console.ForegroundColor = ConsoleColor.Red;
							Console.WriteLine($"{ContadorErrores}. Err: {StackDeLineasYColumnas.Pop()} Token No Esperado: \"{StackDeEntrada.Pop().Key}\"");
							Console.ForegroundColor = ConsoleColor.White;
						}
						ContadorErrores++;
					}
				}
				else
				{
					Console.WriteLine("ERR: Gramatica no aceptada. Errores hasta EOF");
					return;
				}
			}
			return;
		}
		void CargarDiccionario()
		{
			Reducciones.Add(0, "Start↓Program");
			Reducciones.Add(1, "Program↓Decl Program");
			Reducciones.Add(2, "Program↓Decl");
			Reducciones.Add(3, "Decl↓Type ident ;");
			Reducciones.Add(4, "Decl↓Type ident ( Formals ) StmtBlock");
			Reducciones.Add(5, "Decl↓void ident ( Formals ) StmtBlock");
			Reducciones.Add(6, "Decl↓static CnsTp ident ;");
			Reducciones.Add(7, "Decl↓class ident Heritage HeritageI { FieldP }");
			Reducciones.Add(8, "Decl↓interface ident { Proto }");
			Reducciones.Add(9, "Type↓CnsTp");
			Reducciones.Add(10, "Type↓ident");
			Reducciones.Add(11, "Type↓Type []");
			Reducciones.Add(12, "Formals↓Type ident , Formals");
			Reducciones.Add(13, "Formals↓Type ident");
			Reducciones.Add(14, "StmtBlock↓{ COMBINACION }");
			Reducciones.Add(15, "COMBINACION↓Type ident ; COMBINACION");
			Reducciones.Add(16, "COMBINACION↓''");
			Reducciones.Add(17, "COMBINACION↓static CnsTp ident ; COMBINACION");
			Reducciones.Add(18, "COMBINACION↓''");
			Reducciones.Add(19, "COMBINACION↓Stmt COMBINACION");
			Reducciones.Add(20, "COMBINACION↓''");
			Reducciones.Add(21, "CnsTp↓int");
			Reducciones.Add(22, "CnsTp↓double");
			Reducciones.Add(23, "CnsTp↓boolean");
			Reducciones.Add(24, "CnsTp↓string");
			Reducciones.Add(25, "Heritage↓extends ident");
			Reducciones.Add(26, "Heritage↓''");
			Reducciones.Add(27, "HeritageI↓implements ident HeritageD");
			Reducciones.Add(28, "HeritageI↓''");
			Reducciones.Add(29, "HeritageD↓, ident HeritageD");
			Reducciones.Add(30, "HeritageD↓''");
			Reducciones.Add(31, "FieldP↓Field FieldP");
			Reducciones.Add(32, "FieldP↓''");
			Reducciones.Add(33, "Field↓Type ident ;");
			Reducciones.Add(34, "Field↓Type ident ( Formals ) StmtBlock");
			Reducciones.Add(35, "Field↓void ident ( Formals ) StmtBlock");
			Reducciones.Add(36, "Field↓static CnsTp ident ;");
			Reducciones.Add(37, "Proto↓Prototype Proto");
			Reducciones.Add(38, "Proto↓''");
			Reducciones.Add(39, "Prototype↓Type ident ( Formals ) ;");
			Reducciones.Add(40, "Prototype↓void ident ( Formals ) ;");
			Reducciones.Add(41, "Stmt↓Expr ;");
			Reducciones.Add(42, "Stmt↓;");
			Reducciones.Add(43, "Stmt↓if ( Expr ) Stmt ElseStmt");
			Reducciones.Add(44, "Stmt↓while ( Expr ) Stmt");
			Reducciones.Add(45, "Stmt↓for ( Expr ; Expr ; Expr ) Stmt");
			Reducciones.Add(46, "Stmt↓break ;");
			Reducciones.Add(47, "Stmt↓return Expr ;");
			Reducciones.Add(48, "Stmt↓System . out . println ( Expr ExPrint ) ;");
			Reducciones.Add(49, "Stmt↓StmtBlock");
			Reducciones.Add(50, "ElseStmt↓else Stmt");
			Reducciones.Add(51, "ElseStmt↓''");
			Reducciones.Add(52, "ExPrint↓, Expr ExPrint");
			Reducciones.Add(53, "ExPrint↓''");
			Reducciones.Add(54, "Expr↓Expr - Expr");
			Reducciones.Add(55, "Expr↓Expr / Expr");
			Reducciones.Add(56, "Expr↓Expr % Expr");
			Reducciones.Add(57, "Expr↓- Expr");
			Reducciones.Add(58, "Expr↓Expr > Expr");
			Reducciones.Add(59, "Expr↓Expr >= Expr");
			Reducciones.Add(60, "Expr↓Expr != Expr");
			Reducciones.Add(61, "Expr↓Expr || Expr");
			Reducciones.Add(62, "Expr↓! Expr");
			Reducciones.Add(63, "Expr↓New ( ident )");
			Reducciones.Add(64, "Expr↓ident ( Actuals )");
			Reducciones.Add(65, "Expr↓Expr . ident ( Actuals )");
			Reducciones.Add(66, "Expr↓Expr . ident");
			Reducciones.Add(67, "Expr↓ident");
			Reducciones.Add(68, "Expr↓Expr . ident = Expr");
			Reducciones.Add(69, "Expr↓ident = Expr");
			Reducciones.Add(70, "Expr↓Constant");
			Reducciones.Add(71, "Expr↓this");
			Reducciones.Add(72, "Expr↓( Expr )");
			Reducciones.Add(73, "Actuals↓Expr , Actuals");
			Reducciones.Add(74, "Actuals↓Expr");
			Reducciones.Add(75, "Constant↓intConstant");
			Reducciones.Add(76, "Constant↓stringConstant");
			Reducciones.Add(77, "Constant↓boolConstant");
			Reducciones.Add(78, "Constant↓doubleConstant");
			Reducciones.Add(79, "Constant↓null");
		}
		void IrA(int numEstado, string _lookahead)
		{
			switch (numEstado)
			{
				case 0:
					Estado0(_lookahead);
					break;
				case 1:
					Estado1(_lookahead);
					break;
				case 2:
					Estado2(_lookahead);
					break;
				case 3:
					Estado3(_lookahead);
					break;
				case 4:
					Estado4(_lookahead);
					break;
				case 5:
					Estado5(_lookahead);
					break;
				case 6:
					Estado6(_lookahead);
					break;
				case 7:
					Estado7(_lookahead);
					break;
				case 8:
					Estado8(_lookahead);
					break;
				case 9:
					Estado9(_lookahead);
					break;
				case 10:
					Estado10(_lookahead);
					break;
				case 11:
					Estado11(_lookahead);
					break;
				case 12:
					Estado12(_lookahead);
					break;
				case 13:
					Estado13(_lookahead);
					break;
				case 14:
					Estado14(_lookahead);
					break;
				case 15:
					Estado15(_lookahead);
					break;
				case 16:
					Estado16(_lookahead);
					break;
				case 17:
					Estado17(_lookahead);
					break;
				case 18:
					Estado18(_lookahead);
					break;
				case 19:
					Estado19(_lookahead);
					break;
				case 20:
					Estado20(_lookahead);
					break;
				case 21:
					Estado21(_lookahead);
					break;
				case 22:
					Estado22(_lookahead);
					break;
				case 23:
					Estado23(_lookahead);
					break;
				case 24:
					Estado24(_lookahead);
					break;
				case 25:
					Estado25(_lookahead);
					break;
				case 26:
					Estado26(_lookahead);
					break;
				case 27:
					Estado27(_lookahead);
					break;
				case 28:
					Estado28(_lookahead);
					break;
				case 29:
					Estado29(_lookahead);
					break;
				case 30:
					Estado30(_lookahead);
					break;
				case 31:
					Estado31(_lookahead);
					break;
				case 32:
					Estado32(_lookahead);
					break;
				case 33:
					Estado33(_lookahead);
					break;
				case 34:
					Estado34(_lookahead);
					break;
				case 35:
					Estado35(_lookahead);
					break;
				case 36:
					Estado36(_lookahead);
					break;
				case 37:
					Estado37(_lookahead);
					break;
				case 38:
					Estado38(_lookahead);
					break;
				case 39:
					Estado39(_lookahead);
					break;
				case 40:
					Estado40(_lookahead);
					break;
				case 41:
					Estado41(_lookahead);
					break;
				case 42:
					Estado42(_lookahead);
					break;
				case 43:
					Estado43(_lookahead);
					break;
				case 44:
					Estado44(_lookahead);
					break;
				case 45:
					Estado45(_lookahead);
					break;
				case 46:
					Estado46(_lookahead);
					break;
				case 47:
					Estado47(_lookahead);
					break;
				case 48:
					Estado48(_lookahead);
					break;
				case 49:
					Estado49(_lookahead);
					break;
				case 50:
					Estado50(_lookahead);
					break;
				case 51:
					Estado51(_lookahead);
					break;
				case 52:
					Estado52(_lookahead);
					break;
				case 53:
					Estado53(_lookahead);
					break;
				case 54:
					Estado54(_lookahead);
					break;
				case 55:
					Estado55(_lookahead);
					break;
				case 56:
					Estado56(_lookahead);
					break;
				case 57:
					Estado57(_lookahead);
					break;
				case 58:
					Estado58(_lookahead);
					break;
				case 59:
					Estado59(_lookahead);
					break;
				case 60:
					Estado60(_lookahead);
					break;
				case 61:
					Estado61(_lookahead);
					break;
				case 62:
					Estado62(_lookahead);
					break;
				case 63:
					Estado63(_lookahead);
					break;
				case 64:
					Estado64(_lookahead);
					break;
				case 65:
					Estado65(_lookahead);
					break;
				case 66:
					Estado66(_lookahead);
					break;
				case 67:
					Estado67(_lookahead);
					break;
				case 68:
					Estado68(_lookahead);
					break;
				case 69:
					Estado69(_lookahead);
					break;
				case 70:
					Estado70(_lookahead);
					break;
				case 71:
					Estado71(_lookahead);
					break;
				case 72:
					Estado72(_lookahead);
					break;
				case 73:
					Estado73(_lookahead);
					break;
				case 74:
					Estado74(_lookahead);
					break;
				case 75:
					Estado75(_lookahead);
					break;
				case 76:
					Estado76(_lookahead);
					break;
				case 77:
					Estado77(_lookahead);
					break;
				case 78:
					Estado78(_lookahead);
					break;
				case 79:
					Estado79(_lookahead);
					break;
				case 80:
					Estado80(_lookahead);
					break;
				case 81:
					Estado81(_lookahead);
					break;
				case 82:
					Estado82(_lookahead);
					break;
				case 83:
					Estado83(_lookahead);
					break;
				case 84:
					Estado84(_lookahead);
					break;
				case 85:
					Estado85(_lookahead);
					break;
				case 86:
					Estado86(_lookahead);
					break;
				case 87:
					Estado87(_lookahead);
					break;
				case 88:
					Estado88(_lookahead);
					break;
				case 89:
					Estado89(_lookahead);
					break;
				case 90:
					Estado90(_lookahead);
					break;
				case 91:
					Estado91(_lookahead);
					break;
				case 92:
					Estado92(_lookahead);
					break;
				case 93:
					Estado93(_lookahead);
					break;
				case 94:
					Estado94(_lookahead);
					break;
				case 95:
					Estado95(_lookahead);
					break;
				case 96:
					Estado96(_lookahead);
					break;
				case 97:
					Estado97(_lookahead);
					break;
				case 98:
					Estado98(_lookahead);
					break;
				case 99:
					Estado99(_lookahead);
					break;
				case 100:
					Estado100(_lookahead);
					break;
				case 101:
					Estado101(_lookahead);
					break;
				case 102:
					Estado102(_lookahead);
					break;
				case 103:
					Estado103(_lookahead);
					break;
				case 104:
					Estado104(_lookahead);
					break;
				case 105:
					Estado105(_lookahead);
					break;
				case 106:
					Estado106(_lookahead);
					break;
				case 107:
					Estado107(_lookahead);
					break;
				case 108:
					Estado108(_lookahead);
					break;
				case 109:
					Estado109(_lookahead);
					break;
				case 110:
					Estado110(_lookahead);
					break;
				case 111:
					Estado111(_lookahead);
					break;
				case 112:
					Estado112(_lookahead);
					break;
				case 113:
					Estado113(_lookahead);
					break;
				case 114:
					Estado114(_lookahead);
					break;
				case 115:
					Estado115(_lookahead);
					break;
				case 116:
					Estado116(_lookahead);
					break;
				case 117:
					Estado117(_lookahead);
					break;
				case 118:
					Estado118(_lookahead);
					break;
				case 119:
					Estado119(_lookahead);
					break;
				case 120:
					Estado120(_lookahead);
					break;
				case 121:
					Estado121(_lookahead);
					break;
				case 122:
					Estado122(_lookahead);
					break;
				case 123:
					Estado123(_lookahead);
					break;
				case 124:
					Estado124(_lookahead);
					break;
				case 125:
					Estado125(_lookahead);
					break;
				case 126:
					Estado126(_lookahead);
					break;
				case 127:
					Estado127(_lookahead);
					break;
				case 128:
					Estado128(_lookahead);
					break;
				case 129:
					Estado129(_lookahead);
					break;
				case 130:
					Estado130(_lookahead);
					break;
				case 131:
					Estado131(_lookahead);
					break;
				case 132:
					Estado132(_lookahead);
					break;
				case 133:
					Estado133(_lookahead);
					break;
				case 134:
					Estado134(_lookahead);
					break;
				case 135:
					Estado135(_lookahead);
					break;
				case 136:
					Estado136(_lookahead);
					break;
				case 137:
					Estado137(_lookahead);
					break;
				case 138:
					Estado138(_lookahead);
					break;
				case 139:
					Estado139(_lookahead);
					break;
				case 140:
					Estado140(_lookahead);
					break;
				case 141:
					Estado141(_lookahead);
					break;
				case 142:
					Estado142(_lookahead);
					break;
				case 143:
					Estado143(_lookahead);
					break;
				case 144:
					Estado144(_lookahead);
					break;
				case 145:
					Estado145(_lookahead);
					break;
				case 146:
					Estado146(_lookahead);
					break;
				case 147:
					Estado147(_lookahead);
					break;
				case 148:
					Estado148(_lookahead);
					break;
				case 149:
					Estado149(_lookahead);
					break;
				case 150:
					Estado150(_lookahead);
					break;
				case 151:
					Estado151(_lookahead);
					break;
				case 152:
					Estado152(_lookahead);
					break;
				case 153:
					Estado153(_lookahead);
					break;
				case 154:
					Estado154(_lookahead);
					break;
				case 155:
					Estado155(_lookahead);
					break;
				case 156:
					Estado156(_lookahead);
					break;
				case 157:
					Estado157(_lookahead);
					break;
				case 158:
					Estado158(_lookahead);
					break;
				case 159:
					Estado159(_lookahead);
					break;
				case 160:
					Estado160(_lookahead);
					break;
				case 161:
					Estado161(_lookahead);
					break;
				case 162:
					Estado162(_lookahead);
					break;
				case 163:
					Estado163(_lookahead);
					break;
				case 164:
					Estado164(_lookahead);
					break;
				case 165:
					Estado165(_lookahead);
					break;
				case 166:
					Estado166(_lookahead);
					break;
				case 167:
					Estado167(_lookahead);
					break;
				case 168:
					Estado168(_lookahead);
					break;
				case 169:
					Estado169(_lookahead);
					break;
				case 170:
					Estado170(_lookahead);
					break;
				case 171:
					Estado171(_lookahead);
					break;
				case 172:
					Estado172(_lookahead);
					break;
				case 173:
					Estado173(_lookahead);
					break;
				case 174:
					Estado174(_lookahead);
					break;
				case 175:
					Estado175(_lookahead);
					break;
				case 176:
					Estado176(_lookahead);
					break;
				case 177:
					Estado177(_lookahead);
					break;
				case 178:
					Estado178(_lookahead);
					break;
				case 179:
					Estado179(_lookahead);
					break;
				case 180:
					Estado180(_lookahead);
					break;
				case 181:
					Estado181(_lookahead);
					break;
				case 182:
					Estado182(_lookahead);
					break;
				case 183:
					Estado183(_lookahead);
					break;
				case 184:
					Estado184(_lookahead);
					break;
				case 185:
					Estado185(_lookahead);
					break;
				case 186:
					Estado186(_lookahead);
					break;
				case 187:
					Estado187(_lookahead);
					break;
				case 188:
					Estado188(_lookahead);
					break;
				case 189:
					Estado189(_lookahead);
					break;
				case 190:
					Estado190(_lookahead);
					break;
				case 191:
					Estado191(_lookahead);
					break;

				default:
					Err();
					break;
			}
		}
		#region Estados
		public void Estado0(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "void":
					//desplazamientoconsume void
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(4);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(5);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "class":
					//desplazamientoconsume class
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(6);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "interface":
					//desplazamientoconsume interface
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(7);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Program":
					StackDeConsumo.Push(1);
					break;

				case "Decl":
					StackDeConsumo.Push(2);
					break;

				case "Type":
					StackDeConsumo.Push(3);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado1(string _lookahead)
		{
			switch (_lookahead)
			{
				case "$":
					//StackDeConsumo.Push(acc);
					var inf = true;
					return;
					break;

				default:
					Err(); break;
			}
		}
		public void Estado2(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "void":
					//desplazamientoconsume void
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(4);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(5);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "class":
					//desplazamientoconsume class
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(6);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "interface":
					//desplazamientoconsume interface
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(7);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "$":
					//reduccion a r2
					reduccion = Reducciones[2].Split('↓')[0].Trim();
					reducido = Reducciones[2].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "Program":
					StackDeConsumo.Push(14);
					break;

				case "Decl":
					StackDeConsumo.Push(2);
					break;

				case "Type":
					StackDeConsumo.Push(3);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado3(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(15);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "[]":
					//desplazamientoconsume []
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado4(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(17);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado5(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "CnsTp":
					StackDeConsumo.Push(18);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado6(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(19);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado7(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(20);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado8(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r9
					reduccion = Reducciones[9].Split('↓')[0].Trim();
					reducido = Reducciones[9].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "[]":
					//reduccion a r9
					reduccion = Reducciones[9].Split('↓')[0].Trim();
					reducido = Reducciones[9].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado9(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "[]":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado10(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r21
					reduccion = Reducciones[21].Split('↓')[0].Trim();
					reducido = Reducciones[21].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "[]":
					//reduccion a r21
					reduccion = Reducciones[21].Split('↓')[0].Trim();
					reducido = Reducciones[21].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado11(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r22
					reduccion = Reducciones[22].Split('↓')[0].Trim();
					reducido = Reducciones[22].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "[]":
					//reduccion a r22
					reduccion = Reducciones[22].Split('↓')[0].Trim();
					reducido = Reducciones[22].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado12(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r23
					reduccion = Reducciones[23].Split('↓')[0].Trim();
					reducido = Reducciones[23].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "[]":
					//reduccion a r23
					reduccion = Reducciones[23].Split('↓')[0].Trim();
					reducido = Reducciones[23].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado13(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r24
					reduccion = Reducciones[24].Split('↓')[0].Trim();
					reducido = Reducciones[24].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "[]":
					//reduccion a r24
					reduccion = Reducciones[24].Split('↓')[0].Trim();
					reducido = Reducciones[24].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado14(string _lookahead)
		{
			switch (_lookahead)
			{
				case "$":
					//reduccion a r1
					reduccion = Reducciones[1].Split('↓')[0].Trim();
					reducido = Reducciones[1].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado15(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(21);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(22);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado16(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r11
					reduccion = Reducciones[11].Split('↓')[0].Trim();
					reducido = Reducciones[11].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "[]":
					//reduccion a r11
					reduccion = Reducciones[11].Split('↓')[0].Trim();
					reducido = Reducciones[11].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado17(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(23);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado18(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(24);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado19(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "extends":
					//desplazamientoconsume extends
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(26);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "implements":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "Heritage":
					StackDeConsumo.Push(25);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado20(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(27);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado21(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado22(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(29);
					break;

				case "Formals":
					StackDeConsumo.Push(28);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado23(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(29);
					break;

				case "Formals":
					StackDeConsumo.Push(30);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado24(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(31);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado25(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//reduccion LAMBDA a r28
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "implements":
					//desplazamientoconsume implements
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(33);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "HeritageI":
					StackDeConsumo.Push(32);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado26(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(34);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado27(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "void":
					//desplazamientoconsume void
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(38);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r38
					reduccion = Reducciones[38].Split('↓')[0].Trim();
					reducido = Reducciones[38].Split('↓')[1].Trim();
					//reduccion LAMBDA a r38
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(37);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "Proto":
					StackDeConsumo.Push(35);
					break;

				case "Prototype":
					StackDeConsumo.Push(36);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado28(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(39);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado29(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(40);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "[]":
					//desplazamientoconsume []
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado30(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(41);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado31(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado32(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(42);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado33(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(43);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado34(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "implements":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado35(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamientoconsume }
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(44);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado36(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "void":
					//desplazamientoconsume void
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(38);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r38
					reduccion = Reducciones[38].Split('↓')[0].Trim();
					reducido = Reducciones[38].Split('↓')[1].Trim();
					//reduccion LAMBDA a r38
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(37);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "Proto":
					StackDeConsumo.Push(45);
					break;

				case "Prototype":
					StackDeConsumo.Push(36);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado37(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(46);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "[]":
					//desplazamientoconsume []
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado38(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado39(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(48);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado40(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r13
					reduccion = Reducciones[13].Split('↓')[0].Trim();
					reducido = Reducciones[13].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//desplazamientoconsume ,
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(50);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado41(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(51);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado42(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "void":
					//desplazamientoconsume void
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(55);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(56);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//reduccion LAMBDA a r32
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(54);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "FieldP":
					StackDeConsumo.Push(52);
					break;

				case "Field":
					StackDeConsumo.Push(53);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado43(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r30
					reduccion = Reducciones[30].Split('↓')[0].Trim();
					reducido = Reducciones[30].Split('↓')[1].Trim();
					//reduccion LAMBDA a r30
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//desplazamientoconsume ,
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(58);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "HeritageD":
					StackDeConsumo.Push(57);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado44(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado45(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r37
					reduccion = Reducciones[37].Split('↓')[0].Trim();
					reducido = Reducciones[37].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado46(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(59);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado47(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(60);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado48(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado49(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(65);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(63);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//reduccion LAMBDA a r16
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(62);
					break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "COMBINACION":
					StackDeConsumo.Push(61);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "Stmt":
					StackDeConsumo.Push(64);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado50(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(29);
					break;

				case "Formals":
					StackDeConsumo.Push(86);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado51(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado52(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamientoconsume }
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado53(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "void":
					//desplazamientoconsume void
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(55);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(56);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//reduccion LAMBDA a r32
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(54);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "FieldP":
					StackDeConsumo.Push(88);
					break;

				case "Field":
					StackDeConsumo.Push(53);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado54(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(89);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "[]":
					//desplazamientoconsume []
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado55(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado56(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "CnsTp":
					StackDeConsumo.Push(91);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado57(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado58(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado59(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(29);
					break;

				case "Formals":
					StackDeConsumo.Push(93);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado60(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(29);
					break;

				case "Formals":
					StackDeConsumo.Push(94);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado61(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamientoconsume }
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado62(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "[]":
					//desplazamientoconsume []
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado63(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "CnsTp":
					StackDeConsumo.Push(97);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado64(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(65);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(63);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//reduccion LAMBDA a r16
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(62);
					break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "COMBINACION":
					StackDeConsumo.Push(98);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "Stmt":
					StackDeConsumo.Push(64);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado65(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(99);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "[]":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "=":
					//desplazamientoconsume =
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(100);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado66(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(101);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado67(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado68(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado69(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado70(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado71(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado72(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(114);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado73(string _lookahead)
		{
			switch (_lookahead)
			{
				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(116);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado74(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado75(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(117);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado76(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(118);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado77(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(119);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado78(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado79(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado80(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(120);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado81(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r75
					reduccion = Reducciones[75].Split('↓')[0].Trim();
					reducido = Reducciones[75].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado82(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r76
					reduccion = Reducciones[76].Split('↓')[0].Trim();
					reducido = Reducciones[76].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado83(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r77
					reduccion = Reducciones[77].Split('↓')[0].Trim();
					reducido = Reducciones[77].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado84(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r78
					reduccion = Reducciones[78].Split('↓')[0].Trim();
					reducido = Reducciones[78].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado85(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r79
					reduccion = Reducciones[79].Split('↓')[0].Trim();
					reducido = Reducciones[79].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado86(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r12
					reduccion = Reducciones[12].Split('↓')[0].Trim();
					reducido = Reducciones[12].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado87(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado88(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r31
					reduccion = Reducciones[31].Split('↓')[0].Trim();
					reducido = Reducciones[31].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado89(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(121);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(122);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado90(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(123);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado91(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(124);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado92(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r30
					reduccion = Reducciones[30].Split('↓')[0].Trim();
					reducido = Reducciones[30].Split('↓')[1].Trim();
					//reduccion LAMBDA a r30
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//desplazamientoconsume ,
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(58);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "HeritageD":
					StackDeConsumo.Push(125);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado93(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(126);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado94(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(127);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado95(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "class":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "interface":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "$":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado96(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(128);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado97(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(129);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado98(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado99(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(131);
					break;

				case "Actuals":
					StackDeConsumo.Push(130);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado100(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(132);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado101(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado102(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(133);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado103(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(134);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado104(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(135);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado105(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(136);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado106(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(137);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado107(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(138);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado108(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(139);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado109(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(140);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado110(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(141);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado111(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(142);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado112(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(143);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado113(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado114(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(144);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado115(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//Conflicto desplazamiento  a d99
					//consume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(99);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ")":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "=":
					//desplazamientoconsume =
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(100);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado116(string _lookahead)
		{
			switch (_lookahead)
			{
				case "out":
					//desplazamientoconsume out
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(145);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado117(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado118(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado119(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(146);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado120(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(147);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado121(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado122(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(29);
					break;

				case "Formals":
					StackDeConsumo.Push(148);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado123(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(29);
					break;

				case "Formals":
					StackDeConsumo.Push(149);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado124(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(150);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado125(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado126(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(151);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado127(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(152);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado128(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(65);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(63);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//reduccion LAMBDA a r16
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(62);
					break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "COMBINACION":
					StackDeConsumo.Push(153);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "Stmt":
					StackDeConsumo.Push(64);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado129(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(154);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado130(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(155);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado131(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r74
					reduccion = Reducciones[74].Split('↓')[0].Trim();
					reducido = Reducciones[74].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//desplazamientoconsume ,
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(156);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado132(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado133(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado134(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado135(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado136(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado137(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado138(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado139(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado140(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//Conflicto desplazamiento  a d157
					//consume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(157);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ")":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "=":
					//desplazamientoconsume =
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(158);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado141(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(159);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado142(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(160);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado143(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(161);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado144(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado145(string _lookahead)
		{
			switch (_lookahead)
			{
				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(162);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado146(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(163);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado147(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado148(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(164);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado149(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(165);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado150(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado151(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado152(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado153(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r15
					reduccion = Reducciones[15].Split('↓')[0].Trim();
					reducido = Reducciones[15].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado154(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(65);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "static":
					//desplazamientoconsume static
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(63);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "}":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//reduccion LAMBDA a r16
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//desplazamientoconsume int
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "double":
					//desplazamientoconsume double
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolean":
					//desplazamientoconsume boolean
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "string":
					//desplazamientoconsume string
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Type":
					StackDeConsumo.Push(62);
					break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "COMBINACION":
					StackDeConsumo.Push(166);
					break;

				case "CnsTp":
					StackDeConsumo.Push(8);
					break;

				case "Stmt":
					StackDeConsumo.Push(64);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado155(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado156(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(131);
					break;

				case "Actuals":
					StackDeConsumo.Push(167);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado157(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(131);
					break;

				case "Actuals":
					StackDeConsumo.Push(168);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado158(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(169);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado159(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "Stmt":
					StackDeConsumo.Push(170);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado160(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "Stmt":
					StackDeConsumo.Push(171);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado161(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(172);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado162(string _lookahead)
		{
			switch (_lookahead)
			{
				case "println":
					//desplazamientoconsume println
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(173);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado163(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado164(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(174);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado165(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(175);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado166(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r17
					reduccion = Reducciones[17].Split('↓')[0].Trim();
					reducido = Reducciones[17].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado167(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado168(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(176);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado169(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//Conflicto desplazamiento  a d109
					//consume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "else":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//Conflicto desplazamiento  a d102
					//consume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//Conflicto desplazamiento  a d103
					//consume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//Conflicto desplazamiento  a d104
					//consume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//Conflicto desplazamiento  a d105
					//consume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//Conflicto desplazamiento  a d106
					//consume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//Conflicto desplazamiento  a d107
					//consume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//Conflicto desplazamiento  a d108
					//consume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado170(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//Conflicto desplazamiento  a d178
					//consume else
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(178);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "ElseStmt":
					StackDeConsumo.Push(177);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado171(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado172(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(179);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado173(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(180);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado174(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado175(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "void":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado176(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ")":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ".":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "/":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "%":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ">=":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!=":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "||":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado177(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado178(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "Stmt":
					StackDeConsumo.Push(181);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado179(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(182);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado180(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(183);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado181(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado182(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(184);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado183(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//reduccion LAMBDA a r53
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//desplazamientoconsume ,
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(186);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "ExPrint":
					StackDeConsumo.Push(185);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado184(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "{":
					//desplazamientoconsume {
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(49);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "if":
					//desplazamientoconsume if
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "while":
					//desplazamientoconsume while
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "for":
					//desplazamientoconsume for
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "break":
					//desplazamientoconsume break
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "return":
					//desplazamientoconsume return
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(72);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "System":
					//desplazamientoconsume System
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "StmtBlock":
					StackDeConsumo.Push(74);
					break;

				case "Stmt":
					StackDeConsumo.Push(187);
					break;

				case "Expr":
					StackDeConsumo.Push(66);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado185(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamientoconsume )
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(188);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado186(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamientoconsume ident
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "(":
					//desplazamientoconsume (
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(75);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!":
					//desplazamientoconsume !
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(76);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "New":
					//desplazamientoconsume New
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "this":
					//desplazamientoconsume this
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "intConstant":
					//desplazamientoconsume intConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "stringConstant":
					//desplazamientoconsume stringConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "boolConstant":
					//desplazamientoconsume boolConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "doubleConstant":
					//desplazamientoconsume doubleConstant
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(84);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "null":
					//desplazamientoconsume null
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "Expr":
					StackDeConsumo.Push(189);
					break;

				case "Constant":
					StackDeConsumo.Push(78);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado187(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado188(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamientoconsume ;
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(190);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				default:
					Err(); break;
			}
		}
		public void Estado189(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//reduccion LAMBDA a r53
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ",":
					//desplazamientoconsume ,
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(186);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ".":
					//desplazamientoconsume .
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "-":
					//desplazamientoconsume -
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "/":
					//desplazamientoconsume /
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "%":
					//desplazamientoconsume %
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(104);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">":
					//desplazamientoconsume >
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case ">=":
					//desplazamientoconsume >=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "!=":
					//desplazamientoconsume !=
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "||":
					//desplazamientoconsume ||
					tokensAceptados.Add(StackDeEntrada.Pop());
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					StackDeLineasYColumnas.Pop(); break;

				case "ExPrint":
					StackDeConsumo.Push(191);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado190(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case ";":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "(":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "static":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "{":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "}":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "int":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "double":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolean":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "string":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "if":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "while":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "for":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "break":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "return":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "System":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "else":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "-":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "!":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "New":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "this":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "intConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "stringConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "boolConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "doubleConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				case "null":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}
		public void Estado191(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux; unStack = reducido.Split(' ').Length;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					IrA(StackDeConsumo.Peek(), reduccion);
					break;

				default:
					Err(); break;
			}
		}

		#endregion
	}
}
