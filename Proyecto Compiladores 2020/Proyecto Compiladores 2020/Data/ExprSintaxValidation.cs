using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Proyecto_Compiladores_2020.Data
{
	class ExprSintaxValidation
	{
		private static ExprSintaxValidation _instance = null;
		public static ExprSintaxValidation Instance
		{
			get
			{
				if (_instance == null) _instance = new ExprSintaxValidation();
				return _instance;
			}
		}
		//programar cada estado de la tabla
		// obtener la pila 
		int pasos = 0;
		static Stack<int> StackDeConsumo = new Stack<int>();
		public static List<string> tokensNoEsperados = new List<string>();
		string Simbolos = "";
		Dictionary<int, string> Reducciones = new Dictionary<int, string>();
		static Stack<string> StackDeEntrada = new Stack<string>();
		static List<string> Pasos = new List<string>();
		static List<KeyValuePair<string, string>> Entrada;
		string reduccion = "";
		string reducido = "";
		int SimbolosQueSeQuedan = 0;
		string aux = "";
		int unStack = 0;
		// calcular lookahead
		// 
		// obtener lista de tokens
		// error: leer hasta ; y seguir
		// des stackear estados


		public void Parser(List<KeyValuePair<string, string>> _Aceptados)
		{

			StackDeConsumo.Push(0);
			Entrada = _Aceptados;
			StackDeEntrada.Push("$");
			for (int i = _Aceptados.Count - 1; i >= 0; i--)
			{
				StackDeEntrada.Push(_Aceptados[i].Key);
			}
			var actual = StackDeEntrada.Peek();
			CargarDiccionario();

			//while que se analize mientras la pila de entrada .peek != $

			var CadenaDePrueba = "";
			for (int i = 0; i < StackDeEntrada.Count; i++)
			{
				CadenaDePrueba += $" {StackDeEntrada.ElementAt(i)}";
				CadenaDePrueba = CadenaDePrueba.Trim();
			}

			var resultado = Estado0(actual);
			if (resultado)
			{
				Console.BackgroundColor = ConsoleColor.White;
				Console.ForegroundColor = ConsoleColor.DarkGreen;
				Console.WriteLine("Cadena Aceptada!");
				Console.ForegroundColor = ConsoleColor.White;
				Console.BackgroundColor = ConsoleColor.Black;

			}
			else
			{
				Console.BackgroundColor = ConsoleColor.White;

				Console.ForegroundColor = ConsoleColor.DarkRed;

				Console.WriteLine("F");
				Console.ForegroundColor = ConsoleColor.White;
				Console.BackgroundColor = ConsoleColor.Black;

			}

			var xdd = 0;
		}


		public bool Err()
		{
			//sacar hasta encontrar un ; , ) } en la stack de entrada
			//consumir la de consumo hasta encontrar un ; o un { de reversa y quitar los n pasos
			var TokenDeError = StackDeEntrada.Peek();

			var lookahead = StackDeEntrada.Peek();

			while (lookahead != ";" && lookahead != "," && lookahead != ")" && lookahead != "}")
			{
				tokensNoEsperados.Add(lookahead);
				StackDeEntrada.Pop();
				lookahead = StackDeEntrada.Peek();
			}
			return IrA(StackDeConsumo.Peek(), StackDeEntrada.Peek());
		}

		void CargarDiccionario()
		{
			Reducciones.Add(0, "Start↓Program");
			Reducciones.Add(1, "Program↓Decl Program");
			Reducciones.Add(2, "Program↓Decl");
			Reducciones.Add(3, "Decl↓Type ident ;");
			Reducciones.Add(4, "Decl↓Type ident ( Formals ) StmtBlock");
			Reducciones.Add(5, "Decl↓void ident ( Formals ) StmtBlock");
			Reducciones.Add(6, "Decl↓static CnsTp ident ;");
			Reducciones.Add(7, "Decl↓class ident Heritage HeritageI {​​​​ FieldP }​​​​");
			Reducciones.Add(8, "Decl↓interface ident {​​​​ Proto }​​​​");
			Reducciones.Add(9, "Type↓CnsTp");
			Reducciones.Add(10, "Type↓ident");
			Reducciones.Add(11, "Type↓Type []");
			Reducciones.Add(12, "Formals↓Type ident , Formals");
			Reducciones.Add(13, "Formals↓Type ident");
			Reducciones.Add(14, "StmtBlock↓{​​​​ SBPV SBPC SBPS }​​​​");
			Reducciones.Add(15, "CnsTp↓int");
			Reducciones.Add(16, "CnsTp↓double");
			Reducciones.Add(17, "CnsTp↓boolean");
			Reducciones.Add(18, "CnsTp↓string");
			Reducciones.Add(19, "Heritage↓extends ident");
			Reducciones.Add(20, "Heritage↓''");
			Reducciones.Add(21, "HeritageI↓implements ident HeritageD");
			Reducciones.Add(22, "HeritageI↓''");
			Reducciones.Add(23, "HeritageD↓, ident HeritageD");
			Reducciones.Add(24, "HeritageD↓''");
			Reducciones.Add(25, "FieldP↓Field FieldP");
			Reducciones.Add(26, "FieldP↓''");
			Reducciones.Add(27, "Field↓Type ident ;");
			Reducciones.Add(28, "Field↓FRoot ident ( Formals ) StmtBlock");
			Reducciones.Add(29, "Field↓static CnsTp ident ;");
			Reducciones.Add(30, "Proto↓Prototype Proto");
			Reducciones.Add(31, "Proto↓''");
			Reducciones.Add(32, "Prototype↓FRoot ident ( Formals ) ;");
			Reducciones.Add(33, "SBPV↓Type ident ; SBPV");
			Reducciones.Add(34, "SBPV↓''");
			Reducciones.Add(35, "SBPC↓static CnsTp ident ; SBPC");
			Reducciones.Add(36, "SBPC↓''");
			Reducciones.Add(37, "SBPS↓Stmt SBPS");
			Reducciones.Add(38, "SBPS↓''");
			Reducciones.Add(39, "Stmt↓Expr ;");
			Reducciones.Add(40, "Stmt↓;");
			Reducciones.Add(41, "Stmt↓if ( Expr ) Stmt ElseStmt");
			Reducciones.Add(42, "Stmt↓while ( Expr ) Stmt");
			Reducciones.Add(43, "Stmt↓for ( Expr ; Expr ; Expr ) Stmt");
			Reducciones.Add(44, "Stmt↓break ;");
			Reducciones.Add(45, "Stmt↓return Expr ;");
			Reducciones.Add(46, "Stmt↓System . out . println ( Expr ExPrint ) ;");
			Reducciones.Add(47, "Stmt↓StmtBlock");
			Reducciones.Add(48, "ElseStmt↓else Stmt");
			Reducciones.Add(49, "ElseStmt↓''");
			Reducciones.Add(50, "ExPrint↓, Expr ExPrint");
			Reducciones.Add(51, "ExPrint↓''");
			Reducciones.Add(52, "Expr↓Expr - Expr");
			Reducciones.Add(53, "Expr↓Expr / Expr");
			Reducciones.Add(54, "Expr↓Expr % Expr");
			Reducciones.Add(55, "Expr↓- Expr");
			Reducciones.Add(56, "Expr↓Expr > Expr");
			Reducciones.Add(57, "Expr↓Expr >= Expr");
			Reducciones.Add(58, "Expr↓Expr != Expr");
			Reducciones.Add(59, "Expr↓Expr || Expr");
			Reducciones.Add(60, "Expr↓! Expr");
			Reducciones.Add(61, "Expr↓New ( ident )");
			Reducciones.Add(62, "Expr↓LValue");
			Reducciones.Add(63, "Expr↓LValue = Expr");
			Reducciones.Add(64, "Expr↓Constant");
			Reducciones.Add(65, "Expr↓this");
			Reducciones.Add(66, "Expr↓( Expr )");
			Reducciones.Add(67, "LValue↓Expr . ident");
			Reducciones.Add(68, "LValue↓ident");
			Reducciones.Add(69, "Constant↓intConstant");
			Reducciones.Add(70, "Constant↓doubleConstant");
			Reducciones.Add(71, "Constant↓boolConstant");
			Reducciones.Add(72, "Constant↓stringConstant");
			Reducciones.Add(73, "Constant↓null");
		}
		bool IrA(int numEstado, string _lookahead)
		{
			switch (numEstado)
			{
				case 0:
					//IrA Estado 0
					return Estado0(_lookahead);
				case 1:
					//IrA Estado 1
					return Estado1(_lookahead);
				case 2:
					//IrA Estado 2
					return Estado2(_lookahead);
				case 3:
					//IrA Estado 3
					return Estado3(_lookahead);
				case 4:
					//IrA Estado 4
					return Estado4(_lookahead);
				case 5:
					//IrA Estado 5
					return Estado5(_lookahead);
				case 6:
					//IrA Estado 6
					return Estado6(_lookahead);
				case 7:
					//IrA Estado 7
					return Estado7(_lookahead);
				case 8:
					//IrA Estado 8
					return Estado8(_lookahead);
				case 9:
					//IrA Estado 9
					return Estado9(_lookahead);
				case 10:
					//IrA Estado 10
					return Estado10(_lookahead);
				case 11:
					//IrA Estado 11
					return Estado11(_lookahead);
				case 12:
					//IrA Estado 12
					return Estado12(_lookahead);
				case 13:
					//IrA Estado 13
					return Estado13(_lookahead);
				case 14:
					//IrA Estado 14
					return Estado14(_lookahead);
				case 15:
					//IrA Estado 15
					return Estado15(_lookahead);
				case 16:
					//IrA Estado 16
					return Estado16(_lookahead);
				case 17:
					//IrA Estado 17
					return Estado17(_lookahead);
				case 18:
					//IrA Estado 18
					return Estado18(_lookahead);
				case 19:
					//IrA Estado 19
					return Estado19(_lookahead);
				case 20:
					//IrA Estado 20
					return Estado20(_lookahead);
				case 21:
					//IrA Estado 21
					return Estado21(_lookahead);
				case 22:
					//IrA Estado 22
					return Estado22(_lookahead);
				case 23:
					//IrA Estado 23
					return Estado23(_lookahead);
				case 24:
					//IrA Estado 24
					return Estado24(_lookahead);
				case 25:
					//IrA Estado 25
					return Estado25(_lookahead);
				case 26:
					//IrA Estado 26
					return Estado26(_lookahead);
				case 27:
					//IrA Estado 27
					return Estado27(_lookahead);
				case 28:
					//IrA Estado 28
					return Estado28(_lookahead);
				case 29:
					//IrA Estado 29
					return Estado29(_lookahead);
				case 30:
					//IrA Estado 30
					return Estado30(_lookahead);
				case 31:
					//IrA Estado 31
					return Estado31(_lookahead);
				case 32:
					//IrA Estado 32
					return Estado32(_lookahead);
				case 33:
					//IrA Estado 33
					return Estado33(_lookahead);
				case 34:
					//IrA Estado 34
					return Estado34(_lookahead);
				case 35:
					//IrA Estado 35
					return Estado35(_lookahead);
				case 36:
					//IrA Estado 36
					return Estado36(_lookahead);
				case 37:
					//IrA Estado 37
					return Estado37(_lookahead);
				case 38:
					//IrA Estado 38
					return Estado38(_lookahead);
				case 39:
					//IrA Estado 39
					return Estado39(_lookahead);
				case 40:
					//IrA Estado 40
					return Estado40(_lookahead);
				case 41:
					//IrA Estado 41
					return Estado41(_lookahead);
				case 42:
					//IrA Estado 42
					return Estado42(_lookahead);
				case 43:
					//IrA Estado 43
					return Estado43(_lookahead);
				case 44:
					//IrA Estado 44
					return Estado44(_lookahead);
				case 45:
					//IrA Estado 45
					return Estado45(_lookahead);
				case 46:
					//IrA Estado 46
					return Estado46(_lookahead);
				case 47:
					//IrA Estado 47
					return Estado47(_lookahead);
				case 48:
					//IrA Estado 48
					return Estado48(_lookahead);
				case 49:
					//IrA Estado 49
					return Estado49(_lookahead);
				case 50:
					//IrA Estado 50
					return Estado50(_lookahead);
				case 51:
					//IrA Estado 51
					return Estado51(_lookahead);
				case 52:
					//IrA Estado 52
					return Estado52(_lookahead);
				case 53:
					//IrA Estado 53
					return Estado53(_lookahead);
				case 54:
					//IrA Estado 54
					return Estado54(_lookahead);
				case 55:
					//IrA Estado 55
					return Estado55(_lookahead);
				case 56:
					//IrA Estado 56
					return Estado56(_lookahead);
				case 57:
					//IrA Estado 57
					return Estado57(_lookahead);
				case 58:
					//IrA Estado 58
					return Estado58(_lookahead);
				case 59:
					//IrA Estado 59
					return Estado59(_lookahead);
				case 60:
					//IrA Estado 60
					return Estado60(_lookahead);
				case 61:
					//IrA Estado 61
					return Estado61(_lookahead);
				case 62:
					//IrA Estado 62
					return Estado62(_lookahead);
				case 63:
					//IrA Estado 63
					return Estado63(_lookahead);
				case 64:
					//IrA Estado 64
					return Estado64(_lookahead);
				case 65:
					//IrA Estado 65
					return Estado65(_lookahead);
				case 66:
					//IrA Estado 66
					return Estado66(_lookahead);
				case 67:
					//IrA Estado 67
					return Estado67(_lookahead);
				case 68:
					//IrA Estado 68
					return Estado68(_lookahead);
				case 69:
					//IrA Estado 69
					return Estado69(_lookahead);
				case 70:
					//IrA Estado 70
					return Estado70(_lookahead);
				case 71:
					//IrA Estado 71
					return Estado71(_lookahead);
				case 72:
					//IrA Estado 72
					return Estado72(_lookahead);
				case 73:
					//IrA Estado 73
					return Estado73(_lookahead);
				case 74:
					//IrA Estado 74
					return Estado74(_lookahead);
				case 75:
					//IrA Estado 75
					return Estado75(_lookahead);
				case 76:
					//IrA Estado 76
					return Estado76(_lookahead);
				case 77:
					//IrA Estado 77
					return Estado77(_lookahead);
				case 78:
					//IrA Estado 78
					return Estado78(_lookahead);
				case 79:
					//IrA Estado 79
					return Estado79(_lookahead);
				case 80:
					//IrA Estado 80
					return Estado80(_lookahead);
				case 81:
					//IrA Estado 81
					return Estado81(_lookahead);
				case 82:
					//IrA Estado 82
					return Estado82(_lookahead);
				case 83:
					//IrA Estado 83
					return Estado83(_lookahead);
				case 84:
					//IrA Estado 84
					return Estado84(_lookahead);
				case 85:
					//IrA Estado 85
					return Estado85(_lookahead);
				case 86:
					//IrA Estado 86
					return Estado86(_lookahead);
				case 87:
					//IrA Estado 87
					return Estado87(_lookahead);
				case 88:
					//IrA Estado 88
					return Estado88(_lookahead);
				case 89:
					//IrA Estado 89
					return Estado89(_lookahead);
				case 90:
					//IrA Estado 90
					return Estado90(_lookahead);
				case 91:
					//IrA Estado 91
					return Estado91(_lookahead);
				case 92:
					//IrA Estado 92
					return Estado92(_lookahead);
				case 93:
					//IrA Estado 93
					return Estado93(_lookahead);
				case 94:
					//IrA Estado 94
					return Estado94(_lookahead);
				case 95:
					//IrA Estado 95
					return Estado95(_lookahead);
				case 96:
					//IrA Estado 96
					return Estado96(_lookahead);
				case 97:
					//IrA Estado 97
					return Estado97(_lookahead);
				case 98:
					//IrA Estado 98
					return Estado98(_lookahead);
				case 99:
					//IrA Estado 99
					return Estado99(_lookahead);
				case 100:
					//IrA Estado 100
					return Estado100(_lookahead);
				case 101:
					//IrA Estado 101
					return Estado101(_lookahead);
				case 102:
					//IrA Estado 102
					return Estado102(_lookahead);
				case 103:
					//IrA Estado 103
					return Estado103(_lookahead);
				case 104:
					//IrA Estado 104
					return Estado104(_lookahead);
				case 105:
					//IrA Estado 105
					return Estado105(_lookahead);
				case 106:
					//IrA Estado 106
					return Estado106(_lookahead);
				case 107:
					//IrA Estado 107
					return Estado107(_lookahead);
				case 108:
					//IrA Estado 108
					return Estado108(_lookahead);
				case 109:
					//IrA Estado 109
					return Estado109(_lookahead);
				case 110:
					//IrA Estado 110
					return Estado110(_lookahead);
				case 111:
					//IrA Estado 111
					return Estado111(_lookahead);
				case 112:
					//IrA Estado 112
					return Estado112(_lookahead);
				case 113:
					//IrA Estado 113
					return Estado113(_lookahead);
				case 114:
					//IrA Estado 114
					return Estado114(_lookahead);
				case 115:
					//IrA Estado 115
					return Estado115(_lookahead);
				case 116:
					//IrA Estado 116
					return Estado116(_lookahead);
				case 117:
					//IrA Estado 117
					return Estado117(_lookahead);
				case 118:
					//IrA Estado 118
					return Estado118(_lookahead);
				case 119:
					//IrA Estado 119
					return Estado119(_lookahead);
				case 120:
					//IrA Estado 120
					return Estado120(_lookahead);
				case 121:
					//IrA Estado 121
					return Estado121(_lookahead);
				case 122:
					//IrA Estado 122
					return Estado122(_lookahead);
				case 123:
					//IrA Estado 123
					return Estado123(_lookahead);
				case 124:
					//IrA Estado 124
					return Estado124(_lookahead);
				case 125:
					//IrA Estado 125
					return Estado125(_lookahead);
				case 126:
					//IrA Estado 126
					return Estado126(_lookahead);
				case 127:
					//IrA Estado 127
					return Estado127(_lookahead);
				case 128:
					//IrA Estado 128
					return Estado128(_lookahead);
				case 129:
					//IrA Estado 129
					return Estado129(_lookahead);
				case 130:
					//IrA Estado 130
					return Estado130(_lookahead);
				case 131:
					//IrA Estado 131
					return Estado131(_lookahead);
				case 132:
					//IrA Estado 132
					return Estado132(_lookahead);
				case 133:
					//IrA Estado 133
					return Estado133(_lookahead);
				case 134:
					//IrA Estado 134
					return Estado134(_lookahead);
				case 135:
					//IrA Estado 135
					return Estado135(_lookahead);
				case 136:
					//IrA Estado 136
					return Estado136(_lookahead);
				case 137:
					//IrA Estado 137
					return Estado137(_lookahead);
				case 138:
					//IrA Estado 138
					return Estado138(_lookahead);
				case 139:
					//IrA Estado 139
					return Estado139(_lookahead);
				case 140:
					//IrA Estado 140
					return Estado140(_lookahead);
				case 141:
					//IrA Estado 141
					return Estado141(_lookahead);
				case 142:
					//IrA Estado 142
					return Estado142(_lookahead);
				case 143:
					//IrA Estado 143
					return Estado143(_lookahead);
				case 144:
					//IrA Estado 144
					return Estado144(_lookahead);
				case 145:
					//IrA Estado 145
					return Estado145(_lookahead);
				case 146:
					//IrA Estado 146
					return Estado146(_lookahead);
				case 147:
					//IrA Estado 147
					return Estado147(_lookahead);
				case 148:
					//IrA Estado 148
					return Estado148(_lookahead);
				case 149:
					//IrA Estado 149
					return Estado149(_lookahead);
				case 150:
					//IrA Estado 150
					return Estado150(_lookahead);
				case 151:
					//IrA Estado 151
					return Estado151(_lookahead);
				case 152:
					//IrA Estado 152
					return Estado152(_lookahead);
				case 153:
					//IrA Estado 153
					return Estado153(_lookahead);
				case 154:
					//IrA Estado 154
					return Estado154(_lookahead);
				case 155:
					//IrA Estado 155
					return Estado155(_lookahead);
				case 156:
					//IrA Estado 156
					return Estado156(_lookahead);
				case 157:
					//IrA Estado 157
					return Estado157(_lookahead);
				case 158:
					//IrA Estado 158
					return Estado158(_lookahead);
				case 159:
					//IrA Estado 159
					return Estado159(_lookahead);
				case 160:
					//IrA Estado 160
					return Estado160(_lookahead);
				case 161:
					//IrA Estado 161
					return Estado161(_lookahead);
				case 162:
					//IrA Estado 162
					return Estado162(_lookahead);
				case 163:
					//IrA Estado 163
					return Estado163(_lookahead);
				case 164:
					//IrA Estado 164
					return Estado164(_lookahead);
				case 165:
					//IrA Estado 165
					return Estado165(_lookahead);
				case 166:
					//IrA Estado 166
					return Estado166(_lookahead);
				case 167:
					//IrA Estado 167
					return Estado167(_lookahead);
				case 168:
					//IrA Estado 168
					return Estado168(_lookahead);
				case 169:
					//IrA Estado 169
					return Estado169(_lookahead);
				case 170:
					//IrA Estado 170
					return Estado170(_lookahead);

				default:
					return Err();
			}
		}
		bool Conflictos()
		{
			return false;
		}
		#region Estados
		public bool Estado0(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "void":
					//desplazamiento a d4
					//consume void
					StackDeEntrada.Pop();
					StackDeConsumo.Push(4);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado4(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d5
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(5);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado5(StackDeEntrada.Peek());
				case "class":
					//desplazamiento a d6
					//consume class
					StackDeEntrada.Pop();
					StackDeConsumo.Push(6);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado6(StackDeEntrada.Peek());
				case "interface":
					//desplazamiento a d7
					//consume interface
					StackDeEntrada.Pop();
					StackDeConsumo.Push(7);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado7(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Program":
					//irA 1
					StackDeConsumo.Push(1);
					return Estado1(StackDeEntrada.Peek());
				case "Decl":
					//irA 2
					StackDeConsumo.Push(2);
					return Estado2(StackDeEntrada.Peek());
				case "Type":
					//irA 3
					StackDeConsumo.Push(3);
					return Estado3(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado1(string _lookahead)
		{
			switch (_lookahead)
			{
				case "$":
					//irA acc
					//StackDeConsumo.Push(acc);
					return true;
				default:
					return Err();
			}
		}
		public bool Estado2(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "void":
					//desplazamiento a d4
					//consume void
					StackDeEntrada.Pop();
					StackDeConsumo.Push(4);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado4(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d5
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(5);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado5(StackDeEntrada.Peek());
				case "class":
					//desplazamiento a d6
					//consume class
					StackDeEntrada.Pop();
					StackDeConsumo.Push(6);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado6(StackDeEntrada.Peek());
				case "interface":
					//desplazamiento a d7
					//consume interface
					StackDeEntrada.Pop();
					StackDeConsumo.Push(7);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado7(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "$":
					//reduccion a r2
					reduccion = Reducciones[2].Split('↓')[0].Trim();
					reducido = Reducciones[2].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Program":
					//irA 14
					StackDeConsumo.Push(14);
					return Estado14(StackDeEntrada.Peek());
				case "Decl":
					//irA 2
					StackDeConsumo.Push(2);
					return Estado2(StackDeEntrada.Peek());
				case "Type":
					//irA 3
					StackDeConsumo.Push(3);
					return Estado3(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado3(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d15
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(15);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado15(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado4(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d17
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(17);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado17(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado5(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 18
					StackDeConsumo.Push(18);
					return Estado18(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado6(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d19
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(19);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado19(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado7(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d20
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(20);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado20(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado8(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r9
					reduccion = Reducciones[9].Split('↓')[0].Trim();
					reducido = Reducciones[9].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r9
					reduccion = Reducciones[9].Split('↓')[0].Trim();
					reducido = Reducciones[9].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado9(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado10(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r15
					reduccion = Reducciones[15].Split('↓')[0].Trim();
					reducido = Reducciones[15].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r15
					reduccion = Reducciones[15].Split('↓')[0].Trim();
					reducido = Reducciones[15].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado11(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado12(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r17
					reduccion = Reducciones[17].Split('↓')[0].Trim();
					reducido = Reducciones[17].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r17
					reduccion = Reducciones[17].Split('↓')[0].Trim();
					reducido = Reducciones[17].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado13(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r18
					reduccion = Reducciones[18].Split('↓')[0].Trim();
					reducido = Reducciones[18].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r18
					reduccion = Reducciones[18].Split('↓')[0].Trim();
					reducido = Reducciones[18].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado14(string _lookahead)
		{
			switch (_lookahead)
			{
				case "$":
					//reduccion a r1
					reduccion = Reducciones[1].Split('↓')[0].Trim();
					reducido = Reducciones[1].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado15(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d21
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(21);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado21(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d22
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(22);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado22(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado16(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r11
					reduccion = Reducciones[11].Split('↓')[0].Trim();
					reducido = Reducciones[11].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r11
					reduccion = Reducciones[11].Split('↓')[0].Trim();
					reducido = Reducciones[11].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado17(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d23
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(23);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado23(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado18(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d24
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(24);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado24(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado19(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "extends":
					//desplazamiento a d26
					//consume extends
					StackDeEntrada.Pop();
					StackDeConsumo.Push(26);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado26(StackDeEntrada.Peek());
				case "implements":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Heritage":
					//irA 25
					StackDeConsumo.Push(25);
					return Estado25(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado20(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d27
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(27);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado27(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado21(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado22(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 28
					StackDeConsumo.Push(28);
					return Estado28(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado23(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 30
					StackDeConsumo.Push(30);
					return Estado30(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado24(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d31
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(31);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado31(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado25(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r22
					reduccion = Reducciones[22].Split('↓')[0].Trim();
					reducido = Reducciones[22].Split('↓')[1].Trim();
					//reduccion LAMBDA a r22
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "implements":
					//desplazamiento a d33
					//consume implements
					StackDeEntrada.Pop();
					StackDeConsumo.Push(33);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado33(StackDeEntrada.Peek());
				case "HeritageI":
					//irA 32
					StackDeConsumo.Push(32);
					return Estado32(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado26(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d34
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(34);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado34(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado27(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "}":
					//reduccion a r31
					reduccion = Reducciones[31].Split('↓')[0].Trim();
					reducido = Reducciones[31].Split('↓')[1].Trim();
					//reduccion LAMBDA a r31
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 37
					StackDeConsumo.Push(37);
					return Estado37(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "Proto":
					//irA 35
					StackDeConsumo.Push(35);
					return Estado35(StackDeEntrada.Peek());
				case "Prototype":
					//irA 36
					StackDeConsumo.Push(36);
					return Estado36(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado28(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d38
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(38);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado38(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado29(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d39
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(39);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado39(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado30(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d40
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(40);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado40(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado31(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado32(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d41
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(41);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado41(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado33(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d42
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(42);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado42(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado34(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "implements":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado35(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamiento a d43
					//consume }
					StackDeEntrada.Pop();
					StackDeConsumo.Push(43);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado43(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado36(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "}":
					//reduccion a r31
					reduccion = Reducciones[31].Split('↓')[0].Trim();
					reducido = Reducciones[31].Split('↓')[1].Trim();
					//reduccion LAMBDA a r31
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 37
					StackDeConsumo.Push(37);
					return Estado37(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "Proto":
					//irA 44
					StackDeConsumo.Push(44);
					return Estado44(StackDeEntrada.Peek());
				case "Prototype":
					//irA 36
					StackDeConsumo.Push(36);
					return Estado36(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado37(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d45
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(45);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado45(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado38(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 46
					StackDeConsumo.Push(46);
					return Estado46(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado39(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r13
					reduccion = Reducciones[13].Split('↓')[0].Trim();
					reducido = Reducciones[13].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d48
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(48);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado48(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado40(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 49
					StackDeConsumo.Push(49);
					return Estado49(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado41(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d53
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(53);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado53(StackDeEntrada.Peek());
				case "}":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 52
					StackDeConsumo.Push(52);
					return Estado52(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "FieldP":
					//irA 50
					StackDeConsumo.Push(50);
					return Estado50(StackDeEntrada.Peek());
				case "Field":
					//irA 51
					StackDeConsumo.Push(51);
					return Estado51(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado42(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r24
					reduccion = Reducciones[24].Split('↓')[0].Trim();
					reducido = Reducciones[24].Split('↓')[1].Trim();
					//reduccion LAMBDA a r24
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d55
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(55);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado55(StackDeEntrada.Peek());
				case "HeritageD":
					//irA 54
					StackDeConsumo.Push(54);
					return Estado54(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado43(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado44(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r30
					reduccion = Reducciones[30].Split('↓')[0].Trim();
					reducido = Reducciones[30].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado45(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d56
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(56);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado56(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado46(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado47(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					// CONFLICTO a d9 / r34
					//dConflicto desplazamiento  a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case ";":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					// CONFLICTO a d10 / r34
					//dConflicto desplazamiento  a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					// CONFLICTO a d11 / r34
					//dConflicto desplazamiento  a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					// CONFLICTO a d12 / r34
					//dConflicto desplazamiento  a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					// CONFLICTO a d13 / r34
					//dConflicto desplazamiento  a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "if":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Type":
					//irA 58
					StackDeConsumo.Push(58);
					return Estado58(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "SBPV":
					//irA 57
					StackDeConsumo.Push(57);
					return Estado57(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado48(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 59
					StackDeConsumo.Push(59);
					return Estado59(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado49(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado50(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamiento a d60
					//consume }
					StackDeEntrada.Pop();
					StackDeConsumo.Push(60);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado60(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado51(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d53
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(53);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado53(StackDeEntrada.Peek());
				case "}":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 52
					StackDeConsumo.Push(52);
					return Estado52(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "FieldP":
					//irA 61
					StackDeConsumo.Push(61);
					return Estado61(StackDeEntrada.Peek());
				case "Field":
					//irA 51
					StackDeConsumo.Push(51);
					return Estado51(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado52(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d62
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(62);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado62(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado53(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 63
					StackDeConsumo.Push(63);
					return Estado63(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado54(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r21
					reduccion = Reducciones[21].Split('↓')[0].Trim();
					reducido = Reducciones[21].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado55(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d64
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(64);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado64(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado56(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 65
					StackDeConsumo.Push(65);
					return Estado65(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado57(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					// CONFLICTO a d67 / r36
					//dConflicto desplazamiento  a d67
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado67(StackDeEntrada.Peek());
				case "class":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "SBPC":
					//irA 66
					StackDeConsumo.Push(66);
					return Estado66(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado58(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d68
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado68(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado59(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r12
					reduccion = Reducciones[12].Split('↓')[0].Trim();
					reducido = Reducciones[12].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado60(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado61(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado62(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d69
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado69(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d70
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado70(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado63(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d71
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado71(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado64(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r24
					reduccion = Reducciones[24].Split('↓')[0].Trim();
					reducido = Reducciones[24].Split('↓')[1].Trim();
					//reduccion LAMBDA a r24
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d55
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(55);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado55(StackDeEntrada.Peek());
				case "HeritageD":
					//irA 72
					StackDeConsumo.Push(72);
					return Estado72(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado65(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d73
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado73(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado66(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "}":
					//reduccion a r38
					reduccion = Reducciones[38].Split('↓')[0].Trim();
					reducido = Reducciones[38].Split('↓')[1].Trim();
					//reduccion LAMBDA a r38
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "SBPS":
					//irA 74
					StackDeConsumo.Push(74);
					return Estado74(StackDeEntrada.Peek());
				case "Stmt":
					//irA 75
					StackDeConsumo.Push(75);
					return Estado75(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado67(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 98
					StackDeConsumo.Push(98);
					return Estado98(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado68(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d99
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(99);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado99(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado69(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado70(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 100
					StackDeConsumo.Push(100);
					return Estado100(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado71(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d101
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(101);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado101(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado72(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r23
					reduccion = Reducciones[23].Split('↓')[0].Trim();
					reducido = Reducciones[23].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado73(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d102
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado102(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado74(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamiento a d103
					//consume }
					StackDeEntrada.Pop();
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado103(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado75(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "}":
					//reduccion a r38
					reduccion = Reducciones[38].Split('↓')[0].Trim();
					reducido = Reducciones[38].Split('↓')[1].Trim();
					//reduccion LAMBDA a r38
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "SBPS":
					//irA 104
					StackDeConsumo.Push(104);
					return Estado104(StackDeEntrada.Peek());
				case "Stmt":
					//irA 75
					StackDeConsumo.Push(75);
					return Estado75(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado76(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d105
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado105(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado77(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado78(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d114
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(114);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado114(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado79(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d115
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado115(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado80(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d116
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(116);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado116(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado81(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d117
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(117);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado117(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado82(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 118
					StackDeConsumo.Push(118);
					return Estado118(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado83(string _lookahead)
		{
			switch (_lookahead)
			{
				case ".":
					//desplazamiento a d119
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(119);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado119(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado84(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado85(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 120
					StackDeConsumo.Push(120);
					return Estado120(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado86(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 121
					StackDeConsumo.Push(121);
					return Estado121(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado87(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d122
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(122);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado122(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado88(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "=":
					//desplazamiento a d123
					//consume =
					StackDeEntrada.Pop();
					StackDeConsumo.Push(123);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado123(StackDeEntrada.Peek());
				case "this":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado89(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado90(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado91(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 124
					StackDeConsumo.Push(124);
					return Estado124(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado92(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "=":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado93(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado94(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado95(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado96(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado97(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado98(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d125
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(125);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado125(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado99(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					// CONFLICTO a d9 / r34
					//dConflicto desplazamiento  a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case ";":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					// CONFLICTO a d10 / r34
					//dConflicto desplazamiento  a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					// CONFLICTO a d11 / r34
					//dConflicto desplazamiento  a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					// CONFLICTO a d12 / r34
					//dConflicto desplazamiento  a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					// CONFLICTO a d13 / r34
					//dConflicto desplazamiento  a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "if":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Type":
					//irA 58
					StackDeConsumo.Push(58);
					return Estado58(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "SBPV":
					//irA 126
					StackDeConsumo.Push(126);
					return Estado126(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado100(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d127
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(127);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado127(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado101(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado102(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado103(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado104(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r37
					reduccion = Reducciones[37].Split('↓')[0].Trim();
					reducido = Reducciones[37].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado105(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado106(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 128
					StackDeConsumo.Push(128);
					return Estado128(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado107(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 129
					StackDeConsumo.Push(129);
					return Estado129(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado108(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 130
					StackDeConsumo.Push(130);
					return Estado130(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado109(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 131
					StackDeConsumo.Push(131);
					return Estado131(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado110(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 132
					StackDeConsumo.Push(132);
					return Estado132(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado111(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 133
					StackDeConsumo.Push(133);
					return Estado133(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado112(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 134
					StackDeConsumo.Push(134);
					return Estado134(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado113(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d135
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(135);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado135(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado114(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 136
					StackDeConsumo.Push(136);
					return Estado136(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado115(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 137
					StackDeConsumo.Push(137);
					return Estado137(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado116(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 138
					StackDeConsumo.Push(138);
					return Estado138(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado117(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado118(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d139
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(139);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado139(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado119(string _lookahead)
		{
			switch (_lookahead)
			{
				case "out":
					//desplazamiento a d140
					//consume out
					StackDeEntrada.Pop();
					StackDeConsumo.Push(140);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado140(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado120(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r55
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r55
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r55
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r55
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r55
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r55
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r55
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r55
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado121(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r60
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r60
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r60
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r60
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r60
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r60
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r60
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r60
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado122(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d141
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(141);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado141(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado123(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 142
					StackDeConsumo.Push(142);
					return Estado142(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado124(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d143
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(143);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado143(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado125(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d144
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(144);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado144(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado126(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado127(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 145
					StackDeConsumo.Push(145);
					return Estado145(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado128(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r52
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r52
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r52
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r52
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r52
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r52
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r52
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r52
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado129(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r53
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r53
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r53
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r53
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r53
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r53
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r53
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r53
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado130(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r54
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r54
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r54
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r54
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r54
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r54
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r54
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r54
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado131(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r56
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r56
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r56
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r56
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r56
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r56
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r56
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r56
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado132(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r57
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r57
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r57
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r57
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r57
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r57
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r57
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r57
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado133(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r58
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r58
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r58
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r58
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r58
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r58
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r58
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r58
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado134(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r59
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r59
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r59
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r59
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r59
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r59
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r59
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r59
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado135(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado136(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d146
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(146);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado146(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado137(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d147
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(147);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado147(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado138(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d148
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(148);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado148(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado139(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado140(string _lookahead)
		{
			switch (_lookahead)
			{
				case ".":
					//desplazamiento a d149
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(149);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado149(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado141(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d150
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(150);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado150(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado142(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r63
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r63
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r63
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r63
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r63
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r63
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r63
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r63
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado143(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado144(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					// CONFLICTO a d67 / r36
					//dConflicto desplazamiento  a d67
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado67(StackDeEntrada.Peek());
				case "class":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "SBPC":
					//irA 151
					StackDeConsumo.Push(151);
					return Estado151(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado145(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado146(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 152
					StackDeConsumo.Push(152);
					return Estado152(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado147(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 153
					StackDeConsumo.Push(153);
					return Estado153(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado148(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 154
					StackDeConsumo.Push(154);
					return Estado154(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado149(string _lookahead)
		{
			switch (_lookahead)
			{
				case "println":
					//desplazamiento a d155
					//consume println
					StackDeEntrada.Pop();
					StackDeConsumo.Push(155);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado155(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado150(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado151(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado152(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					// CONFLICTO a d157 / r49
					//dConflicto desplazamiento  a d157
					//consume else
					StackDeEntrada.Pop();
					StackDeConsumo.Push(157);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado157(StackDeEntrada.Peek());
				case "-":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "ElseStmt":
					//irA 156
					StackDeConsumo.Push(156);
					return Estado156(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado153(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado154(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d158
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(158);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado158(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado155(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d159
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(159);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado159(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado156(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado157(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 160
					StackDeConsumo.Push(160);
					return Estado160(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado158(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 161
					StackDeConsumo.Push(161);
					return Estado161(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado159(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 162
					StackDeConsumo.Push(162);
					return Estado162(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado160(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado161(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d163
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(163);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado163(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado162(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d165
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(165);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado165(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "ExPrint":
					//irA 164
					StackDeConsumo.Push(164);
					return Estado164(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado163(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 166
					StackDeConsumo.Push(166);
					return Estado166(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado164(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d167
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(167);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado167(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado165(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 168
					StackDeConsumo.Push(168);
					return Estado168(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado166(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado167(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d169
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(169);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado169(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado168(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d165
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(165);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado165(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "ExPrint":
					//irA 170
					StackDeConsumo.Push(170);
					return Estado170(StackDeEntrada.Peek());
				default:
					return Err();
			}
		}
		public bool Estado169(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}
		public bool Estado170(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					return Err();
			}
		}

		#endregion

	}
}
