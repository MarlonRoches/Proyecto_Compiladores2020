using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace Proyecto_Compiladores_2020.Data
{
	class ExprSintaxValidation
	{
		private static ExprSintaxValidation _instance = null;
		public static ExprSintaxValidation Instance
		{
			get
			{
				if (_instance == null) _instance = new ExprSintaxValidation();
				return _instance;
			}
		}
		//programar cada estado de la tabla
		// obtener la pila 
		int pasos = 0;
		static Stack<int> StackDeConsumo = new Stack<int>();
		public static List<string> tokensNoEsperados = new List<string>();
		string Simbolos = "";
		Dictionary<int, string> Reducciones = new Dictionary<int, string>();
		static Stack<string> StackDeEntrada = new Stack<string>();
		static List<string> Pasos = new List<string>();
		static List<KeyValuePair<string, string>> Entrada;
		string reduccion = "";
		string reducido = "";
		int SimbolosQueSeQuedan = 0;
		string aux = "";
		int unStack = 0;
		Dictionary<int, Dictionary<string, string>> EstadoDeError = new Dictionary<int, Dictionary<string, string>>();
		// calcular lookahead
		// 
		// obtener lista de tokens
		// error: leer hasta ; y seguir
		// des stackear estados


		public void Parser(List<KeyValuePair<string, string>> _Aceptados)
		{
			StackDeConsumo.Push(0);
			Entrada = _Aceptados;
			StackDeEntrada.Push("$");
			for (int i = _Aceptados.Count - 1; i >= 0; i--)
			{
				StackDeEntrada.Push(_Aceptados[i].Key);
			}
			var actual = StackDeEntrada.Peek();
			CargarDiccionario();
			//while que se analize mientras la pila de entrada .peek != $
			CargarEstadosDeError();
			var CadenaDePrueba = "";
			for (int i = 0; i < StackDeEntrada.Count; i++)
			{
				CadenaDePrueba += $" {StackDeEntrada.ElementAt(i)}";
				CadenaDePrueba = CadenaDePrueba.Trim();
			}
			var resultado = true;
			while (StackDeEntrada.Count!=0)
			{
				if (StackDeEntrada.Count ==1 && StackDeConsumo.Count == 1)
				{//todo esta buenardo
					resultado = true;
					break;

				}
				else
				{
					var ResultadoParcial = IrA(StackDeConsumo.Peek(), StackDeEntrada.Peek());
					resultado = resultado && ResultadoParcial;

				}
			}
			if (resultado)
			{
				Console.BackgroundColor = ConsoleColor.White;
				Console.ForegroundColor = ConsoleColor.DarkGreen;
				Console.WriteLine("Cadena Aceptada!");
				Console.ForegroundColor = ConsoleColor.White;
				Console.BackgroundColor = ConsoleColor.Black;

			}
			else
			{
				Console.BackgroundColor = ConsoleColor.White;

				Console.ForegroundColor = ConsoleColor.DarkRed;

				Console.WriteLine("F");
				Console.ForegroundColor = ConsoleColor.White;
				Console.BackgroundColor = ConsoleColor.Black;

			}

			var xdd = 0;
		}

		void CargarEstadosDeError()
		{
			EstadoDeError.Add(0, new Dictionary<string, string>());
			EstadoDeError[0].Add("ident", "9");
			EstadoDeError[0].Add("void", "4");
			EstadoDeError[0].Add("static", "5");
			EstadoDeError[0].Add("class", "6");
			EstadoDeError[0].Add("interface", "7");
			EstadoDeError[0].Add("int", "10");
			EstadoDeError[0].Add("double", "11");
			EstadoDeError[0].Add("boolean", "12");
			EstadoDeError[0].Add("string", "13");
			EstadoDeError.Add(1, new Dictionary<string, string>());
			EstadoDeError.Add(2, new Dictionary<string, string>());
			EstadoDeError[2].Add("ident", "9");
			EstadoDeError[2].Add("void", "4");
			EstadoDeError[2].Add("static", "5");
			EstadoDeError[2].Add("class", "6");
			EstadoDeError[2].Add("interface", "7");
			EstadoDeError[2].Add("int", "10");
			EstadoDeError[2].Add("double", "11");
			EstadoDeError[2].Add("boolean", "12");
			EstadoDeError[2].Add("string", "13");
			EstadoDeError[2].Add("$", "2");
			EstadoDeError.Add(3, new Dictionary<string, string>());
			EstadoDeError[3].Add("ident", "15");
			EstadoDeError[3].Add("[]", "16");
			EstadoDeError.Add(4, new Dictionary<string, string>());
			EstadoDeError[4].Add("ident", "17");
			EstadoDeError.Add(5, new Dictionary<string, string>());
			EstadoDeError[5].Add("int", "10");
			EstadoDeError[5].Add("double", "11");
			EstadoDeError[5].Add("boolean", "12");
			EstadoDeError[5].Add("string", "13");
			EstadoDeError.Add(6, new Dictionary<string, string>());
			EstadoDeError[6].Add("ident", "19");
			EstadoDeError.Add(7, new Dictionary<string, string>());
			EstadoDeError[7].Add("ident", "20");
			EstadoDeError.Add(8, new Dictionary<string, string>());
			EstadoDeError[8].Add("ident", "9");
			EstadoDeError[8].Add("[]", "9");
			EstadoDeError.Add(9, new Dictionary<string, string>());
			EstadoDeError[9].Add("ident", "10");
			EstadoDeError[9].Add("[]", "10");
			EstadoDeError.Add(10, new Dictionary<string, string>());
			EstadoDeError[10].Add("ident", "15");
			EstadoDeError[10].Add("[]", "15");
			EstadoDeError.Add(11, new Dictionary<string, string>());
			EstadoDeError[11].Add("ident", "16");
			EstadoDeError[11].Add("[]", "16");
			EstadoDeError.Add(12, new Dictionary<string, string>());
			EstadoDeError[12].Add("ident", "17");
			EstadoDeError[12].Add("[]", "17");
			EstadoDeError.Add(13, new Dictionary<string, string>());
			EstadoDeError[13].Add("ident", "18");
			EstadoDeError[13].Add("[]", "18");
			EstadoDeError.Add(14, new Dictionary<string, string>());
			EstadoDeError[14].Add("$", "1");
			EstadoDeError.Add(15, new Dictionary<string, string>());
			EstadoDeError[15].Add(";", "21");
			EstadoDeError[15].Add("(", "22");
			EstadoDeError.Add(16, new Dictionary<string, string>());
			EstadoDeError[16].Add("ident", "11");
			EstadoDeError[16].Add("[]", "11");
			EstadoDeError.Add(17, new Dictionary<string, string>());
			EstadoDeError[17].Add("(", "23");
			EstadoDeError.Add(18, new Dictionary<string, string>());
			EstadoDeError[18].Add("ident", "24");
			EstadoDeError.Add(19, new Dictionary<string, string>());
			EstadoDeError[19].Add("ident", "20");
			EstadoDeError[19].Add("void", "20");
			EstadoDeError[19].Add("static", "20");
			EstadoDeError[19].Add("class", "20");
			EstadoDeError[19].Add("{", "20");
			EstadoDeError[19].Add("interface", "20");
			EstadoDeError[19].Add("int", "20");
			EstadoDeError[19].Add("double", "20");
			EstadoDeError[19].Add("boolean", "20");
			EstadoDeError[19].Add("string", "20");
			EstadoDeError[19].Add("extends", "26");
			EstadoDeError[19].Add("implements", "20");
			EstadoDeError[19].Add("$", "20");
			EstadoDeError.Add(20, new Dictionary<string, string>());
			EstadoDeError[20].Add("{", "27");
			EstadoDeError.Add(21, new Dictionary<string, string>());
			EstadoDeError[21].Add("ident", "3");
			EstadoDeError[21].Add("void", "3");
			EstadoDeError[21].Add("static", "3");
			EstadoDeError[21].Add("class", "3");
			EstadoDeError[21].Add("interface", "3");
			EstadoDeError[21].Add("int", "3");
			EstadoDeError[21].Add("double", "3");
			EstadoDeError[21].Add("boolean", "3");
			EstadoDeError[21].Add("string", "3");
			EstadoDeError[21].Add("$", "3");
			EstadoDeError.Add(22, new Dictionary<string, string>());
			EstadoDeError[22].Add("ident", "9");
			EstadoDeError[22].Add("int", "10");
			EstadoDeError[22].Add("double", "11");
			EstadoDeError[22].Add("boolean", "12");
			EstadoDeError[22].Add("string", "13");
			EstadoDeError.Add(23, new Dictionary<string, string>());
			EstadoDeError[23].Add("ident", "9");
			EstadoDeError[23].Add("int", "10");
			EstadoDeError[23].Add("double", "11");
			EstadoDeError[23].Add("boolean", "12");
			EstadoDeError[23].Add("string", "13");
			EstadoDeError.Add(24, new Dictionary<string, string>());
			EstadoDeError[24].Add(";", "31");
			EstadoDeError.Add(25, new Dictionary<string, string>());
			EstadoDeError[25].Add("{", "22");
			EstadoDeError[25].Add("implements", "33");
			EstadoDeError.Add(26, new Dictionary<string, string>());
			EstadoDeError[26].Add("ident", "34");
			EstadoDeError.Add(27, new Dictionary<string, string>());
			EstadoDeError[27].Add("ident", "9");
			EstadoDeError[27].Add("}", "31");
			EstadoDeError[27].Add("int", "10");
			EstadoDeError[27].Add("double", "11");
			EstadoDeError[27].Add("boolean", "12");
			EstadoDeError[27].Add("string", "13");
			EstadoDeError.Add(28, new Dictionary<string, string>());
			EstadoDeError[28].Add(")", "38");
			EstadoDeError.Add(29, new Dictionary<string, string>());
			EstadoDeError[29].Add("ident", "39");
			EstadoDeError[29].Add("[]", "16");
			EstadoDeError.Add(30, new Dictionary<string, string>());
			EstadoDeError[30].Add(")", "40");
			EstadoDeError.Add(31, new Dictionary<string, string>());
			EstadoDeError[31].Add("ident", "6");
			EstadoDeError[31].Add("void", "6");
			EstadoDeError[31].Add("static", "6");
			EstadoDeError[31].Add("class", "6");
			EstadoDeError[31].Add("interface", "6");
			EstadoDeError[31].Add("int", "6");
			EstadoDeError[31].Add("double", "6");
			EstadoDeError[31].Add("boolean", "6");
			EstadoDeError[31].Add("string", "6");
			EstadoDeError[31].Add("$", "6");
			EstadoDeError.Add(32, new Dictionary<string, string>());
			EstadoDeError[32].Add("{", "41");
			EstadoDeError.Add(33, new Dictionary<string, string>());
			EstadoDeError[33].Add("ident", "42");
			EstadoDeError.Add(34, new Dictionary<string, string>());
			EstadoDeError[34].Add("ident", "19");
			EstadoDeError[34].Add("void", "19");
			EstadoDeError[34].Add("static", "19");
			EstadoDeError[34].Add("class", "19");
			EstadoDeError[34].Add("{", "19");
			EstadoDeError[34].Add("interface", "19");
			EstadoDeError[34].Add("int", "19");
			EstadoDeError[34].Add("double", "19");
			EstadoDeError[34].Add("boolean", "19");
			EstadoDeError[34].Add("string", "19");
			EstadoDeError[34].Add("implements", "19");
			EstadoDeError[34].Add("$", "19");
			EstadoDeError.Add(35, new Dictionary<string, string>());
			EstadoDeError[35].Add("}", "43");
			EstadoDeError.Add(36, new Dictionary<string, string>());
			EstadoDeError[36].Add("ident", "9");
			EstadoDeError[36].Add("}", "31");
			EstadoDeError[36].Add("int", "10");
			EstadoDeError[36].Add("double", "11");
			EstadoDeError[36].Add("boolean", "12");
			EstadoDeError[36].Add("string", "13");
			EstadoDeError.Add(37, new Dictionary<string, string>());
			EstadoDeError[37].Add("ident", "45");
			EstadoDeError[37].Add("[]", "16");
			EstadoDeError.Add(38, new Dictionary<string, string>());
			EstadoDeError[38].Add("{", "47");
			EstadoDeError.Add(39, new Dictionary<string, string>());
			EstadoDeError[39].Add(")", "13");
			EstadoDeError[39].Add(",", "48");
			EstadoDeError.Add(40, new Dictionary<string, string>());
			EstadoDeError[40].Add("{", "47");
			EstadoDeError.Add(41, new Dictionary<string, string>());
			EstadoDeError[41].Add("ident", "9");
			EstadoDeError[41].Add("static", "53");
			EstadoDeError[41].Add("}", "26");
			EstadoDeError[41].Add("int", "10");
			EstadoDeError[41].Add("double", "11");
			EstadoDeError[41].Add("boolean", "12");
			EstadoDeError[41].Add("string", "13");
			EstadoDeError.Add(42, new Dictionary<string, string>());
			EstadoDeError[42].Add("{", "24");
			EstadoDeError[42].Add(",", "55");
			EstadoDeError.Add(43, new Dictionary<string, string>());
			EstadoDeError[43].Add("ident", "8");
			EstadoDeError[43].Add("void", "8");
			EstadoDeError[43].Add("static", "8");
			EstadoDeError[43].Add("class", "8");
			EstadoDeError[43].Add("interface", "8");
			EstadoDeError[43].Add("int", "8");
			EstadoDeError[43].Add("double", "8");
			EstadoDeError[43].Add("boolean", "8");
			EstadoDeError[43].Add("string", "8");
			EstadoDeError[43].Add("$", "8");
			EstadoDeError.Add(44, new Dictionary<string, string>());
			EstadoDeError[44].Add("}", "30");
			EstadoDeError.Add(45, new Dictionary<string, string>());
			EstadoDeError[45].Add("(", "56");
			EstadoDeError.Add(46, new Dictionary<string, string>());
			EstadoDeError[46].Add("ident", "4");
			EstadoDeError[46].Add("void", "4");
			EstadoDeError[46].Add("static", "4");
			EstadoDeError[46].Add("class", "4");
			EstadoDeError[46].Add("interface", "4");
			EstadoDeError[46].Add("int", "4");
			EstadoDeError[46].Add("double", "4");
			EstadoDeError[46].Add("boolean", "4");
			EstadoDeError[46].Add("string", "4");
			EstadoDeError[46].Add("$", "4");
			EstadoDeError.Add(47, new Dictionary<string, string>());
			EstadoDeError[47].Add("ident", "9");
			EstadoDeError[47].Add(";", "34");
			EstadoDeError[47].Add("(", "34");
			EstadoDeError[47].Add("void", "34");
			EstadoDeError[47].Add("static", "34");
			EstadoDeError[47].Add("class", "34");
			EstadoDeError[47].Add("{", "34");
			EstadoDeError[47].Add("}", "34");
			EstadoDeError[47].Add("interface", "34");
			EstadoDeError[47].Add("int", "10");
			EstadoDeError[47].Add("double", "11");
			EstadoDeError[47].Add("boolean", "12");
			EstadoDeError[47].Add("string", "13");
			EstadoDeError[47].Add("if", "34");
			EstadoDeError[47].Add("while", "34");
			EstadoDeError[47].Add("for", "34");
			EstadoDeError[47].Add("break", "34");
			EstadoDeError[47].Add("return", "34");
			EstadoDeError[47].Add("System", "34");
			EstadoDeError[47].Add("else", "34");
			EstadoDeError[47].Add("-", "34");
			EstadoDeError[47].Add("!", "34");
			EstadoDeError[47].Add("New", "34");
			EstadoDeError[47].Add("this", "34");
			EstadoDeError[47].Add("intConstant", "34");
			EstadoDeError[47].Add("stringConstant", "34");
			EstadoDeError[47].Add("boolConstant", "34");
			EstadoDeError[47].Add("doubleConstant", "34");
			EstadoDeError[47].Add("null", "34");
			EstadoDeError[47].Add("$", "34");
			EstadoDeError.Add(48, new Dictionary<string, string>());
			EstadoDeError[48].Add("ident", "9");
			EstadoDeError[48].Add("int", "10");
			EstadoDeError[48].Add("double", "11");
			EstadoDeError[48].Add("boolean", "12");
			EstadoDeError[48].Add("string", "13");
			EstadoDeError.Add(49, new Dictionary<string, string>());
			EstadoDeError[49].Add("ident", "5");
			EstadoDeError[49].Add("void", "5");
			EstadoDeError[49].Add("static", "5");
			EstadoDeError[49].Add("class", "5");
			EstadoDeError[49].Add("interface", "5");
			EstadoDeError[49].Add("int", "5");
			EstadoDeError[49].Add("double", "5");
			EstadoDeError[49].Add("boolean", "5");
			EstadoDeError[49].Add("string", "5");
			EstadoDeError[49].Add("$", "5");
			EstadoDeError.Add(50, new Dictionary<string, string>());
			EstadoDeError[50].Add("}", "60");
			EstadoDeError.Add(51, new Dictionary<string, string>());
			EstadoDeError[51].Add("ident", "9");
			EstadoDeError[51].Add("static", "53");
			EstadoDeError[51].Add("}", "26");
			EstadoDeError[51].Add("int", "10");
			EstadoDeError[51].Add("double", "11");
			EstadoDeError[51].Add("boolean", "12");
			EstadoDeError[51].Add("string", "13");
			EstadoDeError.Add(52, new Dictionary<string, string>());
			EstadoDeError[52].Add("ident", "62");
			EstadoDeError[52].Add("[]", "16");
			EstadoDeError.Add(53, new Dictionary<string, string>());
			EstadoDeError[53].Add("int", "10");
			EstadoDeError[53].Add("double", "11");
			EstadoDeError[53].Add("boolean", "12");
			EstadoDeError[53].Add("string", "13");
			EstadoDeError.Add(54, new Dictionary<string, string>());
			EstadoDeError[54].Add("{", "21");
			EstadoDeError.Add(55, new Dictionary<string, string>());
			EstadoDeError[55].Add("ident", "64");
			EstadoDeError.Add(56, new Dictionary<string, string>());
			EstadoDeError[56].Add("ident", "9");
			EstadoDeError[56].Add("int", "10");
			EstadoDeError[56].Add("double", "11");
			EstadoDeError[56].Add("boolean", "12");
			EstadoDeError[56].Add("string", "13");
			EstadoDeError.Add(57, new Dictionary<string, string>());
			EstadoDeError[57].Add("ident", "36");
			EstadoDeError[57].Add(";", "36");
			EstadoDeError[57].Add("(", "36");
			EstadoDeError[57].Add("void", "36");
			EstadoDeError[57].Add("static", "67");
			EstadoDeError[57].Add("class", "36");
			EstadoDeError[57].Add("{", "36");
			EstadoDeError[57].Add("}", "36");
			EstadoDeError[57].Add("interface", "36");
			EstadoDeError[57].Add("int", "36");
			EstadoDeError[57].Add("double", "36");
			EstadoDeError[57].Add("boolean", "36");
			EstadoDeError[57].Add("string", "36");
			EstadoDeError[57].Add("if", "36");
			EstadoDeError[57].Add("while", "36");
			EstadoDeError[57].Add("for", "36");
			EstadoDeError[57].Add("break", "36");
			EstadoDeError[57].Add("return", "36");
			EstadoDeError[57].Add("System", "36");
			EstadoDeError[57].Add("else", "36");
			EstadoDeError[57].Add("-", "36");
			EstadoDeError[57].Add("!", "36");
			EstadoDeError[57].Add("New", "36");
			EstadoDeError[57].Add("this", "36");
			EstadoDeError[57].Add("intConstant", "36");
			EstadoDeError[57].Add("stringConstant", "36");
			EstadoDeError[57].Add("boolConstant", "36");
			EstadoDeError[57].Add("doubleConstant", "36");
			EstadoDeError[57].Add("null", "36");
			EstadoDeError[57].Add("$", "36");
			EstadoDeError.Add(58, new Dictionary<string, string>());
			EstadoDeError[58].Add("ident", "68");
			EstadoDeError[58].Add("[]", "16");
			EstadoDeError.Add(59, new Dictionary<string, string>());
			EstadoDeError[59].Add(")", "12");
			EstadoDeError.Add(60, new Dictionary<string, string>());
			EstadoDeError[60].Add("ident", "7");
			EstadoDeError[60].Add("void", "7");
			EstadoDeError[60].Add("static", "7");
			EstadoDeError[60].Add("class", "7");
			EstadoDeError[60].Add("interface", "7");
			EstadoDeError[60].Add("int", "7");
			EstadoDeError[60].Add("double", "7");
			EstadoDeError[60].Add("boolean", "7");
			EstadoDeError[60].Add("string", "7");
			EstadoDeError[60].Add("$", "7");
			EstadoDeError.Add(61, new Dictionary<string, string>());
			EstadoDeError[61].Add("}", "25");
			EstadoDeError.Add(62, new Dictionary<string, string>());
			EstadoDeError[62].Add(";", "69");
			EstadoDeError[62].Add("(", "70");
			EstadoDeError.Add(63, new Dictionary<string, string>());
			EstadoDeError[63].Add("ident", "71");
			EstadoDeError.Add(64, new Dictionary<string, string>());
			EstadoDeError[64].Add("{", "24");
			EstadoDeError[64].Add(",", "55");
			EstadoDeError.Add(65, new Dictionary<string, string>());
			EstadoDeError[65].Add(")", "73");
			EstadoDeError.Add(66, new Dictionary<string, string>());
			EstadoDeError[66].Add("ident", "92");
			EstadoDeError[66].Add(";", "77");
			EstadoDeError[66].Add("(", "91");
			EstadoDeError[66].Add("{", "47");
			EstadoDeError[66].Add("}", "38");
			EstadoDeError[66].Add("if", "78");
			EstadoDeError[66].Add("while", "79");
			EstadoDeError[66].Add("for", "80");
			EstadoDeError[66].Add("break", "81");
			EstadoDeError[66].Add("return", "82");
			EstadoDeError[66].Add("System", "83");
			EstadoDeError[66].Add("-", "85");
			EstadoDeError[66].Add("!", "86");
			EstadoDeError[66].Add("New", "87");
			EstadoDeError[66].Add("this", "90");
			EstadoDeError[66].Add("intConstant", "93");
			EstadoDeError[66].Add("stringConstant", "94");
			EstadoDeError[66].Add("boolConstant", "95");
			EstadoDeError[66].Add("doubleConstant", "96");
			EstadoDeError[66].Add("null", "97");
			EstadoDeError.Add(67, new Dictionary<string, string>());
			EstadoDeError[67].Add("int", "10");
			EstadoDeError[67].Add("double", "11");
			EstadoDeError[67].Add("boolean", "12");
			EstadoDeError[67].Add("string", "13");
			EstadoDeError.Add(68, new Dictionary<string, string>());
			EstadoDeError[68].Add(";", "99");
			EstadoDeError.Add(69, new Dictionary<string, string>());
			EstadoDeError[69].Add("ident", "27");
			EstadoDeError[69].Add("static", "27");
			EstadoDeError[69].Add("}", "27");
			EstadoDeError[69].Add("int", "27");
			EstadoDeError[69].Add("double", "27");
			EstadoDeError[69].Add("boolean", "27");
			EstadoDeError[69].Add("string", "27");
			EstadoDeError.Add(70, new Dictionary<string, string>());
			EstadoDeError[70].Add("ident", "9");
			EstadoDeError[70].Add("int", "10");
			EstadoDeError[70].Add("double", "11");
			EstadoDeError[70].Add("boolean", "12");
			EstadoDeError[70].Add("string", "13");
			EstadoDeError.Add(71, new Dictionary<string, string>());
			EstadoDeError[71].Add(";", "101");
			EstadoDeError.Add(72, new Dictionary<string, string>());
			EstadoDeError[72].Add("{", "23");
			EstadoDeError.Add(73, new Dictionary<string, string>());
			EstadoDeError[73].Add(";", "102");
			EstadoDeError.Add(74, new Dictionary<string, string>());
			EstadoDeError[74].Add("}", "103");
			EstadoDeError.Add(75, new Dictionary<string, string>());
			EstadoDeError[75].Add("ident", "92");
			EstadoDeError[75].Add(";", "77");
			EstadoDeError[75].Add("(", "91");
			EstadoDeError[75].Add("{", "47");
			EstadoDeError[75].Add("}", "38");
			EstadoDeError[75].Add("if", "78");
			EstadoDeError[75].Add("while", "79");
			EstadoDeError[75].Add("for", "80");
			EstadoDeError[75].Add("break", "81");
			EstadoDeError[75].Add("return", "82");
			EstadoDeError[75].Add("System", "83");
			EstadoDeError[75].Add("-", "85");
			EstadoDeError[75].Add("!", "86");
			EstadoDeError[75].Add("New", "87");
			EstadoDeError[75].Add("this", "90");
			EstadoDeError[75].Add("intConstant", "93");
			EstadoDeError[75].Add("stringConstant", "94");
			EstadoDeError[75].Add("boolConstant", "95");
			EstadoDeError[75].Add("doubleConstant", "96");
			EstadoDeError[75].Add("null", "97");
			EstadoDeError.Add(76, new Dictionary<string, string>());
			EstadoDeError[76].Add(";", "105");
			EstadoDeError[76].Add(".", "113");
			EstadoDeError[76].Add("-", "106");
			EstadoDeError[76].Add("/", "107");
			EstadoDeError[76].Add("%", "108");
			EstadoDeError[76].Add(">", "109");
			EstadoDeError[76].Add(">=", "110");
			EstadoDeError[76].Add("!=", "111");
			EstadoDeError[76].Add("||", "112");
			EstadoDeError.Add(77, new Dictionary<string, string>());
			EstadoDeError[77].Add("ident", "40");
			EstadoDeError[77].Add(";", "40");
			EstadoDeError[77].Add("(", "40");
			EstadoDeError[77].Add("{", "40");
			EstadoDeError[77].Add("}", "40");
			EstadoDeError[77].Add("if", "40");
			EstadoDeError[77].Add("while", "40");
			EstadoDeError[77].Add("for", "40");
			EstadoDeError[77].Add("break", "40");
			EstadoDeError[77].Add("return", "40");
			EstadoDeError[77].Add("System", "40");
			EstadoDeError[77].Add("else", "40");
			EstadoDeError[77].Add("-", "40");
			EstadoDeError[77].Add("!", "40");
			EstadoDeError[77].Add("New", "40");
			EstadoDeError[77].Add("this", "40");
			EstadoDeError[77].Add("intConstant", "40");
			EstadoDeError[77].Add("stringConstant", "40");
			EstadoDeError[77].Add("boolConstant", "40");
			EstadoDeError[77].Add("doubleConstant", "40");
			EstadoDeError[77].Add("null", "40");
			EstadoDeError.Add(78, new Dictionary<string, string>());
			EstadoDeError[78].Add("(", "114");
			EstadoDeError.Add(79, new Dictionary<string, string>());
			EstadoDeError[79].Add("(", "115");
			EstadoDeError.Add(80, new Dictionary<string, string>());
			EstadoDeError[80].Add("(", "116");
			EstadoDeError.Add(81, new Dictionary<string, string>());
			EstadoDeError[81].Add(";", "117");
			EstadoDeError.Add(82, new Dictionary<string, string>());
			EstadoDeError[82].Add("ident", "92");
			EstadoDeError[82].Add("(", "91");
			EstadoDeError[82].Add("-", "85");
			EstadoDeError[82].Add("!", "86");
			EstadoDeError[82].Add("New", "87");
			EstadoDeError[82].Add("this", "90");
			EstadoDeError[82].Add("intConstant", "93");
			EstadoDeError[82].Add("stringConstant", "94");
			EstadoDeError[82].Add("boolConstant", "95");
			EstadoDeError[82].Add("doubleConstant", "96");
			EstadoDeError[82].Add("null", "97");
			EstadoDeError.Add(83, new Dictionary<string, string>());
			EstadoDeError[83].Add(".", "119");
			EstadoDeError.Add(84, new Dictionary<string, string>());
			EstadoDeError[84].Add("ident", "47");
			EstadoDeError[84].Add(";", "47");
			EstadoDeError[84].Add("(", "47");
			EstadoDeError[84].Add("{", "47");
			EstadoDeError[84].Add("}", "47");
			EstadoDeError[84].Add("if", "47");
			EstadoDeError[84].Add("while", "47");
			EstadoDeError[84].Add("for", "47");
			EstadoDeError[84].Add("break", "47");
			EstadoDeError[84].Add("return", "47");
			EstadoDeError[84].Add("System", "47");
			EstadoDeError[84].Add("else", "47");
			EstadoDeError[84].Add("-", "47");
			EstadoDeError[84].Add("!", "47");
			EstadoDeError[84].Add("New", "47");
			EstadoDeError[84].Add("this", "47");
			EstadoDeError[84].Add("intConstant", "47");
			EstadoDeError[84].Add("stringConstant", "47");
			EstadoDeError[84].Add("boolConstant", "47");
			EstadoDeError[84].Add("doubleConstant", "47");
			EstadoDeError[84].Add("null", "47");
			EstadoDeError.Add(85, new Dictionary<string, string>());
			EstadoDeError[85].Add("ident", "92");
			EstadoDeError[85].Add("(", "91");
			EstadoDeError[85].Add("-", "85");
			EstadoDeError[85].Add("!", "86");
			EstadoDeError[85].Add("New", "87");
			EstadoDeError[85].Add("this", "90");
			EstadoDeError[85].Add("intConstant", "93");
			EstadoDeError[85].Add("stringConstant", "94");
			EstadoDeError[85].Add("boolConstant", "95");
			EstadoDeError[85].Add("doubleConstant", "96");
			EstadoDeError[85].Add("null", "97");
			EstadoDeError.Add(86, new Dictionary<string, string>());
			EstadoDeError[86].Add("ident", "92");
			EstadoDeError[86].Add("(", "91");
			EstadoDeError[86].Add("-", "85");
			EstadoDeError[86].Add("!", "86");
			EstadoDeError[86].Add("New", "87");
			EstadoDeError[86].Add("this", "90");
			EstadoDeError[86].Add("intConstant", "93");
			EstadoDeError[86].Add("stringConstant", "94");
			EstadoDeError[86].Add("boolConstant", "95");
			EstadoDeError[86].Add("doubleConstant", "96");
			EstadoDeError[86].Add("null", "97");
			EstadoDeError.Add(87, new Dictionary<string, string>());
			EstadoDeError[87].Add("(", "122");
			EstadoDeError.Add(88, new Dictionary<string, string>());
			EstadoDeError[88].Add("ident", "62");
			EstadoDeError[88].Add(";", "62");
			EstadoDeError[88].Add("(", "62");
			EstadoDeError[88].Add(")", "62");
			EstadoDeError[88].Add("{", "62");
			EstadoDeError[88].Add("}", "62");
			EstadoDeError[88].Add(",", "62");
			EstadoDeError[88].Add("if", "62");
			EstadoDeError[88].Add("while", "62");
			EstadoDeError[88].Add("for", "62");
			EstadoDeError[88].Add("break", "62");
			EstadoDeError[88].Add("return", "62");
			EstadoDeError[88].Add("System", "62");
			EstadoDeError[88].Add(".", "62");
			EstadoDeError[88].Add("else", "62");
			EstadoDeError[88].Add("-", "62");
			EstadoDeError[88].Add("/", "62");
			EstadoDeError[88].Add("%", "62");
			EstadoDeError[88].Add(">", "62");
			EstadoDeError[88].Add(">=", "62");
			EstadoDeError[88].Add("!=", "62");
			EstadoDeError[88].Add("||", "62");
			EstadoDeError[88].Add("!", "62");
			EstadoDeError[88].Add("New", "62");
			EstadoDeError[88].Add("=", "123");
			EstadoDeError[88].Add("this", "62");
			EstadoDeError[88].Add("intConstant", "62");
			EstadoDeError[88].Add("stringConstant", "62");
			EstadoDeError[88].Add("boolConstant", "62");
			EstadoDeError[88].Add("doubleConstant", "62");
			EstadoDeError[88].Add("null", "62");
			EstadoDeError.Add(89, new Dictionary<string, string>());
			EstadoDeError[89].Add("ident", "64");
			EstadoDeError[89].Add(";", "64");
			EstadoDeError[89].Add("(", "64");
			EstadoDeError[89].Add(")", "64");
			EstadoDeError[89].Add("{", "64");
			EstadoDeError[89].Add("}", "64");
			EstadoDeError[89].Add(",", "64");
			EstadoDeError[89].Add("if", "64");
			EstadoDeError[89].Add("while", "64");
			EstadoDeError[89].Add("for", "64");
			EstadoDeError[89].Add("break", "64");
			EstadoDeError[89].Add("return", "64");
			EstadoDeError[89].Add("System", "64");
			EstadoDeError[89].Add(".", "64");
			EstadoDeError[89].Add("else", "64");
			EstadoDeError[89].Add("-", "64");
			EstadoDeError[89].Add("/", "64");
			EstadoDeError[89].Add("%", "64");
			EstadoDeError[89].Add(">", "64");
			EstadoDeError[89].Add(">=", "64");
			EstadoDeError[89].Add("!=", "64");
			EstadoDeError[89].Add("||", "64");
			EstadoDeError[89].Add("!", "64");
			EstadoDeError[89].Add("New", "64");
			EstadoDeError[89].Add("this", "64");
			EstadoDeError[89].Add("intConstant", "64");
			EstadoDeError[89].Add("stringConstant", "64");
			EstadoDeError[89].Add("boolConstant", "64");
			EstadoDeError[89].Add("doubleConstant", "64");
			EstadoDeError[89].Add("null", "64");
			EstadoDeError.Add(90, new Dictionary<string, string>());
			EstadoDeError[90].Add("ident", "65");
			EstadoDeError[90].Add(";", "65");
			EstadoDeError[90].Add("(", "65");
			EstadoDeError[90].Add(")", "65");
			EstadoDeError[90].Add("{", "65");
			EstadoDeError[90].Add("}", "65");
			EstadoDeError[90].Add(",", "65");
			EstadoDeError[90].Add("if", "65");
			EstadoDeError[90].Add("while", "65");
			EstadoDeError[90].Add("for", "65");
			EstadoDeError[90].Add("break", "65");
			EstadoDeError[90].Add("return", "65");
			EstadoDeError[90].Add("System", "65");
			EstadoDeError[90].Add(".", "65");
			EstadoDeError[90].Add("else", "65");
			EstadoDeError[90].Add("-", "65");
			EstadoDeError[90].Add("/", "65");
			EstadoDeError[90].Add("%", "65");
			EstadoDeError[90].Add(">", "65");
			EstadoDeError[90].Add(">=", "65");
			EstadoDeError[90].Add("!=", "65");
			EstadoDeError[90].Add("||", "65");
			EstadoDeError[90].Add("!", "65");
			EstadoDeError[90].Add("New", "65");
			EstadoDeError[90].Add("this", "65");
			EstadoDeError[90].Add("intConstant", "65");
			EstadoDeError[90].Add("stringConstant", "65");
			EstadoDeError[90].Add("boolConstant", "65");
			EstadoDeError[90].Add("doubleConstant", "65");
			EstadoDeError[90].Add("null", "65");
			EstadoDeError.Add(91, new Dictionary<string, string>());
			EstadoDeError[91].Add("ident", "92");
			EstadoDeError[91].Add("(", "91");
			EstadoDeError[91].Add("-", "85");
			EstadoDeError[91].Add("!", "86");
			EstadoDeError[91].Add("New", "87");
			EstadoDeError[91].Add("this", "90");
			EstadoDeError[91].Add("intConstant", "93");
			EstadoDeError[91].Add("stringConstant", "94");
			EstadoDeError[91].Add("boolConstant", "95");
			EstadoDeError[91].Add("doubleConstant", "96");
			EstadoDeError[91].Add("null", "97");
			EstadoDeError.Add(92, new Dictionary<string, string>());
			EstadoDeError[92].Add("ident", "68");
			EstadoDeError[92].Add(";", "68");
			EstadoDeError[92].Add("(", "68");
			EstadoDeError[92].Add(")", "68");
			EstadoDeError[92].Add("{", "68");
			EstadoDeError[92].Add("}", "68");
			EstadoDeError[92].Add(",", "68");
			EstadoDeError[92].Add("if", "68");
			EstadoDeError[92].Add("while", "68");
			EstadoDeError[92].Add("for", "68");
			EstadoDeError[92].Add("break", "68");
			EstadoDeError[92].Add("return", "68");
			EstadoDeError[92].Add("System", "68");
			EstadoDeError[92].Add(".", "68");
			EstadoDeError[92].Add("else", "68");
			EstadoDeError[92].Add("-", "68");
			EstadoDeError[92].Add("/", "68");
			EstadoDeError[92].Add("%", "68");
			EstadoDeError[92].Add(">", "68");
			EstadoDeError[92].Add(">=", "68");
			EstadoDeError[92].Add("!=", "68");
			EstadoDeError[92].Add("||", "68");
			EstadoDeError[92].Add("!", "68");
			EstadoDeError[92].Add("New", "68");
			EstadoDeError[92].Add("=", "68");
			EstadoDeError[92].Add("this", "68");
			EstadoDeError[92].Add("intConstant", "68");
			EstadoDeError[92].Add("stringConstant", "68");
			EstadoDeError[92].Add("boolConstant", "68");
			EstadoDeError[92].Add("doubleConstant", "68");
			EstadoDeError[92].Add("null", "68");
			EstadoDeError.Add(93, new Dictionary<string, string>());
			EstadoDeError[93].Add("ident", "69");
			EstadoDeError[93].Add(";", "69");
			EstadoDeError[93].Add("(", "69");
			EstadoDeError[93].Add(")", "69");
			EstadoDeError[93].Add("{", "69");
			EstadoDeError[93].Add("}", "69");
			EstadoDeError[93].Add(",", "69");
			EstadoDeError[93].Add("if", "69");
			EstadoDeError[93].Add("while", "69");
			EstadoDeError[93].Add("for", "69");
			EstadoDeError[93].Add("break", "69");
			EstadoDeError[93].Add("return", "69");
			EstadoDeError[93].Add("System", "69");
			EstadoDeError[93].Add(".", "69");
			EstadoDeError[93].Add("else", "69");
			EstadoDeError[93].Add("-", "69");
			EstadoDeError[93].Add("/", "69");
			EstadoDeError[93].Add("%", "69");
			EstadoDeError[93].Add(">", "69");
			EstadoDeError[93].Add(">=", "69");
			EstadoDeError[93].Add("!=", "69");
			EstadoDeError[93].Add("||", "69");
			EstadoDeError[93].Add("!", "69");
			EstadoDeError[93].Add("New", "69");
			EstadoDeError[93].Add("this", "69");
			EstadoDeError[93].Add("intConstant", "69");
			EstadoDeError[93].Add("stringConstant", "69");
			EstadoDeError[93].Add("boolConstant", "69");
			EstadoDeError[93].Add("doubleConstant", "69");
			EstadoDeError[93].Add("null", "69");
			EstadoDeError.Add(94, new Dictionary<string, string>());
			EstadoDeError[94].Add("ident", "70");
			EstadoDeError[94].Add(";", "70");
			EstadoDeError[94].Add("(", "70");
			EstadoDeError[94].Add(")", "70");
			EstadoDeError[94].Add("{", "70");
			EstadoDeError[94].Add("}", "70");
			EstadoDeError[94].Add(",", "70");
			EstadoDeError[94].Add("if", "70");
			EstadoDeError[94].Add("while", "70");
			EstadoDeError[94].Add("for", "70");
			EstadoDeError[94].Add("break", "70");
			EstadoDeError[94].Add("return", "70");
			EstadoDeError[94].Add("System", "70");
			EstadoDeError[94].Add(".", "70");
			EstadoDeError[94].Add("else", "70");
			EstadoDeError[94].Add("-", "70");
			EstadoDeError[94].Add("/", "70");
			EstadoDeError[94].Add("%", "70");
			EstadoDeError[94].Add(">", "70");
			EstadoDeError[94].Add(">=", "70");
			EstadoDeError[94].Add("!=", "70");
			EstadoDeError[94].Add("||", "70");
			EstadoDeError[94].Add("!", "70");
			EstadoDeError[94].Add("New", "70");
			EstadoDeError[94].Add("this", "70");
			EstadoDeError[94].Add("intConstant", "70");
			EstadoDeError[94].Add("stringConstant", "70");
			EstadoDeError[94].Add("boolConstant", "70");
			EstadoDeError[94].Add("doubleConstant", "70");
			EstadoDeError[94].Add("null", "70");
			EstadoDeError.Add(95, new Dictionary<string, string>());
			EstadoDeError[95].Add("ident", "71");
			EstadoDeError[95].Add(";", "71");
			EstadoDeError[95].Add("(", "71");
			EstadoDeError[95].Add(")", "71");
			EstadoDeError[95].Add("{", "71");
			EstadoDeError[95].Add("}", "71");
			EstadoDeError[95].Add(",", "71");
			EstadoDeError[95].Add("if", "71");
			EstadoDeError[95].Add("while", "71");
			EstadoDeError[95].Add("for", "71");
			EstadoDeError[95].Add("break", "71");
			EstadoDeError[95].Add("return", "71");
			EstadoDeError[95].Add("System", "71");
			EstadoDeError[95].Add(".", "71");
			EstadoDeError[95].Add("else", "71");
			EstadoDeError[95].Add("-", "71");
			EstadoDeError[95].Add("/", "71");
			EstadoDeError[95].Add("%", "71");
			EstadoDeError[95].Add(">", "71");
			EstadoDeError[95].Add(">=", "71");
			EstadoDeError[95].Add("!=", "71");
			EstadoDeError[95].Add("||", "71");
			EstadoDeError[95].Add("!", "71");
			EstadoDeError[95].Add("New", "71");
			EstadoDeError[95].Add("this", "71");
			EstadoDeError[95].Add("intConstant", "71");
			EstadoDeError[95].Add("stringConstant", "71");
			EstadoDeError[95].Add("boolConstant", "71");
			EstadoDeError[95].Add("doubleConstant", "71");
			EstadoDeError[95].Add("null", "71");
			EstadoDeError.Add(96, new Dictionary<string, string>());
			EstadoDeError[96].Add("ident", "72");
			EstadoDeError[96].Add(";", "72");
			EstadoDeError[96].Add("(", "72");
			EstadoDeError[96].Add(")", "72");
			EstadoDeError[96].Add("{", "72");
			EstadoDeError[96].Add("}", "72");
			EstadoDeError[96].Add(",", "72");
			EstadoDeError[96].Add("if", "72");
			EstadoDeError[96].Add("while", "72");
			EstadoDeError[96].Add("for", "72");
			EstadoDeError[96].Add("break", "72");
			EstadoDeError[96].Add("return", "72");
			EstadoDeError[96].Add("System", "72");
			EstadoDeError[96].Add(".", "72");
			EstadoDeError[96].Add("else", "72");
			EstadoDeError[96].Add("-", "72");
			EstadoDeError[96].Add("/", "72");
			EstadoDeError[96].Add("%", "72");
			EstadoDeError[96].Add(">", "72");
			EstadoDeError[96].Add(">=", "72");
			EstadoDeError[96].Add("!=", "72");
			EstadoDeError[96].Add("||", "72");
			EstadoDeError[96].Add("!", "72");
			EstadoDeError[96].Add("New", "72");
			EstadoDeError[96].Add("this", "72");
			EstadoDeError[96].Add("intConstant", "72");
			EstadoDeError[96].Add("stringConstant", "72");
			EstadoDeError[96].Add("boolConstant", "72");
			EstadoDeError[96].Add("doubleConstant", "72");
			EstadoDeError[96].Add("null", "72");
			EstadoDeError.Add(97, new Dictionary<string, string>());
			EstadoDeError[97].Add("ident", "73");
			EstadoDeError[97].Add(";", "73");
			EstadoDeError[97].Add("(", "73");
			EstadoDeError[97].Add(")", "73");
			EstadoDeError[97].Add("{", "73");
			EstadoDeError[97].Add("}", "73");
			EstadoDeError[97].Add(",", "73");
			EstadoDeError[97].Add("if", "73");
			EstadoDeError[97].Add("while", "73");
			EstadoDeError[97].Add("for", "73");
			EstadoDeError[97].Add("break", "73");
			EstadoDeError[97].Add("return", "73");
			EstadoDeError[97].Add("System", "73");
			EstadoDeError[97].Add(".", "73");
			EstadoDeError[97].Add("else", "73");
			EstadoDeError[97].Add("-", "73");
			EstadoDeError[97].Add("/", "73");
			EstadoDeError[97].Add("%", "73");
			EstadoDeError[97].Add(">", "73");
			EstadoDeError[97].Add(">=", "73");
			EstadoDeError[97].Add("!=", "73");
			EstadoDeError[97].Add("||", "73");
			EstadoDeError[97].Add("!", "73");
			EstadoDeError[97].Add("New", "73");
			EstadoDeError[97].Add("this", "73");
			EstadoDeError[97].Add("intConstant", "73");
			EstadoDeError[97].Add("stringConstant", "73");
			EstadoDeError[97].Add("boolConstant", "73");
			EstadoDeError[97].Add("doubleConstant", "73");
			EstadoDeError[97].Add("null", "73");
			EstadoDeError.Add(98, new Dictionary<string, string>());
			EstadoDeError[98].Add("ident", "125");
			EstadoDeError.Add(99, new Dictionary<string, string>());
			EstadoDeError[99].Add("ident", "9");
			EstadoDeError[99].Add(";", "34");
			EstadoDeError[99].Add("(", "34");
			EstadoDeError[99].Add("void", "34");
			EstadoDeError[99].Add("static", "34");
			EstadoDeError[99].Add("class", "34");
			EstadoDeError[99].Add("{", "34");
			EstadoDeError[99].Add("}", "34");
			EstadoDeError[99].Add("interface", "34");
			EstadoDeError[99].Add("int", "10");
			EstadoDeError[99].Add("double", "11");
			EstadoDeError[99].Add("boolean", "12");
			EstadoDeError[99].Add("string", "13");
			EstadoDeError[99].Add("if", "34");
			EstadoDeError[99].Add("while", "34");
			EstadoDeError[99].Add("for", "34");
			EstadoDeError[99].Add("break", "34");
			EstadoDeError[99].Add("return", "34");
			EstadoDeError[99].Add("System", "34");
			EstadoDeError[99].Add("else", "34");
			EstadoDeError[99].Add("-", "34");
			EstadoDeError[99].Add("!", "34");
			EstadoDeError[99].Add("New", "34");
			EstadoDeError[99].Add("this", "34");
			EstadoDeError[99].Add("intConstant", "34");
			EstadoDeError[99].Add("stringConstant", "34");
			EstadoDeError[99].Add("boolConstant", "34");
			EstadoDeError[99].Add("doubleConstant", "34");
			EstadoDeError[99].Add("null", "34");
			EstadoDeError[99].Add("$", "34");
			EstadoDeError.Add(100, new Dictionary<string, string>());
			EstadoDeError[100].Add(")", "127");
			EstadoDeError.Add(101, new Dictionary<string, string>());
			EstadoDeError[101].Add("ident", "29");
			EstadoDeError[101].Add("static", "29");
			EstadoDeError[101].Add("}", "29");
			EstadoDeError[101].Add("int", "29");
			EstadoDeError[101].Add("double", "29");
			EstadoDeError[101].Add("boolean", "29");
			EstadoDeError[101].Add("string", "29");
			EstadoDeError.Add(102, new Dictionary<string, string>());
			EstadoDeError[102].Add("ident", "32");
			EstadoDeError[102].Add("}", "32");
			EstadoDeError[102].Add("int", "32");
			EstadoDeError[102].Add("double", "32");
			EstadoDeError[102].Add("boolean", "32");
			EstadoDeError[102].Add("string", "32");
			EstadoDeError.Add(103, new Dictionary<string, string>());
			EstadoDeError[103].Add("ident", "14");
			EstadoDeError[103].Add(";", "14");
			EstadoDeError[103].Add("(", "14");
			EstadoDeError[103].Add("void", "14");
			EstadoDeError[103].Add("static", "14");
			EstadoDeError[103].Add("class", "14");
			EstadoDeError[103].Add("{", "14");
			EstadoDeError[103].Add("}", "14");
			EstadoDeError[103].Add("interface", "14");
			EstadoDeError[103].Add("int", "14");
			EstadoDeError[103].Add("double", "14");
			EstadoDeError[103].Add("boolean", "14");
			EstadoDeError[103].Add("string", "14");
			EstadoDeError[103].Add("if", "14");
			EstadoDeError[103].Add("while", "14");
			EstadoDeError[103].Add("for", "14");
			EstadoDeError[103].Add("break", "14");
			EstadoDeError[103].Add("return", "14");
			EstadoDeError[103].Add("System", "14");
			EstadoDeError[103].Add("else", "14");
			EstadoDeError[103].Add("-", "14");
			EstadoDeError[103].Add("!", "14");
			EstadoDeError[103].Add("New", "14");
			EstadoDeError[103].Add("this", "14");
			EstadoDeError[103].Add("intConstant", "14");
			EstadoDeError[103].Add("stringConstant", "14");
			EstadoDeError[103].Add("boolConstant", "14");
			EstadoDeError[103].Add("doubleConstant", "14");
			EstadoDeError[103].Add("null", "14");
			EstadoDeError[103].Add("$", "14");
			EstadoDeError.Add(104, new Dictionary<string, string>());
			EstadoDeError[104].Add("}", "37");
			EstadoDeError.Add(105, new Dictionary<string, string>());
			EstadoDeError[105].Add("ident", "39");
			EstadoDeError[105].Add(";", "39");
			EstadoDeError[105].Add("(", "39");
			EstadoDeError[105].Add("{", "39");
			EstadoDeError[105].Add("}", "39");
			EstadoDeError[105].Add("if", "39");
			EstadoDeError[105].Add("while", "39");
			EstadoDeError[105].Add("for", "39");
			EstadoDeError[105].Add("break", "39");
			EstadoDeError[105].Add("return", "39");
			EstadoDeError[105].Add("System", "39");
			EstadoDeError[105].Add("else", "39");
			EstadoDeError[105].Add("-", "39");
			EstadoDeError[105].Add("!", "39");
			EstadoDeError[105].Add("New", "39");
			EstadoDeError[105].Add("this", "39");
			EstadoDeError[105].Add("intConstant", "39");
			EstadoDeError[105].Add("stringConstant", "39");
			EstadoDeError[105].Add("boolConstant", "39");
			EstadoDeError[105].Add("doubleConstant", "39");
			EstadoDeError[105].Add("null", "39");
			EstadoDeError.Add(106, new Dictionary<string, string>());
			EstadoDeError[106].Add("ident", "92");
			EstadoDeError[106].Add("(", "91");
			EstadoDeError[106].Add("-", "85");
			EstadoDeError[106].Add("!", "86");
			EstadoDeError[106].Add("New", "87");
			EstadoDeError[106].Add("this", "90");
			EstadoDeError[106].Add("intConstant", "93");
			EstadoDeError[106].Add("stringConstant", "94");
			EstadoDeError[106].Add("boolConstant", "95");
			EstadoDeError[106].Add("doubleConstant", "96");
			EstadoDeError[106].Add("null", "97");
			EstadoDeError.Add(107, new Dictionary<string, string>());
			EstadoDeError[107].Add("ident", "92");
			EstadoDeError[107].Add("(", "91");
			EstadoDeError[107].Add("-", "85");
			EstadoDeError[107].Add("!", "86");
			EstadoDeError[107].Add("New", "87");
			EstadoDeError[107].Add("this", "90");
			EstadoDeError[107].Add("intConstant", "93");
			EstadoDeError[107].Add("stringConstant", "94");
			EstadoDeError[107].Add("boolConstant", "95");
			EstadoDeError[107].Add("doubleConstant", "96");
			EstadoDeError[107].Add("null", "97");
			EstadoDeError.Add(108, new Dictionary<string, string>());
			EstadoDeError[108].Add("ident", "92");
			EstadoDeError[108].Add("(", "91");
			EstadoDeError[108].Add("-", "85");
			EstadoDeError[108].Add("!", "86");
			EstadoDeError[108].Add("New", "87");
			EstadoDeError[108].Add("this", "90");
			EstadoDeError[108].Add("intConstant", "93");
			EstadoDeError[108].Add("stringConstant", "94");
			EstadoDeError[108].Add("boolConstant", "95");
			EstadoDeError[108].Add("doubleConstant", "96");
			EstadoDeError[108].Add("null", "97");
			EstadoDeError.Add(109, new Dictionary<string, string>());
			EstadoDeError[109].Add("ident", "92");
			EstadoDeError[109].Add("(", "91");
			EstadoDeError[109].Add("-", "85");
			EstadoDeError[109].Add("!", "86");
			EstadoDeError[109].Add("New", "87");
			EstadoDeError[109].Add("this", "90");
			EstadoDeError[109].Add("intConstant", "93");
			EstadoDeError[109].Add("stringConstant", "94");
			EstadoDeError[109].Add("boolConstant", "95");
			EstadoDeError[109].Add("doubleConstant", "96");
			EstadoDeError[109].Add("null", "97");
			EstadoDeError.Add(110, new Dictionary<string, string>());
			EstadoDeError[110].Add("ident", "92");
			EstadoDeError[110].Add("(", "91");
			EstadoDeError[110].Add("-", "85");
			EstadoDeError[110].Add("!", "86");
			EstadoDeError[110].Add("New", "87");
			EstadoDeError[110].Add("this", "90");
			EstadoDeError[110].Add("intConstant", "93");
			EstadoDeError[110].Add("stringConstant", "94");
			EstadoDeError[110].Add("boolConstant", "95");
			EstadoDeError[110].Add("doubleConstant", "96");
			EstadoDeError[110].Add("null", "97");
			EstadoDeError.Add(111, new Dictionary<string, string>());
			EstadoDeError[111].Add("ident", "92");
			EstadoDeError[111].Add("(", "91");
			EstadoDeError[111].Add("-", "85");
			EstadoDeError[111].Add("!", "86");
			EstadoDeError[111].Add("New", "87");
			EstadoDeError[111].Add("this", "90");
			EstadoDeError[111].Add("intConstant", "93");
			EstadoDeError[111].Add("stringConstant", "94");
			EstadoDeError[111].Add("boolConstant", "95");
			EstadoDeError[111].Add("doubleConstant", "96");
			EstadoDeError[111].Add("null", "97");
			EstadoDeError.Add(112, new Dictionary<string, string>());
			EstadoDeError[112].Add("ident", "92");
			EstadoDeError[112].Add("(", "91");
			EstadoDeError[112].Add("-", "85");
			EstadoDeError[112].Add("!", "86");
			EstadoDeError[112].Add("New", "87");
			EstadoDeError[112].Add("this", "90");
			EstadoDeError[112].Add("intConstant", "93");
			EstadoDeError[112].Add("stringConstant", "94");
			EstadoDeError[112].Add("boolConstant", "95");
			EstadoDeError[112].Add("doubleConstant", "96");
			EstadoDeError[112].Add("null", "97");
			EstadoDeError.Add(113, new Dictionary<string, string>());
			EstadoDeError[113].Add("ident", "135");
			EstadoDeError.Add(114, new Dictionary<string, string>());
			EstadoDeError[114].Add("ident", "92");
			EstadoDeError[114].Add("(", "91");
			EstadoDeError[114].Add("-", "85");
			EstadoDeError[114].Add("!", "86");
			EstadoDeError[114].Add("New", "87");
			EstadoDeError[114].Add("this", "90");
			EstadoDeError[114].Add("intConstant", "93");
			EstadoDeError[114].Add("stringConstant", "94");
			EstadoDeError[114].Add("boolConstant", "95");
			EstadoDeError[114].Add("doubleConstant", "96");
			EstadoDeError[114].Add("null", "97");
			EstadoDeError.Add(115, new Dictionary<string, string>());
			EstadoDeError[115].Add("ident", "92");
			EstadoDeError[115].Add("(", "91");
			EstadoDeError[115].Add("-", "85");
			EstadoDeError[115].Add("!", "86");
			EstadoDeError[115].Add("New", "87");
			EstadoDeError[115].Add("this", "90");
			EstadoDeError[115].Add("intConstant", "93");
			EstadoDeError[115].Add("stringConstant", "94");
			EstadoDeError[115].Add("boolConstant", "95");
			EstadoDeError[115].Add("doubleConstant", "96");
			EstadoDeError[115].Add("null", "97");
			EstadoDeError.Add(116, new Dictionary<string, string>());
			EstadoDeError[116].Add("ident", "92");
			EstadoDeError[116].Add("(", "91");
			EstadoDeError[116].Add("-", "85");
			EstadoDeError[116].Add("!", "86");
			EstadoDeError[116].Add("New", "87");
			EstadoDeError[116].Add("this", "90");
			EstadoDeError[116].Add("intConstant", "93");
			EstadoDeError[116].Add("stringConstant", "94");
			EstadoDeError[116].Add("boolConstant", "95");
			EstadoDeError[116].Add("doubleConstant", "96");
			EstadoDeError[116].Add("null", "97");
			EstadoDeError.Add(117, new Dictionary<string, string>());
			EstadoDeError[117].Add("ident", "44");
			EstadoDeError[117].Add(";", "44");
			EstadoDeError[117].Add("(", "44");
			EstadoDeError[117].Add("{", "44");
			EstadoDeError[117].Add("}", "44");
			EstadoDeError[117].Add("if", "44");
			EstadoDeError[117].Add("while", "44");
			EstadoDeError[117].Add("for", "44");
			EstadoDeError[117].Add("break", "44");
			EstadoDeError[117].Add("return", "44");
			EstadoDeError[117].Add("System", "44");
			EstadoDeError[117].Add("else", "44");
			EstadoDeError[117].Add("-", "44");
			EstadoDeError[117].Add("!", "44");
			EstadoDeError[117].Add("New", "44");
			EstadoDeError[117].Add("this", "44");
			EstadoDeError[117].Add("intConstant", "44");
			EstadoDeError[117].Add("stringConstant", "44");
			EstadoDeError[117].Add("boolConstant", "44");
			EstadoDeError[117].Add("doubleConstant", "44");
			EstadoDeError[117].Add("null", "44");
			EstadoDeError.Add(118, new Dictionary<string, string>());
			EstadoDeError[118].Add(";", "139");
			EstadoDeError[118].Add(".", "113");
			EstadoDeError[118].Add("-", "106");
			EstadoDeError[118].Add("/", "107");
			EstadoDeError[118].Add("%", "108");
			EstadoDeError[118].Add(">", "109");
			EstadoDeError[118].Add(">=", "110");
			EstadoDeError[118].Add("!=", "111");
			EstadoDeError[118].Add("||", "112");
			EstadoDeError.Add(119, new Dictionary<string, string>());
			EstadoDeError[119].Add("out", "140");
			EstadoDeError.Add(120, new Dictionary<string, string>());
			EstadoDeError[120].Add("ident", "55");
			EstadoDeError[120].Add(";", "55");
			EstadoDeError[120].Add("(", "55");
			EstadoDeError[120].Add(")", "55");
			EstadoDeError[120].Add("{", "55");
			EstadoDeError[120].Add("}", "55");
			EstadoDeError[120].Add(",", "55");
			EstadoDeError[120].Add("if", "55");
			EstadoDeError[120].Add("while", "55");
			EstadoDeError[120].Add("for", "55");
			EstadoDeError[120].Add("break", "55");
			EstadoDeError[120].Add("return", "55");
			EstadoDeError[120].Add("System", "55");
			EstadoDeError[120].Add(".", "113");
			EstadoDeError[120].Add("else", "55");
			EstadoDeError[120].Add("-", "106");
			EstadoDeError[120].Add("/", "107");
			EstadoDeError[120].Add("%", "108");
			EstadoDeError[120].Add(">", "109");
			EstadoDeError[120].Add(">=", "110");
			EstadoDeError[120].Add("!=", "111");
			EstadoDeError[120].Add("||", "112");
			EstadoDeError[120].Add("!", "55");
			EstadoDeError[120].Add("New", "55");
			EstadoDeError[120].Add("this", "55");
			EstadoDeError[120].Add("intConstant", "55");
			EstadoDeError[120].Add("stringConstant", "55");
			EstadoDeError[120].Add("boolConstant", "55");
			EstadoDeError[120].Add("doubleConstant", "55");
			EstadoDeError[120].Add("null", "55");
			EstadoDeError.Add(121, new Dictionary<string, string>());
			EstadoDeError[121].Add("ident", "60");
			EstadoDeError[121].Add(";", "60");
			EstadoDeError[121].Add("(", "60");
			EstadoDeError[121].Add(")", "60");
			EstadoDeError[121].Add("{", "60");
			EstadoDeError[121].Add("}", "60");
			EstadoDeError[121].Add(",", "60");
			EstadoDeError[121].Add("if", "60");
			EstadoDeError[121].Add("while", "60");
			EstadoDeError[121].Add("for", "60");
			EstadoDeError[121].Add("break", "60");
			EstadoDeError[121].Add("return", "60");
			EstadoDeError[121].Add("System", "60");
			EstadoDeError[121].Add(".", "113");
			EstadoDeError[121].Add("else", "60");
			EstadoDeError[121].Add("-", "106");
			EstadoDeError[121].Add("/", "107");
			EstadoDeError[121].Add("%", "108");
			EstadoDeError[121].Add(">", "109");
			EstadoDeError[121].Add(">=", "110");
			EstadoDeError[121].Add("!=", "111");
			EstadoDeError[121].Add("||", "112");
			EstadoDeError[121].Add("!", "60");
			EstadoDeError[121].Add("New", "60");
			EstadoDeError[121].Add("this", "60");
			EstadoDeError[121].Add("intConstant", "60");
			EstadoDeError[121].Add("stringConstant", "60");
			EstadoDeError[121].Add("boolConstant", "60");
			EstadoDeError[121].Add("doubleConstant", "60");
			EstadoDeError[121].Add("null", "60");
			EstadoDeError.Add(122, new Dictionary<string, string>());
			EstadoDeError[122].Add("ident", "141");
			EstadoDeError.Add(123, new Dictionary<string, string>());
			EstadoDeError[123].Add("ident", "92");
			EstadoDeError[123].Add("(", "91");
			EstadoDeError[123].Add("-", "85");
			EstadoDeError[123].Add("!", "86");
			EstadoDeError[123].Add("New", "87");
			EstadoDeError[123].Add("this", "90");
			EstadoDeError[123].Add("intConstant", "93");
			EstadoDeError[123].Add("stringConstant", "94");
			EstadoDeError[123].Add("boolConstant", "95");
			EstadoDeError[123].Add("doubleConstant", "96");
			EstadoDeError[123].Add("null", "97");
			EstadoDeError.Add(124, new Dictionary<string, string>());
			EstadoDeError[124].Add(")", "143");
			EstadoDeError[124].Add(".", "113");
			EstadoDeError[124].Add("-", "106");
			EstadoDeError[124].Add("/", "107");
			EstadoDeError[124].Add("%", "108");
			EstadoDeError[124].Add(">", "109");
			EstadoDeError[124].Add(">=", "110");
			EstadoDeError[124].Add("!=", "111");
			EstadoDeError[124].Add("||", "112");
			EstadoDeError.Add(125, new Dictionary<string, string>());
			EstadoDeError[125].Add(";", "144");
			EstadoDeError.Add(126, new Dictionary<string, string>());
			EstadoDeError[126].Add("ident", "33");
			EstadoDeError[126].Add(";", "33");
			EstadoDeError[126].Add("(", "33");
			EstadoDeError[126].Add("void", "33");
			EstadoDeError[126].Add("static", "33");
			EstadoDeError[126].Add("class", "33");
			EstadoDeError[126].Add("{", "33");
			EstadoDeError[126].Add("}", "33");
			EstadoDeError[126].Add("interface", "33");
			EstadoDeError[126].Add("int", "33");
			EstadoDeError[126].Add("double", "33");
			EstadoDeError[126].Add("boolean", "33");
			EstadoDeError[126].Add("string", "33");
			EstadoDeError[126].Add("if", "33");
			EstadoDeError[126].Add("while", "33");
			EstadoDeError[126].Add("for", "33");
			EstadoDeError[126].Add("break", "33");
			EstadoDeError[126].Add("return", "33");
			EstadoDeError[126].Add("System", "33");
			EstadoDeError[126].Add("else", "33");
			EstadoDeError[126].Add("-", "33");
			EstadoDeError[126].Add("!", "33");
			EstadoDeError[126].Add("New", "33");
			EstadoDeError[126].Add("this", "33");
			EstadoDeError[126].Add("intConstant", "33");
			EstadoDeError[126].Add("stringConstant", "33");
			EstadoDeError[126].Add("boolConstant", "33");
			EstadoDeError[126].Add("doubleConstant", "33");
			EstadoDeError[126].Add("null", "33");
			EstadoDeError[126].Add("$", "33");
			EstadoDeError.Add(127, new Dictionary<string, string>());
			EstadoDeError[127].Add("{", "47");
			EstadoDeError.Add(128, new Dictionary<string, string>());
			EstadoDeError[128].Add("ident", "52");
			EstadoDeError[128].Add(";", "52");
			EstadoDeError[128].Add("(", "52");
			EstadoDeError[128].Add(")", "52");
			EstadoDeError[128].Add("{", "52");
			EstadoDeError[128].Add("}", "52");
			EstadoDeError[128].Add(",", "52");
			EstadoDeError[128].Add("if", "52");
			EstadoDeError[128].Add("while", "52");
			EstadoDeError[128].Add("for", "52");
			EstadoDeError[128].Add("break", "52");
			EstadoDeError[128].Add("return", "52");
			EstadoDeError[128].Add("System", "52");
			EstadoDeError[128].Add(".", "113");
			EstadoDeError[128].Add("else", "52");
			EstadoDeError[128].Add("-", "106");
			EstadoDeError[128].Add("/", "107");
			EstadoDeError[128].Add("%", "108");
			EstadoDeError[128].Add(">", "109");
			EstadoDeError[128].Add(">=", "110");
			EstadoDeError[128].Add("!=", "111");
			EstadoDeError[128].Add("||", "112");
			EstadoDeError[128].Add("!", "52");
			EstadoDeError[128].Add("New", "52");
			EstadoDeError[128].Add("this", "52");
			EstadoDeError[128].Add("intConstant", "52");
			EstadoDeError[128].Add("stringConstant", "52");
			EstadoDeError[128].Add("boolConstant", "52");
			EstadoDeError[128].Add("doubleConstant", "52");
			EstadoDeError[128].Add("null", "52");
			EstadoDeError.Add(129, new Dictionary<string, string>());
			EstadoDeError[129].Add("ident", "53");
			EstadoDeError[129].Add(";", "53");
			EstadoDeError[129].Add("(", "53");
			EstadoDeError[129].Add(")", "53");
			EstadoDeError[129].Add("{", "53");
			EstadoDeError[129].Add("}", "53");
			EstadoDeError[129].Add(",", "53");
			EstadoDeError[129].Add("if", "53");
			EstadoDeError[129].Add("while", "53");
			EstadoDeError[129].Add("for", "53");
			EstadoDeError[129].Add("break", "53");
			EstadoDeError[129].Add("return", "53");
			EstadoDeError[129].Add("System", "53");
			EstadoDeError[129].Add(".", "113");
			EstadoDeError[129].Add("else", "53");
			EstadoDeError[129].Add("-", "106");
			EstadoDeError[129].Add("/", "107");
			EstadoDeError[129].Add("%", "108");
			EstadoDeError[129].Add(">", "109");
			EstadoDeError[129].Add(">=", "110");
			EstadoDeError[129].Add("!=", "111");
			EstadoDeError[129].Add("||", "112");
			EstadoDeError[129].Add("!", "53");
			EstadoDeError[129].Add("New", "53");
			EstadoDeError[129].Add("this", "53");
			EstadoDeError[129].Add("intConstant", "53");
			EstadoDeError[129].Add("stringConstant", "53");
			EstadoDeError[129].Add("boolConstant", "53");
			EstadoDeError[129].Add("doubleConstant", "53");
			EstadoDeError[129].Add("null", "53");
			EstadoDeError.Add(130, new Dictionary<string, string>());
			EstadoDeError[130].Add("ident", "54");
			EstadoDeError[130].Add(";", "54");
			EstadoDeError[130].Add("(", "54");
			EstadoDeError[130].Add(")", "54");
			EstadoDeError[130].Add("{", "54");
			EstadoDeError[130].Add("}", "54");
			EstadoDeError[130].Add(",", "54");
			EstadoDeError[130].Add("if", "54");
			EstadoDeError[130].Add("while", "54");
			EstadoDeError[130].Add("for", "54");
			EstadoDeError[130].Add("break", "54");
			EstadoDeError[130].Add("return", "54");
			EstadoDeError[130].Add("System", "54");
			EstadoDeError[130].Add(".", "113");
			EstadoDeError[130].Add("else", "54");
			EstadoDeError[130].Add("-", "106");
			EstadoDeError[130].Add("/", "107");
			EstadoDeError[130].Add("%", "108");
			EstadoDeError[130].Add(">", "109");
			EstadoDeError[130].Add(">=", "110");
			EstadoDeError[130].Add("!=", "111");
			EstadoDeError[130].Add("||", "112");
			EstadoDeError[130].Add("!", "54");
			EstadoDeError[130].Add("New", "54");
			EstadoDeError[130].Add("this", "54");
			EstadoDeError[130].Add("intConstant", "54");
			EstadoDeError[130].Add("stringConstant", "54");
			EstadoDeError[130].Add("boolConstant", "54");
			EstadoDeError[130].Add("doubleConstant", "54");
			EstadoDeError[130].Add("null", "54");
			EstadoDeError.Add(131, new Dictionary<string, string>());
			EstadoDeError[131].Add("ident", "56");
			EstadoDeError[131].Add(";", "56");
			EstadoDeError[131].Add("(", "56");
			EstadoDeError[131].Add(")", "56");
			EstadoDeError[131].Add("{", "56");
			EstadoDeError[131].Add("}", "56");
			EstadoDeError[131].Add(",", "56");
			EstadoDeError[131].Add("if", "56");
			EstadoDeError[131].Add("while", "56");
			EstadoDeError[131].Add("for", "56");
			EstadoDeError[131].Add("break", "56");
			EstadoDeError[131].Add("return", "56");
			EstadoDeError[131].Add("System", "56");
			EstadoDeError[131].Add(".", "113");
			EstadoDeError[131].Add("else", "56");
			EstadoDeError[131].Add("-", "106");
			EstadoDeError[131].Add("/", "107");
			EstadoDeError[131].Add("%", "108");
			EstadoDeError[131].Add(">", "109");
			EstadoDeError[131].Add(">=", "110");
			EstadoDeError[131].Add("!=", "111");
			EstadoDeError[131].Add("||", "112");
			EstadoDeError[131].Add("!", "56");
			EstadoDeError[131].Add("New", "56");
			EstadoDeError[131].Add("this", "56");
			EstadoDeError[131].Add("intConstant", "56");
			EstadoDeError[131].Add("stringConstant", "56");
			EstadoDeError[131].Add("boolConstant", "56");
			EstadoDeError[131].Add("doubleConstant", "56");
			EstadoDeError[131].Add("null", "56");
			EstadoDeError.Add(132, new Dictionary<string, string>());
			EstadoDeError[132].Add("ident", "57");
			EstadoDeError[132].Add(";", "57");
			EstadoDeError[132].Add("(", "57");
			EstadoDeError[132].Add(")", "57");
			EstadoDeError[132].Add("{", "57");
			EstadoDeError[132].Add("}", "57");
			EstadoDeError[132].Add(",", "57");
			EstadoDeError[132].Add("if", "57");
			EstadoDeError[132].Add("while", "57");
			EstadoDeError[132].Add("for", "57");
			EstadoDeError[132].Add("break", "57");
			EstadoDeError[132].Add("return", "57");
			EstadoDeError[132].Add("System", "57");
			EstadoDeError[132].Add(".", "113");
			EstadoDeError[132].Add("else", "57");
			EstadoDeError[132].Add("-", "106");
			EstadoDeError[132].Add("/", "107");
			EstadoDeError[132].Add("%", "108");
			EstadoDeError[132].Add(">", "109");
			EstadoDeError[132].Add(">=", "110");
			EstadoDeError[132].Add("!=", "111");
			EstadoDeError[132].Add("||", "112");
			EstadoDeError[132].Add("!", "57");
			EstadoDeError[132].Add("New", "57");
			EstadoDeError[132].Add("this", "57");
			EstadoDeError[132].Add("intConstant", "57");
			EstadoDeError[132].Add("stringConstant", "57");
			EstadoDeError[132].Add("boolConstant", "57");
			EstadoDeError[132].Add("doubleConstant", "57");
			EstadoDeError[132].Add("null", "57");
			EstadoDeError.Add(133, new Dictionary<string, string>());
			EstadoDeError[133].Add("ident", "58");
			EstadoDeError[133].Add(";", "58");
			EstadoDeError[133].Add("(", "58");
			EstadoDeError[133].Add(")", "58");
			EstadoDeError[133].Add("{", "58");
			EstadoDeError[133].Add("}", "58");
			EstadoDeError[133].Add(",", "58");
			EstadoDeError[133].Add("if", "58");
			EstadoDeError[133].Add("while", "58");
			EstadoDeError[133].Add("for", "58");
			EstadoDeError[133].Add("break", "58");
			EstadoDeError[133].Add("return", "58");
			EstadoDeError[133].Add("System", "58");
			EstadoDeError[133].Add(".", "113");
			EstadoDeError[133].Add("else", "58");
			EstadoDeError[133].Add("-", "106");
			EstadoDeError[133].Add("/", "107");
			EstadoDeError[133].Add("%", "108");
			EstadoDeError[133].Add(">", "109");
			EstadoDeError[133].Add(">=", "110");
			EstadoDeError[133].Add("!=", "111");
			EstadoDeError[133].Add("||", "112");
			EstadoDeError[133].Add("!", "58");
			EstadoDeError[133].Add("New", "58");
			EstadoDeError[133].Add("this", "58");
			EstadoDeError[133].Add("intConstant", "58");
			EstadoDeError[133].Add("stringConstant", "58");
			EstadoDeError[133].Add("boolConstant", "58");
			EstadoDeError[133].Add("doubleConstant", "58");
			EstadoDeError[133].Add("null", "58");
			EstadoDeError.Add(134, new Dictionary<string, string>());
			EstadoDeError[134].Add("ident", "59");
			EstadoDeError[134].Add(";", "59");
			EstadoDeError[134].Add("(", "59");
			EstadoDeError[134].Add(")", "59");
			EstadoDeError[134].Add("{", "59");
			EstadoDeError[134].Add("}", "59");
			EstadoDeError[134].Add(",", "59");
			EstadoDeError[134].Add("if", "59");
			EstadoDeError[134].Add("while", "59");
			EstadoDeError[134].Add("for", "59");
			EstadoDeError[134].Add("break", "59");
			EstadoDeError[134].Add("return", "59");
			EstadoDeError[134].Add("System", "59");
			EstadoDeError[134].Add(".", "113");
			EstadoDeError[134].Add("else", "59");
			EstadoDeError[134].Add("-", "106");
			EstadoDeError[134].Add("/", "107");
			EstadoDeError[134].Add("%", "108");
			EstadoDeError[134].Add(">", "109");
			EstadoDeError[134].Add(">=", "110");
			EstadoDeError[134].Add("!=", "111");
			EstadoDeError[134].Add("||", "112");
			EstadoDeError[134].Add("!", "59");
			EstadoDeError[134].Add("New", "59");
			EstadoDeError[134].Add("this", "59");
			EstadoDeError[134].Add("intConstant", "59");
			EstadoDeError[134].Add("stringConstant", "59");
			EstadoDeError[134].Add("boolConstant", "59");
			EstadoDeError[134].Add("doubleConstant", "59");
			EstadoDeError[134].Add("null", "59");
			EstadoDeError.Add(135, new Dictionary<string, string>());
			EstadoDeError[135].Add("ident", "67");
			EstadoDeError[135].Add(";", "67");
			EstadoDeError[135].Add("(", "67");
			EstadoDeError[135].Add(")", "67");
			EstadoDeError[135].Add("{", "67");
			EstadoDeError[135].Add("}", "67");
			EstadoDeError[135].Add(",", "67");
			EstadoDeError[135].Add("if", "67");
			EstadoDeError[135].Add("while", "67");
			EstadoDeError[135].Add("for", "67");
			EstadoDeError[135].Add("break", "67");
			EstadoDeError[135].Add("return", "67");
			EstadoDeError[135].Add("System", "67");
			EstadoDeError[135].Add(".", "67");
			EstadoDeError[135].Add("else", "67");
			EstadoDeError[135].Add("-", "67");
			EstadoDeError[135].Add("/", "67");
			EstadoDeError[135].Add("%", "67");
			EstadoDeError[135].Add(">", "67");
			EstadoDeError[135].Add(">=", "67");
			EstadoDeError[135].Add("!=", "67");
			EstadoDeError[135].Add("||", "67");
			EstadoDeError[135].Add("!", "67");
			EstadoDeError[135].Add("New", "67");
			EstadoDeError[135].Add("=", "67");
			EstadoDeError[135].Add("this", "67");
			EstadoDeError[135].Add("intConstant", "67");
			EstadoDeError[135].Add("stringConstant", "67");
			EstadoDeError[135].Add("boolConstant", "67");
			EstadoDeError[135].Add("doubleConstant", "67");
			EstadoDeError[135].Add("null", "67");
			EstadoDeError.Add(136, new Dictionary<string, string>());
			EstadoDeError[136].Add(")", "146");
			EstadoDeError[136].Add(".", "113");
			EstadoDeError[136].Add("-", "106");
			EstadoDeError[136].Add("/", "107");
			EstadoDeError[136].Add("%", "108");
			EstadoDeError[136].Add(">", "109");
			EstadoDeError[136].Add(">=", "110");
			EstadoDeError[136].Add("!=", "111");
			EstadoDeError[136].Add("||", "112");
			EstadoDeError.Add(137, new Dictionary<string, string>());
			EstadoDeError[137].Add(")", "147");
			EstadoDeError[137].Add(".", "113");
			EstadoDeError[137].Add("-", "106");
			EstadoDeError[137].Add("/", "107");
			EstadoDeError[137].Add("%", "108");
			EstadoDeError[137].Add(">", "109");
			EstadoDeError[137].Add(">=", "110");
			EstadoDeError[137].Add("!=", "111");
			EstadoDeError[137].Add("||", "112");
			EstadoDeError.Add(138, new Dictionary<string, string>());
			EstadoDeError[138].Add(";", "148");
			EstadoDeError[138].Add(".", "113");
			EstadoDeError[138].Add("-", "106");
			EstadoDeError[138].Add("/", "107");
			EstadoDeError[138].Add("%", "108");
			EstadoDeError[138].Add(">", "109");
			EstadoDeError[138].Add(">=", "110");
			EstadoDeError[138].Add("!=", "111");
			EstadoDeError[138].Add("||", "112");
			EstadoDeError.Add(139, new Dictionary<string, string>());
			EstadoDeError[139].Add("ident", "45");
			EstadoDeError[139].Add(";", "45");
			EstadoDeError[139].Add("(", "45");
			EstadoDeError[139].Add("{", "45");
			EstadoDeError[139].Add("}", "45");
			EstadoDeError[139].Add("if", "45");
			EstadoDeError[139].Add("while", "45");
			EstadoDeError[139].Add("for", "45");
			EstadoDeError[139].Add("break", "45");
			EstadoDeError[139].Add("return", "45");
			EstadoDeError[139].Add("System", "45");
			EstadoDeError[139].Add("else", "45");
			EstadoDeError[139].Add("-", "45");
			EstadoDeError[139].Add("!", "45");
			EstadoDeError[139].Add("New", "45");
			EstadoDeError[139].Add("this", "45");
			EstadoDeError[139].Add("intConstant", "45");
			EstadoDeError[139].Add("stringConstant", "45");
			EstadoDeError[139].Add("boolConstant", "45");
			EstadoDeError[139].Add("doubleConstant", "45");
			EstadoDeError[139].Add("null", "45");
			EstadoDeError.Add(140, new Dictionary<string, string>());
			EstadoDeError[140].Add(".", "149");
			EstadoDeError.Add(141, new Dictionary<string, string>());
			EstadoDeError[141].Add(")", "150");
			EstadoDeError.Add(142, new Dictionary<string, string>());
			EstadoDeError[142].Add("ident", "63");
			EstadoDeError[142].Add(";", "63");
			EstadoDeError[142].Add("(", "63");
			EstadoDeError[142].Add(")", "63");
			EstadoDeError[142].Add("{", "63");
			EstadoDeError[142].Add("}", "63");
			EstadoDeError[142].Add(",", "63");
			EstadoDeError[142].Add("if", "63");
			EstadoDeError[142].Add("while", "63");
			EstadoDeError[142].Add("for", "63");
			EstadoDeError[142].Add("break", "63");
			EstadoDeError[142].Add("return", "63");
			EstadoDeError[142].Add("System", "63");
			EstadoDeError[142].Add(".", "113");
			EstadoDeError[142].Add("else", "63");
			EstadoDeError[142].Add("-", "106");
			EstadoDeError[142].Add("/", "107");
			EstadoDeError[142].Add("%", "108");
			EstadoDeError[142].Add(">", "109");
			EstadoDeError[142].Add(">=", "110");
			EstadoDeError[142].Add("!=", "111");
			EstadoDeError[142].Add("||", "112");
			EstadoDeError[142].Add("!", "63");
			EstadoDeError[142].Add("New", "63");
			EstadoDeError[142].Add("this", "63");
			EstadoDeError[142].Add("intConstant", "63");
			EstadoDeError[142].Add("stringConstant", "63");
			EstadoDeError[142].Add("boolConstant", "63");
			EstadoDeError[142].Add("doubleConstant", "63");
			EstadoDeError[142].Add("null", "63");
			EstadoDeError.Add(143, new Dictionary<string, string>());
			EstadoDeError[143].Add("ident", "66");
			EstadoDeError[143].Add(";", "66");
			EstadoDeError[143].Add("(", "66");
			EstadoDeError[143].Add(")", "66");
			EstadoDeError[143].Add("{", "66");
			EstadoDeError[143].Add("}", "66");
			EstadoDeError[143].Add(",", "66");
			EstadoDeError[143].Add("if", "66");
			EstadoDeError[143].Add("while", "66");
			EstadoDeError[143].Add("for", "66");
			EstadoDeError[143].Add("break", "66");
			EstadoDeError[143].Add("return", "66");
			EstadoDeError[143].Add("System", "66");
			EstadoDeError[143].Add(".", "66");
			EstadoDeError[143].Add("else", "66");
			EstadoDeError[143].Add("-", "66");
			EstadoDeError[143].Add("/", "66");
			EstadoDeError[143].Add("%", "66");
			EstadoDeError[143].Add(">", "66");
			EstadoDeError[143].Add(">=", "66");
			EstadoDeError[143].Add("!=", "66");
			EstadoDeError[143].Add("||", "66");
			EstadoDeError[143].Add("!", "66");
			EstadoDeError[143].Add("New", "66");
			EstadoDeError[143].Add("this", "66");
			EstadoDeError[143].Add("intConstant", "66");
			EstadoDeError[143].Add("stringConstant", "66");
			EstadoDeError[143].Add("boolConstant", "66");
			EstadoDeError[143].Add("doubleConstant", "66");
			EstadoDeError[143].Add("null", "66");
			EstadoDeError.Add(144, new Dictionary<string, string>());
			EstadoDeError[144].Add("ident", "36");
			EstadoDeError[144].Add(";", "36");
			EstadoDeError[144].Add("(", "36");
			EstadoDeError[144].Add("void", "36");
			EstadoDeError[144].Add("static", "67");
			EstadoDeError[144].Add("class", "36");
			EstadoDeError[144].Add("{", "36");
			EstadoDeError[144].Add("}", "36");
			EstadoDeError[144].Add("interface", "36");
			EstadoDeError[144].Add("int", "36");
			EstadoDeError[144].Add("double", "36");
			EstadoDeError[144].Add("boolean", "36");
			EstadoDeError[144].Add("string", "36");
			EstadoDeError[144].Add("if", "36");
			EstadoDeError[144].Add("while", "36");
			EstadoDeError[144].Add("for", "36");
			EstadoDeError[144].Add("break", "36");
			EstadoDeError[144].Add("return", "36");
			EstadoDeError[144].Add("System", "36");
			EstadoDeError[144].Add("else", "36");
			EstadoDeError[144].Add("-", "36");
			EstadoDeError[144].Add("!", "36");
			EstadoDeError[144].Add("New", "36");
			EstadoDeError[144].Add("this", "36");
			EstadoDeError[144].Add("intConstant", "36");
			EstadoDeError[144].Add("stringConstant", "36");
			EstadoDeError[144].Add("boolConstant", "36");
			EstadoDeError[144].Add("doubleConstant", "36");
			EstadoDeError[144].Add("null", "36");
			EstadoDeError[144].Add("$", "36");
			EstadoDeError.Add(145, new Dictionary<string, string>());
			EstadoDeError[145].Add("ident", "28");
			EstadoDeError[145].Add("static", "28");
			EstadoDeError[145].Add("}", "28");
			EstadoDeError[145].Add("int", "28");
			EstadoDeError[145].Add("double", "28");
			EstadoDeError[145].Add("boolean", "28");
			EstadoDeError[145].Add("string", "28");
			EstadoDeError.Add(146, new Dictionary<string, string>());
			EstadoDeError[146].Add("ident", "92");
			EstadoDeError[146].Add(";", "77");
			EstadoDeError[146].Add("(", "91");
			EstadoDeError[146].Add("{", "47");
			EstadoDeError[146].Add("if", "78");
			EstadoDeError[146].Add("while", "79");
			EstadoDeError[146].Add("for", "80");
			EstadoDeError[146].Add("break", "81");
			EstadoDeError[146].Add("return", "82");
			EstadoDeError[146].Add("System", "83");
			EstadoDeError[146].Add("-", "85");
			EstadoDeError[146].Add("!", "86");
			EstadoDeError[146].Add("New", "87");
			EstadoDeError[146].Add("this", "90");
			EstadoDeError[146].Add("intConstant", "93");
			EstadoDeError[146].Add("stringConstant", "94");
			EstadoDeError[146].Add("boolConstant", "95");
			EstadoDeError[146].Add("doubleConstant", "96");
			EstadoDeError[146].Add("null", "97");
			EstadoDeError.Add(147, new Dictionary<string, string>());
			EstadoDeError[147].Add("ident", "92");
			EstadoDeError[147].Add(";", "77");
			EstadoDeError[147].Add("(", "91");
			EstadoDeError[147].Add("{", "47");
			EstadoDeError[147].Add("if", "78");
			EstadoDeError[147].Add("while", "79");
			EstadoDeError[147].Add("for", "80");
			EstadoDeError[147].Add("break", "81");
			EstadoDeError[147].Add("return", "82");
			EstadoDeError[147].Add("System", "83");
			EstadoDeError[147].Add("-", "85");
			EstadoDeError[147].Add("!", "86");
			EstadoDeError[147].Add("New", "87");
			EstadoDeError[147].Add("this", "90");
			EstadoDeError[147].Add("intConstant", "93");
			EstadoDeError[147].Add("stringConstant", "94");
			EstadoDeError[147].Add("boolConstant", "95");
			EstadoDeError[147].Add("doubleConstant", "96");
			EstadoDeError[147].Add("null", "97");
			EstadoDeError.Add(148, new Dictionary<string, string>());
			EstadoDeError[148].Add("ident", "92");
			EstadoDeError[148].Add("(", "91");
			EstadoDeError[148].Add("-", "85");
			EstadoDeError[148].Add("!", "86");
			EstadoDeError[148].Add("New", "87");
			EstadoDeError[148].Add("this", "90");
			EstadoDeError[148].Add("intConstant", "93");
			EstadoDeError[148].Add("stringConstant", "94");
			EstadoDeError[148].Add("boolConstant", "95");
			EstadoDeError[148].Add("doubleConstant", "96");
			EstadoDeError[148].Add("null", "97");
			EstadoDeError.Add(149, new Dictionary<string, string>());
			EstadoDeError[149].Add("println", "155");
			EstadoDeError.Add(150, new Dictionary<string, string>());
			EstadoDeError[150].Add("ident", "61");
			EstadoDeError[150].Add(";", "61");
			EstadoDeError[150].Add("(", "61");
			EstadoDeError[150].Add(")", "61");
			EstadoDeError[150].Add("{", "61");
			EstadoDeError[150].Add("}", "61");
			EstadoDeError[150].Add(",", "61");
			EstadoDeError[150].Add("if", "61");
			EstadoDeError[150].Add("while", "61");
			EstadoDeError[150].Add("for", "61");
			EstadoDeError[150].Add("break", "61");
			EstadoDeError[150].Add("return", "61");
			EstadoDeError[150].Add("System", "61");
			EstadoDeError[150].Add(".", "61");
			EstadoDeError[150].Add("else", "61");
			EstadoDeError[150].Add("-", "61");
			EstadoDeError[150].Add("/", "61");
			EstadoDeError[150].Add("%", "61");
			EstadoDeError[150].Add(">", "61");
			EstadoDeError[150].Add(">=", "61");
			EstadoDeError[150].Add("!=", "61");
			EstadoDeError[150].Add("||", "61");
			EstadoDeError[150].Add("!", "61");
			EstadoDeError[150].Add("New", "61");
			EstadoDeError[150].Add("this", "61");
			EstadoDeError[150].Add("intConstant", "61");
			EstadoDeError[150].Add("stringConstant", "61");
			EstadoDeError[150].Add("boolConstant", "61");
			EstadoDeError[150].Add("doubleConstant", "61");
			EstadoDeError[150].Add("null", "61");
			EstadoDeError.Add(151, new Dictionary<string, string>());
			EstadoDeError[151].Add("ident", "35");
			EstadoDeError[151].Add(";", "35");
			EstadoDeError[151].Add("(", "35");
			EstadoDeError[151].Add("void", "35");
			EstadoDeError[151].Add("static", "35");
			EstadoDeError[151].Add("class", "35");
			EstadoDeError[151].Add("{", "35");
			EstadoDeError[151].Add("}", "35");
			EstadoDeError[151].Add("interface", "35");
			EstadoDeError[151].Add("int", "35");
			EstadoDeError[151].Add("double", "35");
			EstadoDeError[151].Add("boolean", "35");
			EstadoDeError[151].Add("string", "35");
			EstadoDeError[151].Add("if", "35");
			EstadoDeError[151].Add("while", "35");
			EstadoDeError[151].Add("for", "35");
			EstadoDeError[151].Add("break", "35");
			EstadoDeError[151].Add("return", "35");
			EstadoDeError[151].Add("System", "35");
			EstadoDeError[151].Add("else", "35");
			EstadoDeError[151].Add("-", "35");
			EstadoDeError[151].Add("!", "35");
			EstadoDeError[151].Add("New", "35");
			EstadoDeError[151].Add("this", "35");
			EstadoDeError[151].Add("intConstant", "35");
			EstadoDeError[151].Add("stringConstant", "35");
			EstadoDeError[151].Add("boolConstant", "35");
			EstadoDeError[151].Add("doubleConstant", "35");
			EstadoDeError[151].Add("null", "35");
			EstadoDeError[151].Add("$", "35");
			EstadoDeError.Add(152, new Dictionary<string, string>());
			EstadoDeError[152].Add("ident", "49");
			EstadoDeError[152].Add(";", "49");
			EstadoDeError[152].Add("(", "49");
			EstadoDeError[152].Add("{", "49");
			EstadoDeError[152].Add("}", "49");
			EstadoDeError[152].Add("if", "49");
			EstadoDeError[152].Add("while", "49");
			EstadoDeError[152].Add("for", "49");
			EstadoDeError[152].Add("break", "49");
			EstadoDeError[152].Add("return", "49");
			EstadoDeError[152].Add("System", "49");
			EstadoDeError[152].Add("else", "157");
			EstadoDeError[152].Add("-", "49");
			EstadoDeError[152].Add("!", "49");
			EstadoDeError[152].Add("New", "49");
			EstadoDeError[152].Add("this", "49");
			EstadoDeError[152].Add("intConstant", "49");
			EstadoDeError[152].Add("stringConstant", "49");
			EstadoDeError[152].Add("boolConstant", "49");
			EstadoDeError[152].Add("doubleConstant", "49");
			EstadoDeError[152].Add("null", "49");
			EstadoDeError.Add(153, new Dictionary<string, string>());
			EstadoDeError[153].Add("ident", "42");
			EstadoDeError[153].Add(";", "42");
			EstadoDeError[153].Add("(", "42");
			EstadoDeError[153].Add("{", "42");
			EstadoDeError[153].Add("}", "42");
			EstadoDeError[153].Add("if", "42");
			EstadoDeError[153].Add("while", "42");
			EstadoDeError[153].Add("for", "42");
			EstadoDeError[153].Add("break", "42");
			EstadoDeError[153].Add("return", "42");
			EstadoDeError[153].Add("System", "42");
			EstadoDeError[153].Add("else", "42");
			EstadoDeError[153].Add("-", "42");
			EstadoDeError[153].Add("!", "42");
			EstadoDeError[153].Add("New", "42");
			EstadoDeError[153].Add("this", "42");
			EstadoDeError[153].Add("intConstant", "42");
			EstadoDeError[153].Add("stringConstant", "42");
			EstadoDeError[153].Add("boolConstant", "42");
			EstadoDeError[153].Add("doubleConstant", "42");
			EstadoDeError[153].Add("null", "42");
			EstadoDeError.Add(154, new Dictionary<string, string>());
			EstadoDeError[154].Add(";", "158");
			EstadoDeError[154].Add(".", "113");
			EstadoDeError[154].Add("-", "106");
			EstadoDeError[154].Add("/", "107");
			EstadoDeError[154].Add("%", "108");
			EstadoDeError[154].Add(">", "109");
			EstadoDeError[154].Add(">=", "110");
			EstadoDeError[154].Add("!=", "111");
			EstadoDeError[154].Add("||", "112");
			EstadoDeError.Add(155, new Dictionary<string, string>());
			EstadoDeError[155].Add("(", "159");
			EstadoDeError.Add(156, new Dictionary<string, string>());
			EstadoDeError[156].Add("ident", "41");
			EstadoDeError[156].Add(";", "41");
			EstadoDeError[156].Add("(", "41");
			EstadoDeError[156].Add("{", "41");
			EstadoDeError[156].Add("}", "41");
			EstadoDeError[156].Add("if", "41");
			EstadoDeError[156].Add("while", "41");
			EstadoDeError[156].Add("for", "41");
			EstadoDeError[156].Add("break", "41");
			EstadoDeError[156].Add("return", "41");
			EstadoDeError[156].Add("System", "41");
			EstadoDeError[156].Add("else", "41");
			EstadoDeError[156].Add("-", "41");
			EstadoDeError[156].Add("!", "41");
			EstadoDeError[156].Add("New", "41");
			EstadoDeError[156].Add("this", "41");
			EstadoDeError[156].Add("intConstant", "41");
			EstadoDeError[156].Add("stringConstant", "41");
			EstadoDeError[156].Add("boolConstant", "41");
			EstadoDeError[156].Add("doubleConstant", "41");
			EstadoDeError[156].Add("null", "41");
			EstadoDeError.Add(157, new Dictionary<string, string>());
			EstadoDeError[157].Add("ident", "92");
			EstadoDeError[157].Add(";", "77");
			EstadoDeError[157].Add("(", "91");
			EstadoDeError[157].Add("{", "47");
			EstadoDeError[157].Add("if", "78");
			EstadoDeError[157].Add("while", "79");
			EstadoDeError[157].Add("for", "80");
			EstadoDeError[157].Add("break", "81");
			EstadoDeError[157].Add("return", "82");
			EstadoDeError[157].Add("System", "83");
			EstadoDeError[157].Add("-", "85");
			EstadoDeError[157].Add("!", "86");
			EstadoDeError[157].Add("New", "87");
			EstadoDeError[157].Add("this", "90");
			EstadoDeError[157].Add("intConstant", "93");
			EstadoDeError[157].Add("stringConstant", "94");
			EstadoDeError[157].Add("boolConstant", "95");
			EstadoDeError[157].Add("doubleConstant", "96");
			EstadoDeError[157].Add("null", "97");
			EstadoDeError.Add(158, new Dictionary<string, string>());
			EstadoDeError[158].Add("ident", "92");
			EstadoDeError[158].Add("(", "91");
			EstadoDeError[158].Add("-", "85");
			EstadoDeError[158].Add("!", "86");
			EstadoDeError[158].Add("New", "87");
			EstadoDeError[158].Add("this", "90");
			EstadoDeError[158].Add("intConstant", "93");
			EstadoDeError[158].Add("stringConstant", "94");
			EstadoDeError[158].Add("boolConstant", "95");
			EstadoDeError[158].Add("doubleConstant", "96");
			EstadoDeError[158].Add("null", "97");
			EstadoDeError.Add(159, new Dictionary<string, string>());
			EstadoDeError[159].Add("ident", "92");
			EstadoDeError[159].Add("(", "91");
			EstadoDeError[159].Add("-", "85");
			EstadoDeError[159].Add("!", "86");
			EstadoDeError[159].Add("New", "87");
			EstadoDeError[159].Add("this", "90");
			EstadoDeError[159].Add("intConstant", "93");
			EstadoDeError[159].Add("stringConstant", "94");
			EstadoDeError[159].Add("boolConstant", "95");
			EstadoDeError[159].Add("doubleConstant", "96");
			EstadoDeError[159].Add("null", "97");
			EstadoDeError.Add(160, new Dictionary<string, string>());
			EstadoDeError[160].Add("ident", "48");
			EstadoDeError[160].Add(";", "48");
			EstadoDeError[160].Add("(", "48");
			EstadoDeError[160].Add("{", "48");
			EstadoDeError[160].Add("}", "48");
			EstadoDeError[160].Add("if", "48");
			EstadoDeError[160].Add("while", "48");
			EstadoDeError[160].Add("for", "48");
			EstadoDeError[160].Add("break", "48");
			EstadoDeError[160].Add("return", "48");
			EstadoDeError[160].Add("System", "48");
			EstadoDeError[160].Add("else", "48");
			EstadoDeError[160].Add("-", "48");
			EstadoDeError[160].Add("!", "48");
			EstadoDeError[160].Add("New", "48");
			EstadoDeError[160].Add("this", "48");
			EstadoDeError[160].Add("intConstant", "48");
			EstadoDeError[160].Add("stringConstant", "48");
			EstadoDeError[160].Add("boolConstant", "48");
			EstadoDeError[160].Add("doubleConstant", "48");
			EstadoDeError[160].Add("null", "48");
			EstadoDeError.Add(161, new Dictionary<string, string>());
			EstadoDeError[161].Add(")", "163");
			EstadoDeError[161].Add(".", "113");
			EstadoDeError[161].Add("-", "106");
			EstadoDeError[161].Add("/", "107");
			EstadoDeError[161].Add("%", "108");
			EstadoDeError[161].Add(">", "109");
			EstadoDeError[161].Add(">=", "110");
			EstadoDeError[161].Add("!=", "111");
			EstadoDeError[161].Add("||", "112");
			EstadoDeError.Add(162, new Dictionary<string, string>());
			EstadoDeError[162].Add(")", "51");
			EstadoDeError[162].Add(",", "165");
			EstadoDeError[162].Add(".", "113");
			EstadoDeError[162].Add("-", "106");
			EstadoDeError[162].Add("/", "107");
			EstadoDeError[162].Add("%", "108");
			EstadoDeError[162].Add(">", "109");
			EstadoDeError[162].Add(">=", "110");
			EstadoDeError[162].Add("!=", "111");
			EstadoDeError[162].Add("||", "112");
			EstadoDeError.Add(163, new Dictionary<string, string>());
			EstadoDeError[163].Add("ident", "92");
			EstadoDeError[163].Add(";", "77");
			EstadoDeError[163].Add("(", "91");
			EstadoDeError[163].Add("{", "47");
			EstadoDeError[163].Add("if", "78");
			EstadoDeError[163].Add("while", "79");
			EstadoDeError[163].Add("for", "80");
			EstadoDeError[163].Add("break", "81");
			EstadoDeError[163].Add("return", "82");
			EstadoDeError[163].Add("System", "83");
			EstadoDeError[163].Add("-", "85");
			EstadoDeError[163].Add("!", "86");
			EstadoDeError[163].Add("New", "87");
			EstadoDeError[163].Add("this", "90");
			EstadoDeError[163].Add("intConstant", "93");
			EstadoDeError[163].Add("stringConstant", "94");
			EstadoDeError[163].Add("boolConstant", "95");
			EstadoDeError[163].Add("doubleConstant", "96");
			EstadoDeError[163].Add("null", "97");
			EstadoDeError.Add(164, new Dictionary<string, string>());
			EstadoDeError[164].Add(")", "167");
			EstadoDeError.Add(165, new Dictionary<string, string>());
			EstadoDeError[165].Add("ident", "92");
			EstadoDeError[165].Add("(", "91");
			EstadoDeError[165].Add("-", "85");
			EstadoDeError[165].Add("!", "86");
			EstadoDeError[165].Add("New", "87");
			EstadoDeError[165].Add("this", "90");
			EstadoDeError[165].Add("intConstant", "93");
			EstadoDeError[165].Add("stringConstant", "94");
			EstadoDeError[165].Add("boolConstant", "95");
			EstadoDeError[165].Add("doubleConstant", "96");
			EstadoDeError[165].Add("null", "97");
			EstadoDeError.Add(166, new Dictionary<string, string>());
			EstadoDeError[166].Add("ident", "43");
			EstadoDeError[166].Add(";", "43");
			EstadoDeError[166].Add("(", "43");
			EstadoDeError[166].Add("{", "43");
			EstadoDeError[166].Add("}", "43");
			EstadoDeError[166].Add("if", "43");
			EstadoDeError[166].Add("while", "43");
			EstadoDeError[166].Add("for", "43");
			EstadoDeError[166].Add("break", "43");
			EstadoDeError[166].Add("return", "43");
			EstadoDeError[166].Add("System", "43");
			EstadoDeError[166].Add("else", "43");
			EstadoDeError[166].Add("-", "43");
			EstadoDeError[166].Add("!", "43");
			EstadoDeError[166].Add("New", "43");
			EstadoDeError[166].Add("this", "43");
			EstadoDeError[166].Add("intConstant", "43");
			EstadoDeError[166].Add("stringConstant", "43");
			EstadoDeError[166].Add("boolConstant", "43");
			EstadoDeError[166].Add("doubleConstant", "43");
			EstadoDeError[166].Add("null", "43");
			EstadoDeError.Add(167, new Dictionary<string, string>());
			EstadoDeError[167].Add(";", "169");
			EstadoDeError.Add(168, new Dictionary<string, string>());
			EstadoDeError[168].Add(")", "51");
			EstadoDeError[168].Add(",", "165");
			EstadoDeError[168].Add(".", "113");
			EstadoDeError[168].Add("-", "106");
			EstadoDeError[168].Add("/", "107");
			EstadoDeError[168].Add("%", "108");
			EstadoDeError[168].Add(">", "109");
			EstadoDeError[168].Add(">=", "110");
			EstadoDeError[168].Add("!=", "111");
			EstadoDeError[168].Add("||", "112");
			EstadoDeError.Add(169, new Dictionary<string, string>());
			EstadoDeError[169].Add("ident", "46");
			EstadoDeError[169].Add(";", "46");
			EstadoDeError[169].Add("(", "46");
			EstadoDeError[169].Add("{", "46");
			EstadoDeError[169].Add("}", "46");
			EstadoDeError[169].Add("if", "46");
			EstadoDeError[169].Add("while", "46");
			EstadoDeError[169].Add("for", "46");
			EstadoDeError[169].Add("break", "46");
			EstadoDeError[169].Add("return", "46");
			EstadoDeError[169].Add("System", "46");
			EstadoDeError[169].Add("else", "46");
			EstadoDeError[169].Add("-", "46");
			EstadoDeError[169].Add("!", "46");
			EstadoDeError[169].Add("New", "46");
			EstadoDeError[169].Add("this", "46");
			EstadoDeError[169].Add("intConstant", "46");
			EstadoDeError[169].Add("stringConstant", "46");
			EstadoDeError[169].Add("boolConstant", "46");
			EstadoDeError[169].Add("doubleConstant", "46");
			EstadoDeError[169].Add("null", "46");
			EstadoDeError.Add(170, new Dictionary<string, string>());
			EstadoDeError[170].Add(")", "50");

		}
		public bool Err()
		{
			bool encontrado = true;
			while (encontrado)
			{
				if (StackDeEntrada.Count != 0)
				{
					var lookahead = StackDeEntrada.Peek();
					var estadoactual = EstadoDeError[StackDeConsumo.Peek()];
					if (estadoactual.ContainsKey(StackDeEntrada.Peek()))
					{
						// lo cointiene, ir a
						return IrA(StackDeConsumo.Peek(), StackDeEntrada.Peek());
					}
					else
					{
						tokensNoEsperados.Add(StackDeEntrada.Pop());
					}
				}
				else
				{
					Console.WriteLine("ERR: Gramatica no aceptada. Errores hasta EOF");
					return false;
				}
			}
			return true;
		}
		void CargarDiccionario()
		{
			Reducciones.Add(0, "Start↓Program");
			Reducciones.Add(1, "Program↓Decl Program");
			Reducciones.Add(2, "Program↓Decl");
			Reducciones.Add(3, "Decl↓Type ident ;");
			Reducciones.Add(4, "Decl↓Type ident ( Formals ) StmtBlock");
			Reducciones.Add(5, "Decl↓void ident ( Formals ) StmtBlock");
			Reducciones.Add(6, "Decl↓static CnsTp ident ;");
			Reducciones.Add(7, "Decl↓class ident Heritage HeritageI {​​​​ FieldP }​​​​");
			Reducciones.Add(8, "Decl↓interface ident {​​​​ Proto }​​​​");
			Reducciones.Add(9, "Type↓CnsTp");
			Reducciones.Add(10, "Type↓ident");
			Reducciones.Add(11, "Type↓Type []");
			Reducciones.Add(12, "Formals↓Type ident , Formals");
			Reducciones.Add(13, "Formals↓Type ident");
			Reducciones.Add(14, "StmtBlock↓{​​​​ SBPV SBPC SBPS }​​​​");
			Reducciones.Add(15, "CnsTp↓int");
			Reducciones.Add(16, "CnsTp↓double");
			Reducciones.Add(17, "CnsTp↓boolean");
			Reducciones.Add(18, "CnsTp↓string");
			Reducciones.Add(19, "Heritage↓extends ident");
			Reducciones.Add(20, "Heritage↓''");
			Reducciones.Add(21, "HeritageI↓implements ident HeritageD");
			Reducciones.Add(22, "HeritageI↓''");
			Reducciones.Add(23, "HeritageD↓, ident HeritageD");
			Reducciones.Add(24, "HeritageD↓''");
			Reducciones.Add(25, "FieldP↓Field FieldP");
			Reducciones.Add(26, "FieldP↓''");
			Reducciones.Add(27, "Field↓Type ident ;");
			Reducciones.Add(28, "Field↓FRoot ident ( Formals ) StmtBlock");
			Reducciones.Add(29, "Field↓static CnsTp ident ;");
			Reducciones.Add(30, "Proto↓Prototype Proto");
			Reducciones.Add(31, "Proto↓''");
			Reducciones.Add(32, "Prototype↓FRoot ident ( Formals ) ;");
			Reducciones.Add(33, "SBPV↓Type ident ; SBPV");
			Reducciones.Add(34, "SBPV↓''");
			Reducciones.Add(35, "SBPC↓static CnsTp ident ; SBPC");
			Reducciones.Add(36, "SBPC↓''");
			Reducciones.Add(37, "SBPS↓Stmt SBPS");
			Reducciones.Add(38, "SBPS↓''");
			Reducciones.Add(39, "Stmt↓Expr ;");
			Reducciones.Add(40, "Stmt↓;");
			Reducciones.Add(41, "Stmt↓if ( Expr ) Stmt ElseStmt");
			Reducciones.Add(42, "Stmt↓while ( Expr ) Stmt");
			Reducciones.Add(43, "Stmt↓for ( Expr ; Expr ; Expr ) Stmt");
			Reducciones.Add(44, "Stmt↓break ;");
			Reducciones.Add(45, "Stmt↓return Expr ;");
			Reducciones.Add(46, "Stmt↓System . out . println ( Expr ExPrint ) ;");
			Reducciones.Add(47, "Stmt↓StmtBlock");
			Reducciones.Add(48, "ElseStmt↓else Stmt");
			Reducciones.Add(49, "ElseStmt↓''");
			Reducciones.Add(50, "ExPrint↓, Expr ExPrint");
			Reducciones.Add(51, "ExPrint↓''");
			Reducciones.Add(52, "Expr↓Expr - Expr");
			Reducciones.Add(53, "Expr↓Expr / Expr");
			Reducciones.Add(54, "Expr↓Expr % Expr");
			Reducciones.Add(55, "Expr↓- Expr");
			Reducciones.Add(56, "Expr↓Expr > Expr");
			Reducciones.Add(57, "Expr↓Expr >= Expr");
			Reducciones.Add(58, "Expr↓Expr != Expr");
			Reducciones.Add(59, "Expr↓Expr || Expr");
			Reducciones.Add(60, "Expr↓! Expr");
			Reducciones.Add(61, "Expr↓New ( ident )");
			Reducciones.Add(62, "Expr↓LValue");
			Reducciones.Add(63, "Expr↓LValue = Expr");
			Reducciones.Add(64, "Expr↓Constant");
			Reducciones.Add(65, "Expr↓this");
			Reducciones.Add(66, "Expr↓( Expr )");
			Reducciones.Add(67, "LValue↓Expr . ident");
			Reducciones.Add(68, "LValue↓ident");
			Reducciones.Add(69, "Constant↓intConstant");
			Reducciones.Add(70, "Constant↓doubleConstant");
			Reducciones.Add(71, "Constant↓boolConstant");
			Reducciones.Add(72, "Constant↓stringConstant");
			Reducciones.Add(73, "Constant↓null");
		}
		bool IrA(int numEstado, string _lookahead)
		{
			switch (numEstado)
			{
				case 0:
					//IrA Estado 0
					return Estado0(_lookahead);
				case 1:
					//IrA Estado 1
					return Estado1(_lookahead);
				case 2:
					//IrA Estado 2
					return Estado2(_lookahead);
				case 3:
					//IrA Estado 3
					return Estado3(_lookahead);
				case 4:
					//IrA Estado 4
					return Estado4(_lookahead);
				case 5:
					//IrA Estado 5
					return Estado5(_lookahead);
				case 6:
					//IrA Estado 6
					return Estado6(_lookahead);
				case 7:
					//IrA Estado 7
					return Estado7(_lookahead);
				case 8:
					//IrA Estado 8
					return Estado8(_lookahead);
				case 9:
					//IrA Estado 9
					return Estado9(_lookahead);
				case 10:
					//IrA Estado 10
					return Estado10(_lookahead);
				case 11:
					//IrA Estado 11
					return Estado11(_lookahead);
				case 12:
					//IrA Estado 12
					return Estado12(_lookahead);
				case 13:
					//IrA Estado 13
					return Estado13(_lookahead);
				case 14:
					//IrA Estado 14
					return Estado14(_lookahead);
				case 15:
					//IrA Estado 15
					return Estado15(_lookahead);
				case 16:
					//IrA Estado 16
					return Estado16(_lookahead);
				case 17:
					//IrA Estado 17
					return Estado17(_lookahead);
				case 18:
					//IrA Estado 18
					return Estado18(_lookahead);
				case 19:
					//IrA Estado 19
					return Estado19(_lookahead);
				case 20:
					//IrA Estado 20
					return Estado20(_lookahead);
				case 21:
					//IrA Estado 21
					return Estado21(_lookahead);
				case 22:
					//IrA Estado 22
					return Estado22(_lookahead);
				case 23:
					//IrA Estado 23
					return Estado23(_lookahead);
				case 24:
					//IrA Estado 24
					return Estado24(_lookahead);
				case 25:
					//IrA Estado 25
					return Estado25(_lookahead);
				case 26:
					//IrA Estado 26
					return Estado26(_lookahead);
				case 27:
					//IrA Estado 27
					return Estado27(_lookahead);
				case 28:
					//IrA Estado 28
					return Estado28(_lookahead);
				case 29:
					//IrA Estado 29
					return Estado29(_lookahead);
				case 30:
					//IrA Estado 30
					return Estado30(_lookahead);
				case 31:
					//IrA Estado 31
					return Estado31(_lookahead);
				case 32:
					//IrA Estado 32
					return Estado32(_lookahead);
				case 33:
					//IrA Estado 33
					return Estado33(_lookahead);
				case 34:
					//IrA Estado 34
					return Estado34(_lookahead);
				case 35:
					//IrA Estado 35
					return Estado35(_lookahead);
				case 36:
					//IrA Estado 36
					return Estado36(_lookahead);
				case 37:
					//IrA Estado 37
					return Estado37(_lookahead);
				case 38:
					//IrA Estado 38
					return Estado38(_lookahead);
				case 39:
					//IrA Estado 39
					return Estado39(_lookahead);
				case 40:
					//IrA Estado 40
					return Estado40(_lookahead);
				case 41:
					//IrA Estado 41
					return Estado41(_lookahead);
				case 42:
					//IrA Estado 42
					return Estado42(_lookahead);
				case 43:
					//IrA Estado 43
					return Estado43(_lookahead);
				case 44:
					//IrA Estado 44
					return Estado44(_lookahead);
				case 45:
					//IrA Estado 45
					return Estado45(_lookahead);
				case 46:
					//IrA Estado 46
					return Estado46(_lookahead);
				case 47:
					//IrA Estado 47
					return Estado47(_lookahead);
				case 48:
					//IrA Estado 48
					return Estado48(_lookahead);
				case 49:
					//IrA Estado 49
					return Estado49(_lookahead);
				case 50:
					//IrA Estado 50
					return Estado50(_lookahead);
				case 51:
					//IrA Estado 51
					return Estado51(_lookahead);
				case 52:
					//IrA Estado 52
					return Estado52(_lookahead);
				case 53:
					//IrA Estado 53
					return Estado53(_lookahead);
				case 54:
					//IrA Estado 54
					return Estado54(_lookahead);
				case 55:
					//IrA Estado 55
					return Estado55(_lookahead);
				case 56:
					//IrA Estado 56
					return Estado56(_lookahead);
				case 57:
					//IrA Estado 57
					return Estado57(_lookahead);
				case 58:
					//IrA Estado 58
					return Estado58(_lookahead);
				case 59:
					//IrA Estado 59
					return Estado59(_lookahead);
				case 60:
					//IrA Estado 60
					return Estado60(_lookahead);
				case 61:
					//IrA Estado 61
					return Estado61(_lookahead);
				case 62:
					//IrA Estado 62
					return Estado62(_lookahead);
				case 63:
					//IrA Estado 63
					return Estado63(_lookahead);
				case 64:
					//IrA Estado 64
					return Estado64(_lookahead);
				case 65:
					//IrA Estado 65
					return Estado65(_lookahead);
				case 66:
					//IrA Estado 66
					return Estado66(_lookahead);
				case 67:
					//IrA Estado 67
					return Estado67(_lookahead);
				case 68:
					//IrA Estado 68
					return Estado68(_lookahead);
				case 69:
					//IrA Estado 69
					return Estado69(_lookahead);
				case 70:
					//IrA Estado 70
					return Estado70(_lookahead);
				case 71:
					//IrA Estado 71
					return Estado71(_lookahead);
				case 72:
					//IrA Estado 72
					return Estado72(_lookahead);
				case 73:
					//IrA Estado 73
					return Estado73(_lookahead);
				case 74:
					//IrA Estado 74
					return Estado74(_lookahead);
				case 75:
					//IrA Estado 75
					return Estado75(_lookahead);
				case 76:
					//IrA Estado 76
					return Estado76(_lookahead);
				case 77:
					//IrA Estado 77
					return Estado77(_lookahead);
				case 78:
					//IrA Estado 78
					return Estado78(_lookahead);
				case 79:
					//IrA Estado 79
					return Estado79(_lookahead);
				case 80:
					//IrA Estado 80
					return Estado80(_lookahead);
				case 81:
					//IrA Estado 81
					return Estado81(_lookahead);
				case 82:
					//IrA Estado 82
					return Estado82(_lookahead);
				case 83:
					//IrA Estado 83
					return Estado83(_lookahead);
				case 84:
					//IrA Estado 84
					return Estado84(_lookahead);
				case 85:
					//IrA Estado 85
					return Estado85(_lookahead);
				case 86:
					//IrA Estado 86
					return Estado86(_lookahead);
				case 87:
					//IrA Estado 87
					return Estado87(_lookahead);
				case 88:
					//IrA Estado 88
					return Estado88(_lookahead);
				case 89:
					//IrA Estado 89
					return Estado89(_lookahead);
				case 90:
					//IrA Estado 90
					return Estado90(_lookahead);
				case 91:
					//IrA Estado 91
					return Estado91(_lookahead);
				case 92:
					//IrA Estado 92
					return Estado92(_lookahead);
				case 93:
					//IrA Estado 93
					return Estado93(_lookahead);
				case 94:
					//IrA Estado 94
					return Estado94(_lookahead);
				case 95:
					//IrA Estado 95
					return Estado95(_lookahead);
				case 96:
					//IrA Estado 96
					return Estado96(_lookahead);
				case 97:
					//IrA Estado 97
					return Estado97(_lookahead);
				case 98:
					//IrA Estado 98
					return Estado98(_lookahead);
				case 99:
					//IrA Estado 99
					return Estado99(_lookahead);
				case 100:
					//IrA Estado 100
					return Estado100(_lookahead);
				case 101:
					//IrA Estado 101
					return Estado101(_lookahead);
				case 102:
					//IrA Estado 102
					return Estado102(_lookahead);
				case 103:
					//IrA Estado 103
					return Estado103(_lookahead);
				case 104:
					//IrA Estado 104
					return Estado104(_lookahead);
				case 105:
					//IrA Estado 105
					return Estado105(_lookahead);
				case 106:
					//IrA Estado 106
					return Estado106(_lookahead);
				case 107:
					//IrA Estado 107
					return Estado107(_lookahead);
				case 108:
					//IrA Estado 108
					return Estado108(_lookahead);
				case 109:
					//IrA Estado 109
					return Estado109(_lookahead);
				case 110:
					//IrA Estado 110
					return Estado110(_lookahead);
				case 111:
					//IrA Estado 111
					return Estado111(_lookahead);
				case 112:
					//IrA Estado 112
					return Estado112(_lookahead);
				case 113:
					//IrA Estado 113
					return Estado113(_lookahead);
				case 114:
					//IrA Estado 114
					return Estado114(_lookahead);
				case 115:
					//IrA Estado 115
					return Estado115(_lookahead);
				case 116:
					//IrA Estado 116
					return Estado116(_lookahead);
				case 117:
					//IrA Estado 117
					return Estado117(_lookahead);
				case 118:
					//IrA Estado 118
					return Estado118(_lookahead);
				case 119:
					//IrA Estado 119
					return Estado119(_lookahead);
				case 120:
					//IrA Estado 120
					return Estado120(_lookahead);
				case 121:
					//IrA Estado 121
					return Estado121(_lookahead);
				case 122:
					//IrA Estado 122
					return Estado122(_lookahead);
				case 123:
					//IrA Estado 123
					return Estado123(_lookahead);
				case 124:
					//IrA Estado 124
					return Estado124(_lookahead);
				case 125:
					//IrA Estado 125
					return Estado125(_lookahead);
				case 126:
					//IrA Estado 126
					return Estado126(_lookahead);
				case 127:
					//IrA Estado 127
					return Estado127(_lookahead);
				case 128:
					//IrA Estado 128
					return Estado128(_lookahead);
				case 129:
					//IrA Estado 129
					return Estado129(_lookahead);
				case 130:
					//IrA Estado 130
					return Estado130(_lookahead);
				case 131:
					//IrA Estado 131
					return Estado131(_lookahead);
				case 132:
					//IrA Estado 132
					return Estado132(_lookahead);
				case 133:
					//IrA Estado 133
					return Estado133(_lookahead);
				case 134:
					//IrA Estado 134
					return Estado134(_lookahead);
				case 135:
					//IrA Estado 135
					return Estado135(_lookahead);
				case 136:
					//IrA Estado 136
					return Estado136(_lookahead);
				case 137:
					//IrA Estado 137
					return Estado137(_lookahead);
				case 138:
					//IrA Estado 138
					return Estado138(_lookahead);
				case 139:
					//IrA Estado 139
					return Estado139(_lookahead);
				case 140:
					//IrA Estado 140
					return Estado140(_lookahead);
				case 141:
					//IrA Estado 141
					return Estado141(_lookahead);
				case 142:
					//IrA Estado 142
					return Estado142(_lookahead);
				case 143:
					//IrA Estado 143
					return Estado143(_lookahead);
				case 144:
					//IrA Estado 144
					return Estado144(_lookahead);
				case 145:
					//IrA Estado 145
					return Estado145(_lookahead);
				case 146:
					//IrA Estado 146
					return Estado146(_lookahead);
				case 147:
					//IrA Estado 147
					return Estado147(_lookahead);
				case 148:
					//IrA Estado 148
					return Estado148(_lookahead);
				case 149:
					//IrA Estado 149
					return Estado149(_lookahead);
				case 150:
					//IrA Estado 150
					return Estado150(_lookahead);
				case 151:
					//IrA Estado 151
					return Estado151(_lookahead);
				case 152:
					//IrA Estado 152
					return Estado152(_lookahead);
				case 153:
					//IrA Estado 153
					return Estado153(_lookahead);
				case 154:
					//IrA Estado 154
					return Estado154(_lookahead);
				case 155:
					//IrA Estado 155
					return Estado155(_lookahead);
				case 156:
					//IrA Estado 156
					return Estado156(_lookahead);
				case 157:
					//IrA Estado 157
					return Estado157(_lookahead);
				case 158:
					//IrA Estado 158
					return Estado158(_lookahead);
				case 159:
					//IrA Estado 159
					return Estado159(_lookahead);
				case 160:
					//IrA Estado 160
					return Estado160(_lookahead);
				case 161:
					//IrA Estado 161
					return Estado161(_lookahead);
				case 162:
					//IrA Estado 162
					return Estado162(_lookahead);
				case 163:
					//IrA Estado 163
					return Estado163(_lookahead);
				case 164:
					//IrA Estado 164
					return Estado164(_lookahead);
				case 165:
					//IrA Estado 165
					return Estado165(_lookahead);
				case 166:
					//IrA Estado 166
					return Estado166(_lookahead);
				case 167:
					//IrA Estado 167
					return Estado167(_lookahead);
				case 168:
					//IrA Estado 168
					return Estado168(_lookahead);
				case 169:
					//IrA Estado 169
					return Estado169(_lookahead);
				case 170:
					//IrA Estado 170
					return Estado170(_lookahead);

				default:
					return Err();
			}
		}

		#region Estados
		public bool Estado0(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "void":
					//desplazamiento a d4
					//consume void
					StackDeEntrada.Pop();
					StackDeConsumo.Push(4);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado4(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d5
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(5);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado5(StackDeEntrada.Peek());
				case "class":
					//desplazamiento a d6
					//consume class
					StackDeEntrada.Pop();
					StackDeConsumo.Push(6);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado6(StackDeEntrada.Peek());
				case "interface":
					//desplazamiento a d7
					//consume interface
					StackDeEntrada.Pop();
					StackDeConsumo.Push(7);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado7(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Program":
					//irA 1
					StackDeConsumo.Push(1);
					return Estado1(StackDeEntrada.Peek());
				case "Decl":
					//irA 2
					StackDeConsumo.Push(2);
					return Estado2(StackDeEntrada.Peek());
				case "Type":
					//irA 3
					StackDeConsumo.Push(3);
					return Estado3(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado1(string _lookahead)
		{
			switch (_lookahead)
			{
				case "$":
					//irA acc
					//StackDeConsumo.Push(acc);
					return true;
				default:
					Err(); return false;
			}
		}
		public bool Estado2(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "void":
					//desplazamiento a d4
					//consume void
					StackDeEntrada.Pop();
					StackDeConsumo.Push(4);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado4(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d5
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(5);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado5(StackDeEntrada.Peek());
				case "class":
					//desplazamiento a d6
					//consume class
					StackDeEntrada.Pop();
					StackDeConsumo.Push(6);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado6(StackDeEntrada.Peek());
				case "interface":
					//desplazamiento a d7
					//consume interface
					StackDeEntrada.Pop();
					StackDeConsumo.Push(7);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado7(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "$":
					//reduccion a r2
					reduccion = Reducciones[2].Split('↓')[0].Trim();
					reducido = Reducciones[2].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Program":
					//irA 14
					StackDeConsumo.Push(14);
					return Estado14(StackDeEntrada.Peek());
				case "Decl":
					//irA 2
					StackDeConsumo.Push(2);
					return Estado2(StackDeEntrada.Peek());
				case "Type":
					//irA 3
					StackDeConsumo.Push(3);
					return Estado3(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado3(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d15
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(15);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado15(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado4(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d17
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(17);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado17(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado5(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 18
					StackDeConsumo.Push(18);
					return Estado18(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado6(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d19
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(19);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado19(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado7(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d20
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(20);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado20(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado8(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r9
					reduccion = Reducciones[9].Split('↓')[0].Trim();
					reducido = Reducciones[9].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r9
					reduccion = Reducciones[9].Split('↓')[0].Trim();
					reducido = Reducciones[9].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado9(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r10
					reduccion = Reducciones[10].Split('↓')[0].Trim();
					reducido = Reducciones[10].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado10(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r15
					reduccion = Reducciones[15].Split('↓')[0].Trim();
					reducido = Reducciones[15].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r15
					reduccion = Reducciones[15].Split('↓')[0].Trim();
					reducido = Reducciones[15].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado11(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r16
					reduccion = Reducciones[16].Split('↓')[0].Trim();
					reducido = Reducciones[16].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado12(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r17
					reduccion = Reducciones[17].Split('↓')[0].Trim();
					reducido = Reducciones[17].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r17
					reduccion = Reducciones[17].Split('↓')[0].Trim();
					reducido = Reducciones[17].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado13(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r18
					reduccion = Reducciones[18].Split('↓')[0].Trim();
					reducido = Reducciones[18].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r18
					reduccion = Reducciones[18].Split('↓')[0].Trim();
					reducido = Reducciones[18].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado14(string _lookahead)
		{
			switch (_lookahead)
			{
				case "$":
					//reduccion a r1
					reduccion = Reducciones[1].Split('↓')[0].Trim();
					reducido = Reducciones[1].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado15(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d21
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(21);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado21(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d22
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(22);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado22(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado16(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r11
					reduccion = Reducciones[11].Split('↓')[0].Trim();
					reducido = Reducciones[11].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "[]":
					//reduccion a r11
					reduccion = Reducciones[11].Split('↓')[0].Trim();
					reducido = Reducciones[11].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado17(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d23
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(23);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado23(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado18(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d24
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(24);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado24(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado19(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "extends":
					//desplazamiento a d26
					//consume extends
					StackDeEntrada.Pop();
					StackDeConsumo.Push(26);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado26(StackDeEntrada.Peek());
				case "implements":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r20
					reduccion = Reducciones[20].Split('↓')[0].Trim();
					reducido = Reducciones[20].Split('↓')[1].Trim();
					//reduccion LAMBDA a r20
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Heritage":
					//irA 25
					StackDeConsumo.Push(25);
					return Estado25(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado20(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d27
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(27);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado27(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado21(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "void":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "static":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "class":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "interface":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "int":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "double":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "boolean":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "string":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "$":
					//reduccion a r3
					reduccion = Reducciones[3].Split('↓')[0].Trim();
					reducido = Reducciones[3].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				default:
					Err(); return false;
			}
		}
		public bool Estado22(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 28
					StackDeConsumo.Push(28);
					return Estado28(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado23(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 30
					StackDeConsumo.Push(30);
					return Estado30(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado24(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d31
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(31);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado31(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado25(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r22
					reduccion = Reducciones[22].Split('↓')[0].Trim();
					reducido = Reducciones[22].Split('↓')[1].Trim();
					//reduccion LAMBDA a r22
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "implements":
					//desplazamiento a d33
					//consume implements
					StackDeEntrada.Pop();
					StackDeConsumo.Push(33);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado33(StackDeEntrada.Peek());
				case "HeritageI":
					//irA 32
					StackDeConsumo.Push(32);
					return Estado32(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado26(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d34
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(34);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado34(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado27(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "}":
					//reduccion a r31
					reduccion = Reducciones[31].Split('↓')[0].Trim();
					reducido = Reducciones[31].Split('↓')[1].Trim();
					//reduccion LAMBDA a r31
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 37
					StackDeConsumo.Push(37);
					return Estado37(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "Proto":
					//irA 35
					StackDeConsumo.Push(35);
					return Estado35(StackDeEntrada.Peek());
				case "Prototype":
					//irA 36
					StackDeConsumo.Push(36);
					return Estado36(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado28(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d38
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(38);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado38(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado29(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d39
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(39);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado39(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado30(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d40
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(40);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado40(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado31(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "void":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "static":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "class":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "interface":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "int":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "double":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "boolean":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "string":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "$":
					//reduccion a r6
					reduccion = Reducciones[6].Split('↓')[0].Trim();
					reducido = Reducciones[6].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				default:
					Err(); return false;
			}
		}
		public bool Estado32(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d41
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(41);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado41(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado33(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d42
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(42);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado42(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado34(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "implements":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r19
					reduccion = Reducciones[19].Split('↓')[0].Trim();
					reducido = Reducciones[19].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado35(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamiento a d43
					//consume }
					StackDeEntrada.Pop();
					StackDeConsumo.Push(43);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado43(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado36(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "}":
					//reduccion a r31
					reduccion = Reducciones[31].Split('↓')[0].Trim();
					reducido = Reducciones[31].Split('↓')[1].Trim();
					//reduccion LAMBDA a r31
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 37
					StackDeConsumo.Push(37);
					return Estado37(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "Proto":
					//irA 44
					StackDeConsumo.Push(44);
					return Estado44(StackDeEntrada.Peek());
				case "Prototype":
					//irA 36
					StackDeConsumo.Push(36);
					return Estado36(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado37(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d45
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(45);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado45(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado38(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 46
					StackDeConsumo.Push(46);
					return Estado46(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado39(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r13
					reduccion = Reducciones[13].Split('↓')[0].Trim();
					reducido = Reducciones[13].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d48
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(48);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado48(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado40(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 49
					StackDeConsumo.Push(49);
					return Estado49(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado41(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d53
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(53);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado53(StackDeEntrada.Peek());
				case "}":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 52
					StackDeConsumo.Push(52);
					return Estado52(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "FieldP":
					//irA 50
					StackDeConsumo.Push(50);
					return Estado50(StackDeEntrada.Peek());
				case "Field":
					//irA 51
					StackDeConsumo.Push(51);
					return Estado51(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado42(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r24
					reduccion = Reducciones[24].Split('↓')[0].Trim();
					reducido = Reducciones[24].Split('↓')[1].Trim();
					//reduccion LAMBDA a r24
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d55
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(55);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado55(StackDeEntrada.Peek());
				case "HeritageD":
					//irA 54
					StackDeConsumo.Push(54);
					return Estado54(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado43(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "void":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "static":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "class":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "interface":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "int":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "double":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "boolean":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "string":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "$":
					//reduccion a r8
					reduccion = Reducciones[8].Split('↓')[0].Trim();
					reducido = Reducciones[8].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				default:
					Err(); return false;
			}
		}
		public bool Estado44(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r30
					reduccion = Reducciones[30].Split('↓')[0].Trim();
					reducido = Reducciones[30].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado45(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d56
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(56);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado56(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado46(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "void":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "static":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "class":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "interface":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "int":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "double":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "boolean":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "string":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "$":
					//reduccion a r4
					reduccion = Reducciones[4].Split('↓')[0].Trim();
					reducido = Reducciones[4].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				default:
					Err(); return false;
			}
		}
		public bool Estado47(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					// CONFLICTO a d9 / r34
					//dConflicto desplazamiento  a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case ";":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					// CONFLICTO a d10 / r34
					//dConflicto desplazamiento  a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					// CONFLICTO a d11 / r34
					//dConflicto desplazamiento  a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					// CONFLICTO a d12 / r34
					//dConflicto desplazamiento  a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					// CONFLICTO a d13 / r34
					//dConflicto desplazamiento  a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "if":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Type":
					//irA 58
					StackDeConsumo.Push(58);
					return Estado58(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "SBPV":
					//irA 57
					StackDeConsumo.Push(57);
					return Estado57(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado48(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 59
					StackDeConsumo.Push(59);
					return Estado59(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado49(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "void":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "static":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "class":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "interface":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "int":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "double":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "boolean":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "string":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "$":
					//reduccion a r5
					reduccion = Reducciones[5].Split('↓')[0].Trim();
					reducido = Reducciones[5].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				default:
					Err(); return false;
			}
		}
		public bool Estado50(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamiento a d60
					//consume }
					StackDeEntrada.Pop();
					StackDeConsumo.Push(60);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado60(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado51(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "static":
					//desplazamiento a d53
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(53);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado53(StackDeEntrada.Peek());
				case "}":
					//reduccion a r26
					reduccion = Reducciones[26].Split('↓')[0].Trim();
					reducido = Reducciones[26].Split('↓')[1].Trim();
					//reduccion LAMBDA a r26
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 52
					StackDeConsumo.Push(52);
					return Estado52(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "FieldP":
					//irA 61
					StackDeConsumo.Push(61);
					return Estado61(StackDeEntrada.Peek());
				case "Field":
					//irA 51
					StackDeConsumo.Push(51);
					return Estado51(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado52(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d62
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(62);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado62(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado53(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 63
					StackDeConsumo.Push(63);
					return Estado63(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado54(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r21
					reduccion = Reducciones[21].Split('↓')[0].Trim();
					reducido = Reducciones[21].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado55(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d64
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(64);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado64(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado56(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 65
					StackDeConsumo.Push(65);
					return Estado65(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado57(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					// CONFLICTO a d67 / r36
					//dConflicto desplazamiento  a d67
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado67(StackDeEntrada.Peek());
				case "class":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "SBPC":
					//irA 66
					StackDeConsumo.Push(66);
					return Estado66(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado58(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d68
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(68);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado68(StackDeEntrada.Peek());
				case "[]":
					//desplazamiento a d16
					//consume []
					StackDeEntrada.Pop();
					StackDeConsumo.Push(16);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado16(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado59(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r12
					reduccion = Reducciones[12].Split('↓')[0].Trim();
					reducido = Reducciones[12].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado60(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "void":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "static":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "class":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "interface":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "int":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "double":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "boolean":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "string":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				case "$":
					//reduccion a r7
					reduccion = Reducciones[7].Split('↓')[0].Trim();
					reducido = Reducciones[7].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return true;
				default:
					Err(); return false;
			}
		}
		public bool Estado61(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r25
					reduccion = Reducciones[25].Split('↓')[0].Trim();
					reducido = Reducciones[25].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado62(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d69
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(69);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado69(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d70
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(70);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado70(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado63(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d71
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(71);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado71(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado64(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r24
					reduccion = Reducciones[24].Split('↓')[0].Trim();
					reducido = Reducciones[24].Split('↓')[1].Trim();
					//reduccion LAMBDA a r24
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d55
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(55);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado55(StackDeEntrada.Peek());
				case "HeritageD":
					//irA 72
					StackDeConsumo.Push(72);
					return Estado72(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado65(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d73
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(73);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado73(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado66(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "}":
					//reduccion a r38
					reduccion = Reducciones[38].Split('↓')[0].Trim();
					reducido = Reducciones[38].Split('↓')[1].Trim();
					//reduccion LAMBDA a r38
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "SBPS":
					//irA 74
					StackDeConsumo.Push(74);
					return Estado74(StackDeEntrada.Peek());
				case "Stmt":
					//irA 75
					StackDeConsumo.Push(75);
					return Estado75(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado67(string _lookahead)
		{
			switch (_lookahead)
			{
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 98
					StackDeConsumo.Push(98);
					return Estado98(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado68(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d99
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(99);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado99(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado69(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r27
					reduccion = Reducciones[27].Split('↓')[0].Trim();
					reducido = Reducciones[27].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado70(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case "int":
					//desplazamiento a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					//desplazamiento a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					//desplazamiento a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					//desplazamiento a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "Type":
					//irA 29
					StackDeConsumo.Push(29);
					return Estado29(StackDeEntrada.Peek());
				case "Formals":
					//irA 100
					StackDeConsumo.Push(100);
					return Estado100(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado71(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d101
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(101);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado101(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado72(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//reduccion a r23
					reduccion = Reducciones[23].Split('↓')[0].Trim();
					reducido = Reducciones[23].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado73(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d102
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(102);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado102(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado74(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//desplazamiento a d103
					//consume }
					StackDeEntrada.Pop();
					StackDeConsumo.Push(103);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado103(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado75(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "}":
					//reduccion a r38
					reduccion = Reducciones[38].Split('↓')[0].Trim();
					reducido = Reducciones[38].Split('↓')[1].Trim();
					//reduccion LAMBDA a r38
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "SBPS":
					//irA 104
					StackDeConsumo.Push(104);
					return Estado104(StackDeEntrada.Peek());
				case "Stmt":
					//irA 75
					StackDeConsumo.Push(75);
					return Estado75(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado76(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d105
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(105);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado105(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado77(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r40
					reduccion = Reducciones[40].Split('↓')[0].Trim();
					reducido = Reducciones[40].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado78(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d114
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(114);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado114(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado79(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d115
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(115);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado115(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado80(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d116
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(116);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado116(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado81(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d117
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(117);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado117(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado82(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 118
					StackDeConsumo.Push(118);
					return Estado118(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado83(string _lookahead)
		{
			switch (_lookahead)
			{
				case ".":
					//desplazamiento a d119
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(119);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado119(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado84(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r47
					reduccion = Reducciones[47].Split('↓')[0].Trim();
					reducido = Reducciones[47].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado85(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 120
					StackDeConsumo.Push(120);
					return Estado120(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado86(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 121
					StackDeConsumo.Push(121);
					return Estado121(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado87(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d122
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(122);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado122(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado88(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "=":
					//desplazamiento a d123
					//consume =
					StackDeEntrada.Pop();
					StackDeConsumo.Push(123);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado123(StackDeEntrada.Peek());
				case "this":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r62
					reduccion = Reducciones[62].Split('↓')[0].Trim();
					reducido = Reducciones[62].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado89(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r64
					reduccion = Reducciones[64].Split('↓')[0].Trim();
					reducido = Reducciones[64].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado90(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r65
					reduccion = Reducciones[65].Split('↓')[0].Trim();
					reducido = Reducciones[65].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado91(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 124
					StackDeConsumo.Push(124);
					return Estado124(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado92(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "=":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r68
					reduccion = Reducciones[68].Split('↓')[0].Trim();
					reducido = Reducciones[68].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado93(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r69
					reduccion = Reducciones[69].Split('↓')[0].Trim();
					reducido = Reducciones[69].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado94(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r70
					reduccion = Reducciones[70].Split('↓')[0].Trim();
					reducido = Reducciones[70].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado95(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r71
					reduccion = Reducciones[71].Split('↓')[0].Trim();
					reducido = Reducciones[71].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado96(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r72
					reduccion = Reducciones[72].Split('↓')[0].Trim();
					reducido = Reducciones[72].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado97(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r73
					reduccion = Reducciones[73].Split('↓')[0].Trim();
					reducido = Reducciones[73].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado98(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d125
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(125);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado125(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado99(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					// CONFLICTO a d9 / r34
					//dConflicto desplazamiento  a d9
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(9);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado9(StackDeEntrada.Peek());
				case ";":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					// CONFLICTO a d10 / r34
					//dConflicto desplazamiento  a d10
					//consume int
					StackDeEntrada.Pop();
					StackDeConsumo.Push(10);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado10(StackDeEntrada.Peek());
				case "double":
					// CONFLICTO a d11 / r34
					//dConflicto desplazamiento  a d11
					//consume double
					StackDeEntrada.Pop();
					StackDeConsumo.Push(11);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado11(StackDeEntrada.Peek());
				case "boolean":
					// CONFLICTO a d12 / r34
					//dConflicto desplazamiento  a d12
					//consume boolean
					StackDeEntrada.Pop();
					StackDeConsumo.Push(12);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado12(StackDeEntrada.Peek());
				case "string":
					// CONFLICTO a d13 / r34
					//dConflicto desplazamiento  a d13
					//consume string
					StackDeEntrada.Pop();
					StackDeConsumo.Push(13);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado13(StackDeEntrada.Peek());
				case "if":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r34
					reduccion = Reducciones[34].Split('↓')[0].Trim();
					reducido = Reducciones[34].Split('↓')[1].Trim();
					//reduccion LAMBDA a r34
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "Type":
					//irA 58
					StackDeConsumo.Push(58);
					return Estado58(StackDeEntrada.Peek());
				case "CnsTp":
					//irA 8
					StackDeConsumo.Push(8);
					return Estado8(StackDeEntrada.Peek());
				case "SBPV":
					//irA 126
					StackDeConsumo.Push(126);
					return Estado126(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado100(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d127
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(127);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado127(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado101(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r29
					reduccion = Reducciones[29].Split('↓')[0].Trim();
					reducido = Reducciones[29].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado102(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r32
					reduccion = Reducciones[32].Split('↓')[0].Trim();
					reducido = Reducciones[32].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado103(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r14
					reduccion = Reducciones[14].Split('↓')[0].Trim();
					reducido = Reducciones[14].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado104(string _lookahead)
		{
			switch (_lookahead)
			{
				case "}":
					//reduccion a r37
					reduccion = Reducciones[37].Split('↓')[0].Trim();
					reducido = Reducciones[37].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado105(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r39
					reduccion = Reducciones[39].Split('↓')[0].Trim();
					reducido = Reducciones[39].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado106(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 128
					StackDeConsumo.Push(128);
					return Estado128(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado107(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 129
					StackDeConsumo.Push(129);
					return Estado129(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado108(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 130
					StackDeConsumo.Push(130);
					return Estado130(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado109(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 131
					StackDeConsumo.Push(131);
					return Estado131(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado110(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 132
					StackDeConsumo.Push(132);
					return Estado132(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado111(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 133
					StackDeConsumo.Push(133);
					return Estado133(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado112(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 134
					StackDeConsumo.Push(134);
					return Estado134(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado113(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d135
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(135);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado135(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado114(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 136
					StackDeConsumo.Push(136);
					return Estado136(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado115(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 137
					StackDeConsumo.Push(137);
					return Estado137(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado116(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 138
					StackDeConsumo.Push(138);
					return Estado138(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado117(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r44
					reduccion = Reducciones[44].Split('↓')[0].Trim();
					reducido = Reducciones[44].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado118(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d139
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(139);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado139(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado119(string _lookahead)
		{
			switch (_lookahead)
			{
				case "out":
					//desplazamiento a d140
					//consume out
					StackDeEntrada.Pop();
					StackDeConsumo.Push(140);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado140(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado120(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r55
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r55
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r55
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r55
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r55
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r55
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r55
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r55
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r55
					reduccion = Reducciones[55].Split('↓')[0].Trim();
					reducido = Reducciones[55].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado121(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r60
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r60
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r60
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r60
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r60
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r60
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r60
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r60
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r60
					reduccion = Reducciones[60].Split('↓')[0].Trim();
					reducido = Reducciones[60].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado122(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d141
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(141);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado141(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado123(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 142
					StackDeConsumo.Push(142);
					return Estado142(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado124(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d143
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(143);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado143(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado125(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d144
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(144);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado144(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado126(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r33
					reduccion = Reducciones[33].Split('↓')[0].Trim();
					reducido = Reducciones[33].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado127(string _lookahead)
		{
			switch (_lookahead)
			{
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 145
					StackDeConsumo.Push(145);
					return Estado145(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado128(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r52
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r52
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r52
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r52
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r52
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r52
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r52
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r52
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r52
					reduccion = Reducciones[52].Split('↓')[0].Trim();
					reducido = Reducciones[52].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado129(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r53
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r53
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r53
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r53
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r53
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r53
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r53
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r53
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r53
					reduccion = Reducciones[53].Split('↓')[0].Trim();
					reducido = Reducciones[53].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado130(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r54
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r54
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r54
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r54
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r54
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r54
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r54
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r54
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r54
					reduccion = Reducciones[54].Split('↓')[0].Trim();
					reducido = Reducciones[54].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado131(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r56
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r56
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r56
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r56
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r56
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r56
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r56
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r56
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r56
					reduccion = Reducciones[56].Split('↓')[0].Trim();
					reducido = Reducciones[56].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado132(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r57
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r57
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r57
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r57
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r57
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r57
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r57
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r57
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r57
					reduccion = Reducciones[57].Split('↓')[0].Trim();
					reducido = Reducciones[57].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado133(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r58
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r58
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r58
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r58
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r58
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r58
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r58
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r58
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r58
					reduccion = Reducciones[58].Split('↓')[0].Trim();
					reducido = Reducciones[58].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado134(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r59
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r59
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r59
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r59
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r59
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r59
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r59
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r59
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r59
					reduccion = Reducciones[59].Split('↓')[0].Trim();
					reducido = Reducciones[59].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado135(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "=":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r67
					reduccion = Reducciones[67].Split('↓')[0].Trim();
					reducido = Reducciones[67].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado136(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d146
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(146);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado146(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado137(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d147
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(147);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado147(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado138(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d148
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(148);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado148(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado139(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r45
					reduccion = Reducciones[45].Split('↓')[0].Trim();
					reducido = Reducciones[45].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado140(string _lookahead)
		{
			switch (_lookahead)
			{
				case ".":
					//desplazamiento a d149
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(149);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado149(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado141(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d150
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(150);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado150(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado142(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					// CONFLICTO a d113 / r63
					//dConflicto desplazamiento  a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "else":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					// CONFLICTO a d106 / r63
					//dConflicto desplazamiento  a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					// CONFLICTO a d107 / r63
					//dConflicto desplazamiento  a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					// CONFLICTO a d108 / r63
					//dConflicto desplazamiento  a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					// CONFLICTO a d109 / r63
					//dConflicto desplazamiento  a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					// CONFLICTO a d110 / r63
					//dConflicto desplazamiento  a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					// CONFLICTO a d111 / r63
					//dConflicto desplazamiento  a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					// CONFLICTO a d112 / r63
					//dConflicto desplazamiento  a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "!":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r63
					reduccion = Reducciones[63].Split('↓')[0].Trim();
					reducido = Reducciones[63].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado143(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r66
					reduccion = Reducciones[66].Split('↓')[0].Trim();
					reducido = Reducciones[66].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado144(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					// CONFLICTO a d67 / r36
					//dConflicto desplazamiento  a d67
					//consume static
					StackDeEntrada.Pop();
					StackDeConsumo.Push(67);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado67(StackDeEntrada.Peek());
				case "class":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r36
					reduccion = Reducciones[36].Split('↓')[0].Trim();
					reducido = Reducciones[36].Split('↓')[1].Trim();
					//reduccion LAMBDA a r36
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "SBPC":
					//irA 151
					StackDeConsumo.Push(151);
					return Estado151(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado145(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r28
					reduccion = Reducciones[28].Split('↓')[0].Trim();
					reducido = Reducciones[28].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado146(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 152
					StackDeConsumo.Push(152);
					return Estado152(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado147(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 153
					StackDeConsumo.Push(153);
					return Estado153(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado148(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 154
					StackDeConsumo.Push(154);
					return Estado154(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado149(string _lookahead)
		{
			switch (_lookahead)
			{
				case "println":
					//desplazamiento a d155
					//consume println
					StackDeEntrada.Pop();
					StackDeConsumo.Push(155);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado155(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado150(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ")":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ".":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "/":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "%":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ">=":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!=":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "||":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r61
					reduccion = Reducciones[61].Split('↓')[0].Trim();
					reducido = Reducciones[61].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado151(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "void":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "static":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "class":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "interface":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "int":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "double":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolean":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "string":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "$":
					//reduccion a r35
					reduccion = Reducciones[35].Split('↓')[0].Trim();
					reducido = Reducciones[35].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado152(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					// CONFLICTO a d157 / r49
					//dConflicto desplazamiento  a d157
					//consume else
					StackDeEntrada.Pop();
					StackDeConsumo.Push(157);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado157(StackDeEntrada.Peek());
				case "-":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r49
					reduccion = Reducciones[49].Split('↓')[0].Trim();
					reducido = Reducciones[49].Split('↓')[1].Trim();
					//reduccion LAMBDA a r49
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "ElseStmt":
					//irA 156
					StackDeConsumo.Push(156);
					return Estado156(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado153(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r42
					reduccion = Reducciones[42].Split('↓')[0].Trim();
					reducido = Reducciones[42].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado154(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d158
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(158);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado158(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado155(string _lookahead)
		{
			switch (_lookahead)
			{
				case "(":
					//desplazamiento a d159
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(159);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado159(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado156(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r41
					reduccion = Reducciones[41].Split('↓')[0].Trim();
					reducido = Reducciones[41].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado157(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 160
					StackDeConsumo.Push(160);
					return Estado160(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado158(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 161
					StackDeConsumo.Push(161);
					return Estado161(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado159(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 162
					StackDeConsumo.Push(162);
					return Estado162(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado160(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r48
					reduccion = Reducciones[48].Split('↓')[0].Trim();
					reducido = Reducciones[48].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado161(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d163
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(163);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado163(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado162(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d165
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(165);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado165(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "ExPrint":
					//irA 164
					StackDeConsumo.Push(164);
					return Estado164(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado163(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case ";":
					//desplazamiento a d77
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(77);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado77(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "{":
					//desplazamiento a d47
					//consume {
					StackDeEntrada.Pop();
					StackDeConsumo.Push(47);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado47(StackDeEntrada.Peek());
				case "if":
					//desplazamiento a d78
					//consume if
					StackDeEntrada.Pop();
					StackDeConsumo.Push(78);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado78(StackDeEntrada.Peek());
				case "while":
					//desplazamiento a d79
					//consume while
					StackDeEntrada.Pop();
					StackDeConsumo.Push(79);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado79(StackDeEntrada.Peek());
				case "for":
					//desplazamiento a d80
					//consume for
					StackDeEntrada.Pop();
					StackDeConsumo.Push(80);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado80(StackDeEntrada.Peek());
				case "break":
					//desplazamiento a d81
					//consume break
					StackDeEntrada.Pop();
					StackDeConsumo.Push(81);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado81(StackDeEntrada.Peek());
				case "return":
					//desplazamiento a d82
					//consume return
					StackDeEntrada.Pop();
					StackDeConsumo.Push(82);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado82(StackDeEntrada.Peek());
				case "System":
					//desplazamiento a d83
					//consume System
					StackDeEntrada.Pop();
					StackDeConsumo.Push(83);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado83(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "StmtBlock":
					//irA 84
					StackDeConsumo.Push(84);
					return Estado84(StackDeEntrada.Peek());
				case "Stmt":
					//irA 166
					StackDeConsumo.Push(166);
					return Estado166(StackDeEntrada.Peek());
				case "Expr":
					//irA 76
					StackDeConsumo.Push(76);
					return Estado76(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado164(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//desplazamiento a d167
					//consume )
					StackDeEntrada.Pop();
					StackDeConsumo.Push(167);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado167(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado165(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//desplazamiento a d92
					//consume ident
					StackDeEntrada.Pop();
					StackDeConsumo.Push(92);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado92(StackDeEntrada.Peek());
				case "(":
					//desplazamiento a d91
					//consume (
					StackDeEntrada.Pop();
					StackDeConsumo.Push(91);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado91(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d85
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(85);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado85(StackDeEntrada.Peek());
				case "!":
					//desplazamiento a d86
					//consume !
					StackDeEntrada.Pop();
					StackDeConsumo.Push(86);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado86(StackDeEntrada.Peek());
				case "New":
					//desplazamiento a d87
					//consume New
					StackDeEntrada.Pop();
					StackDeConsumo.Push(87);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado87(StackDeEntrada.Peek());
				case "this":
					//desplazamiento a d90
					//consume this
					StackDeEntrada.Pop();
					StackDeConsumo.Push(90);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado90(StackDeEntrada.Peek());
				case "intConstant":
					//desplazamiento a d93
					//consume intConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(93);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado93(StackDeEntrada.Peek());
				case "stringConstant":
					//desplazamiento a d94
					//consume stringConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(94);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado94(StackDeEntrada.Peek());
				case "boolConstant":
					//desplazamiento a d95
					//consume boolConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(95);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado95(StackDeEntrada.Peek());
				case "doubleConstant":
					//desplazamiento a d96
					//consume doubleConstant
					StackDeEntrada.Pop();
					StackDeConsumo.Push(96);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado96(StackDeEntrada.Peek());
				case "null":
					//desplazamiento a d97
					//consume null
					StackDeEntrada.Pop();
					StackDeConsumo.Push(97);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado97(StackDeEntrada.Peek());
				case "Expr":
					//irA 168
					StackDeConsumo.Push(168);
					return Estado168(StackDeEntrada.Peek());
				case "LValue":
					//irA 88
					StackDeConsumo.Push(88);
					return Estado88(StackDeEntrada.Peek());
				case "Constant":
					//irA 89
					StackDeConsumo.Push(89);
					return Estado89(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado166(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r43
					reduccion = Reducciones[43].Split('↓')[0].Trim();
					reducido = Reducciones[43].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado167(string _lookahead)
		{
			switch (_lookahead)
			{
				case ";":
					//desplazamiento a d169
					//consume ;
					StackDeEntrada.Pop();
					StackDeConsumo.Push(169);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado169(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado168(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r51
					reduccion = Reducciones[51].Split('↓')[0].Trim();
					reducido = Reducciones[51].Split('↓')[1].Trim();
					//reduccion LAMBDA a r51
					if (reducido == "''") { Simbolos += $" {reduccion}"; }
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ",":
					//desplazamiento a d165
					//consume ,
					StackDeEntrada.Pop();
					StackDeConsumo.Push(165);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado165(StackDeEntrada.Peek());
				case ".":
					//desplazamiento a d113
					//consume .
					StackDeEntrada.Pop();
					StackDeConsumo.Push(113);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado113(StackDeEntrada.Peek());
				case "-":
					//desplazamiento a d106
					//consume -
					StackDeEntrada.Pop();
					StackDeConsumo.Push(106);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado106(StackDeEntrada.Peek());
				case "/":
					//desplazamiento a d107
					//consume /
					StackDeEntrada.Pop();
					StackDeConsumo.Push(107);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado107(StackDeEntrada.Peek());
				case "%":
					//desplazamiento a d108
					//consume %
					StackDeEntrada.Pop();
					StackDeConsumo.Push(108);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado108(StackDeEntrada.Peek());
				case ">":
					//desplazamiento a d109
					//consume >
					StackDeEntrada.Pop();
					StackDeConsumo.Push(109);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado109(StackDeEntrada.Peek());
				case ">=":
					//desplazamiento a d110
					//consume >=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(110);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado110(StackDeEntrada.Peek());
				case "!=":
					//desplazamiento a d111
					//consume !=
					StackDeEntrada.Pop();
					StackDeConsumo.Push(111);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado111(StackDeEntrada.Peek());
				case "||":
					//desplazamiento a d112
					//consume ||
					StackDeEntrada.Pop();
					StackDeConsumo.Push(112);
					Simbolos += $" { _lookahead} ";
					Simbolos = Simbolos.Trim();
					return Estado112(StackDeEntrada.Peek());
				case "ExPrint":
					//irA 170
					StackDeConsumo.Push(170);
					return Estado170(StackDeEntrada.Peek());
				default:
					Err(); return false;
			}
		}
		public bool Estado169(string _lookahead)
		{
			switch (_lookahead)
			{
				case "ident":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case ";":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "(":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "{":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "}":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "if":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "while":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "for":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "break":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "return":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "System":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "else":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "-":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "!":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "New":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "this":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "intConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "stringConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "boolConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "doubleConstant":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				case "null":
					//reduccion a r46
					reduccion = Reducciones[46].Split('↓')[0].Trim();
					reducido = Reducciones[46].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}
		public bool Estado170(string _lookahead)
		{
			switch (_lookahead)
			{
				case ")":
					//reduccion a r50
					reduccion = Reducciones[50].Split('↓')[0].Trim();
					reducido = Reducciones[50].Split('↓')[1].Trim();
					//if (Simbolos.Contains(reducido.Trim()))//{    Simbolos = Simbolos.Replace(reducido, reduccion);//}//else//{
					SimbolosQueSeQuedan = Simbolos.Trim().Split(' ').Length - reducido.Trim().Split(' ').Length;
					aux = "";
					for (int i = 0; i < SimbolosQueSeQuedan; i++)
					{
						aux += $" { Simbolos.Trim().Split(' ')[i]}";
						aux = aux.Trim();
					}
					aux += $" { reduccion}";
					aux = aux.Trim();
					Simbolos = aux;//}
					unStack = reducido.Split(' ').Length;
					//quitando pasos de la stack;
					for (int i = 0; i < unStack; i++)
					{
						StackDeConsumo.Pop();
					}
					return IrA(StackDeConsumo.Peek(), reduccion);
				default:
					Err(); return false;
			}
		}

		#endregion

	}
}
